{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/gui/list/feature/paging/gui-list.paging.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/card/gui.list-card.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode.ts","ng://@generic-ui/ngx-list/l10n/core/domain/lang/en.ts","ng://@generic-ui/ngx-list/l10n/core/api/default-translation.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.public-api.ts","ng://@generic-ui/ngx-list/gui/list/feature/mode/gui-list.mode.converter.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.id.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.command-invoker.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.providers.ts","ng://@generic-ui/ngx-list/common/cdk/dom/core/modifier.ts","ng://@generic-ui/ngx-list/common/cdk/dom/class/class-modifier.ts","ng://@generic-ui/ngx-list/common/cdk/component/gui-component.ts","ng://@generic-ui/ngx-list/common/cdk/component/smart-component.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.warehouse.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-list/common/cdk/reactive/stream-closer.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.modifier.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.ts","ng://@generic-ui/ngx-list/common/cdk/component/pure-component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.event-repository.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.domain-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/api/structre.key.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.domain-module.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.converter.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain-read/paging.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.domain.command-invoker.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain-read/paging.domain.event-repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.api-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.api-module.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.facade.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.pipe.ts","ng://@generic-ui/ngx-list/l10n/core/domain/dictionary.ts","ng://@generic-ui/ngx-list/l10n/core/domain/translation.domain-facade.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.feature-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.global-id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.command-invoker.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/config/filter-container-token.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.id.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.id.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/common/cdk/component/layout-component.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-view-source.component.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view.mode.archive.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view.selector.archive.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.warehouse.ts","ng://@generic-ui/ngx-list/structure/list/feature/layout/list-view-layout.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-item/list-view-item.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/empty/empty-source.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/empty/empty-source.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/list-view.container-card.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/card-item/list-view.card-item.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container/select/list-view.container-mode-select.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/selector-visibility.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.store.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.event-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-module.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view-selector-toggled.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/component/gate.ts","ng://@generic-ui/ngx-list/structure/paging/feature/gate/paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gate/paging/list-view-paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gate/mode/list-view-mode.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gate/template/list-view-template.gate.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.command-invoker.ts","ng://@generic-ui/ngx-list/structure/list/feature/gate/field/list-view-field.gate.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.command-invoker.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.event-repository.ts","ng://@generic-ui/ngx-list/structure/search/feature/gate/searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gate/searching/list-view-searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gate/l10n/list-view-l10n.gate.ts","ng://@generic-ui/ngx-list/structure/source/feature/gate/source.gate.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/editem-item.values.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/source-event.service.ts","ng://@generic-ui/ngx-list/structure/list/feature/gate/source/list-view-source.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gate/list-view.gates.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/phrase/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/phrase/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/phrase/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-type.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager-factory.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.dispatcher.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/phrase/search-phrase.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/enabled/searching-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.domain-module.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/domain-read/search.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/domain-read/search.domain-event-repository.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.domain-command-invoker.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/component/static-component.ts","ng://@generic-ui/ngx-list/common/cdk/component/icon-component.ts","ng://@generic-ui/ngx-list/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.component.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.feature-module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/icon/filter-icon.component.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field-read-model.archive.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/filter-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/quick-filter-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type-map.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.archive.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.archive.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.archive.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.command-invoker.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.settings.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.domain-module.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.api-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.feature-module.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/schema/core/api/theme/schema-theme.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-list/schema/core/api/row-coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.command-invoker.ts","ng://@generic-ui/ngx-list/schema/core/api/row-coloring/row-coloring.ts","ng://@generic-ui/ngx-list/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/schema-manager.module.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter.service.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/source-counter.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-definition.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/structure.gateway.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/selected-row.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/common/cdk/component/dynamically-created-component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.command-invoker.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.api-module.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.read-model.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.ui-converter.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/base-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.type.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.id.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field-id.generator.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field.domain-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.api-module.ts","ng://@generic-ui/ngx-list/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/api/row-selection.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/api/read/source.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.converter.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-id.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/structure.source-origin.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-items.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-module.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain-read/source.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.api-module.ts","ng://@generic-ui/ngx-list/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-class.archive.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-style.archive.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/schema/core/api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.key.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-module.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-command-invoker.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/schema.domain-warehouse.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-event-repository.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.api-module.ts","ng://@generic-ui/ngx-list/schema/feature/schema.feature-module.ts","ng://@generic-ui/ngx-list/common/cdk/dom/style/style-name.ts","ng://@generic-ui/ngx-list/common/cdk/dom/style/style-modifier.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.initial-values-ready.archive.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.command-invoker.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.event-repository.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/enabled/summaries-enabled-archive.service.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.providers.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.domain-module.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.warehouse.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/config/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/config/structure.summaries-config.archive.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain-read/summaries.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/config/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.domain-command-invoker.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain-read/summaries.domain-event-repository.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.api-module.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/structure.summaries-translations.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/panel/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/summaries.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure.component.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-align.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-config.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-value.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/composition/core/api/column/column.id.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/common/cdk/resize-detector/resize.detector.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure-tokens.ts","ng://@generic-ui/ngx-list/structure/grid/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-range.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/structure.sorter.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorter.id.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorter.collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.domain-command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/trigger/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/structure-banner-panel.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/select-all/select-all.component.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/vertical-formation.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.api-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/feature/vertical-formation.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.key.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/empty-group.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/composition.group.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.events.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/composition.groups-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/template/template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-context.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.ts","ng://@generic-ui/ngx-list/composition/core/api/column/column-definition-id.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/highlight/column-highlight.manager.ts","ng://@generic-ui/ngx-list/composition/core/domain/highlight/column-highlight.archive.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-module.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.collection.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/group/composition-group.archive.ts","ng://@generic-ui/ngx-list/composition/core/domain/compositon.domain-command-invoker.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-event-repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.domain-warehouse.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/feature/column/column-query.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/composition/feature/composition.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/group/structure-header-groups.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/searching/structure-searching.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/header/structure-column-header.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/paging/structure-paging.gate.ts","ng://@generic-ui/ngx-list/structure/source/feature/gate/selection.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/source/structure-selection.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/l10n/structure-l10n.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/panel/structure-panel.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/detail/structure-row-detail.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/menu/structure-column-menu.gate.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/gate/structure-summaries.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/panel/info/structure-info-panel.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/class/structure-row-class.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/coloring/structure-row-coloring.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/style/structure-row-style.gate.ts","ng://@generic-ui/ngx-list/schema/feature/gate/grid/theme-grid.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/source/source-loading.gate.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/feature/gate/vertical-formation.gate.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/gate/structure-sorting.gate.ts","ng://@generic-ui/ngx-list/structure/filter/feature/gate/structure-filter.gate.ts","ng://@generic-ui/ngx-list/structure/filter/feature/gate/structure-quick-filters.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/structure.gates.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.module.ts","ng://@generic-ui/ngx-list/structure/common/structure-shared.module.ts","ng://@generic-ui/ngx-list/common/cdk/resize-detector/resize-detector.module.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","BASIC","ADVANCED","GuiListPagingConverter","convert","guiListPaging","pagingConfig","undefined","enabled","page","pageSize","pageSizes","pagerTop","pagerBottom","displayMode","PagingDisplayMode","GuiListCardComponent","LIST","CARD","enTranslation","sourceEmpty","pagingItemsPerPage","pagingOf","pagingNextPage","pagingPrevPage","pagingNoItems","infoPanelShowing","infoPanelItems","infoPanelOutOf","infoPanelThemeMangerTooltipText","infoPanelColumnManagerTooltipText","infoPanelInfoTooltipText","themeManagerModalTitle","themeManagerModalTheme","themeManagerModalRowColoring","themeManagerModalVerticalGrid","themeManagerModalHorizontalGrid","columnManagerModalTitle","headerMenuMainTab","headerMenuMainTabColumnSort","headerMenuMainTabHideColumn","headerMenuMainTabHighlightColumn","headerMenuMainTabMoveLeft","headerMenuMainTabMoveRight","headerMenuMainTabColumnSortAscending","headerMenuMainTabColumnSortDescending","headerMenuMainTabColumnSortNone","headerMenuFilterTab","headerMenuColumnsTab","summariesCount","summariesDist","summariesSum","summariesAvg","summariesMin","summariesMax","summariesMed","summariesTruthy","summariesFalsy","summariesDistinctValuesTooltip","summariesAverageTooltip","summariesMinTooltip","summariesMaxTooltip","summariesMedTooltip","summariesCountTooltip","defaultTranslation","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","GuiListDefaultTranslation","GuiListModeConverter","mode","GuiListMode","ListViewMode","ListViewCardTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","ListViewTemplate","GuiListGateway","pageChanged","EventEmitter","pageSizeChanged","searchPhraseChanged","guiListPagingConverter","guiListModeConverter","ngOnChanges","changes","templateRef","listItem","containerTemplate","cardTemplateRef","listCard","listCardTemplate","cardTemplate","paging","currentValue","view","active","listViewMode","listViewModeSelector","fields","listFields","map","f","field","type","searching","searchConfig","Input","Output","guiListProviders","GuiListComponent","platformId","_this","_super","tslib_1.__extends","onPageChange","emit","onPageSizeChange","onSearchPhraseChange","phrase","providers","host","[class.gui-list]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","StructureIdGenerator","increment","generateId","StructureCommandInvoker","Injectable","ListViewTemplateArchive","Archive","ListViewCardTemplateArchive","listViewProviders","Modifier","hostElement","getElement","htmlElement","createModifier","getHost","Error","ClassModifier","_a","class_1","add","classes","_i","addClassToDomElement","remove","removeClassFromDomElement","clear","removeAttribute","CLASS","classList","GuiComponent","innerElementRef","innerClassModifier","nativeElement","addHostClass","addClassToHost","className","removeClassFromHost","hasChanged","prop","getSelectorName","SmartComponent","detector","elementRef","viewInDom","hermesUnsubscribe$","HermesSubject","ngAfterViewInit","ngOnDestroy","hermesUnsubscribe","reRender","isViewInDom","detectChanges","hermesSubscribe","stream$","callback","pipe","hermesTakeUntil","subscribe","streamValues","hermesSubscribeWithoutRender","subscribeAndEmit","emitter","mapper","unsubscribe","complete","PagingWarehouse","PagingCommandInvoker","SourceWarehouse","PagingDisplayModeArchive","TOP","BOTTOM","StreamCloser","unsubscribe$","takeUntil","isCompleted","CssClassModifier","classModifier","select","CssClass","unselect","clazzName","toggle","PagingComponent","elRef","changeDetectorRef","cssClassModifier","structureId","pagingWarehouse","pagingCommandInvoker","sourceWarehouse","pagingDisplayModeArchive","alternativeDisplay","isPagingVisible","localStreamCloser","position","PagingPosition","ngOnInit","on","onPaging","calculatePagingVisibility","onOriginSize","size","sourceSize","changePageSize","nextPage","prevPage","isEnabled","isPagerTop","isPagerBottom","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSize","getPageSizes","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","currentPage","numberOfVisiblePages","sample","source","slice","compare","JSON","stringify","ReadModelObject","Boolean","Number","PureComponent","subClassConstructor","subClassNgOnInit","hasConstructorOnlyElementRefInjected","throwError","isElementRef","reason","name","PagingSelectComponent","selectPageSizes","getSelectPageSizes","selectPageSize","getSelectPageSize","forEach","selectOption","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","goToPage","lastPage","numberOfPages","Math","ceil","AlternativePagingPagesComponent","pagingCommandService","calculate","pages","isSourceNotEmpty","pageNumber","activePage","PagingEventRepository","domainEventBus","DomainEventBus","EventRepository","StructureDomainEvent","DomainEvent","PageChangedEvent","aggregateId","StructureAggregateEvent","AggregateEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","logger","events","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","clearEvents","PagingManagerFactory","createDefault","createFromConfig","config","Logger","StructureCommand","Command","SetPagingCommand","getPagingConfig","ChangePagesizeCommand","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","CommandDispatcher","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","handle","structureAggregate","command","changePaging","publish","aggregate","DomainEventPublisher","NextPageEvent","NextPageCommandHandler","PrevPageEvent","PrevPageCommandHandler","structure","ChangePagesizeCommandHandler","aggregateEvents","getEvents","event","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","getType","pageChangedEvent","pagesizeChangedEvent","structureKey","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingConverter","StructureReadModelRepository","ofEvent","forEvents","subs","console","Reactive","PagingRepository","structureRepository","hermesFilter","hermesMap","getPaging","PagingDomainWarehouse","pagingRepository","oncePaging","hermesTake","PagingDomainCommandInvoker","pagingDispatcher","enable","disable","changePagerTop","changePagerBottom","PagingDomainEventRepository","eventBus","hermesSwitchMap","PagingApiModule","provide","useClass","ApiModule","PagingNavigatorComponent","PagingStatsComponent","firstItemIndex","lastItemIndex","TranslationApiModule","TranslationPipe","translationService","actualTranslationValue","subscription","transform","onTranslation","translation","markForCheck","Pipe","pure","TranslationFacade","Dictionary","Map","resolver","changeTranslation","_b","keys","_c","set","getTranslation","from","reduce","obj","setResolver","TranslationDomainFacade","dictionary","dictionary$","HermesReplaySubject","toObservable","setDefaultTranslation","changeTranslationAndPropagate","setResolverAndPropagate","TranslationFeatureModule","apiModule","forComponent","entryComponents","Optional","FeatureModule","PagingFeatureModule","pagingApiModule","FabricModule","ListViewId","ListViewReadModelRootId","CreateListViewCommand","listViewId","CreateAggregateCommand","ListViewCommand","SetListViewModeCommand","getMode","ToggleListViewSelectorCommand","iseEnabled","ListViewDispatcher","setMode","toggleSelector","listViewGlobalId","ListViewCommandInvoker","listViewDispatcher","listViewReadModelRootId","filterContainerToken","InjectionToken","CompositionReadModelRootId","CompositionId","SchemaId","SchemaReadModelRootId","LayoutComponent","listViewIdFactoryForList","generator","structureIdFactoryForList","compositionIdFactoryForList","schemaIdFactoryForList","componentListProviders","useFactory","deps","ListViewComponent","structureCommandService","listViewCommandDispatcher","getElementRef","useExisting","[id]","ListViewSourceComponent","structureSourceWarehouse","containerTemplateArchive","onEntities","items","getSourceItem","ListViewModeArchive","AggregateArchive","ListViewSelectorArchive","ListViewWarehouse","listViewModeArchive","listViewSelectorArchive","onMode","onSelector","ListViewLayoutComponent","listViewWarehouse","listModeEnabled","cardModeEnabled","selectorEnabled","searchBarEnabled","ListViewItemComponent","context","item","EmptySourceComponent","EmptySourceFeatureModule","ListViewContainerCardComponent","listCardTemplateArchive","ListViewCardItemComponent","ListViewContainerModeSelectComponent","listViewModeRepository","options","filter","val","isInteger","toGuiSelectOption","listContainerMode","changeContainerMode","selectedMode","toListViewMode","ListViewDomainEvent","ListViewCreatedEvent","ListViewAggregateEvent","ListViewCreatedAggregateEvent","ListViewModeSetEvent","schemaId","getTheme","ListViewModeSetAggregateEvent","SelectorVisibility","visible","isVisible","setEnabled","setVisible","ListViewSelectorToggledEvent","ListViewSelectorToggledAggregateEvent","ListViewAggregate","initSelectorVisibility","createEvent","addEvent","toggleModeSelector","selectorVisibility","emitEventAfterSelectorVisibilityChange","AggregateRoot","ListViewAggregateFactory","AggregateFactory","CreateListViewCommandHandler","InMemoryListViewStore","InMemoryStore","InMemoryListViewAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","ListViewAggregateRepository","InMemoryListViewAggregateRepository","inMemorySchemaAggregateStore","findById","save","listViewAggregate","ListViewEventRepository","onModeChange","onEvent","SetListViewModeCommandHandler","publishFromAggregate","ToggleListViewSelectorCommandHandler","ListViewDomainModule","listViewKey","ListViewModeSetEventHandler","forEvent","ofMessageType","ListViewSelectorToggledEventHandler","listViewSelectorRepository","ListViewApiModule","defineAggregate","registerDomainEventHandler","Gate","streamCloser","isDefined","propertyName","PagingGate","compositionId","pagingEventRepository","ListViewPagingGate","structurePagingCommandDispatcher","Directive","ListViewModeGate","modeSelector","ListViewTemplateGate","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldCommandInvoker","initFields","ListViewFieldGate","fieldCommandDispatcher","SearchCommandInvoker","SearchEventRepository","SearchingGate","searchEventRepository","searchCommandInvoker","setSearchingConfig","onSearchPhrase","ListViewSearchingGate","ListViewL10nGate","localization","translationResolver","SourceGate","sourceCommandInvoker","sourceEventService","sourceEdited","setOrigin","onSourceEdited","SourceCommandInvoker","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","ListViewSourceGate","sourceCommandService","listViewGatewayDeclarations","SetConfigSearchingCommand","getConfig","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchPhraseSetDomainEvent","OriginSetEvent","origin","getOrigin","StructureSummariesChangedEvent","values","getSummaries","StructurePreparedEntitiesSetEvent","preparedItems","getPreparedItems","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","DataType","searchPhrase","searchableFields","some","dt","getDataType","removeSearchFilters","search","entities","searchedItems","Set","this_1","SearchManagerFactory","SearchHighlightArchive","HIGHLIGHTING","SearchPlaceholderArchive","PLACEHOLDER","SearchDispatcher","searchHighlightArchive","searchPlaceholderArchive","highlighting","placeholder","searchOnInit","SearchPhraseArchive","SEARCH_PHRASE","SearchPhraseSetEventHandler","searchPhraseRepository","SearchingEnabledArchive","ENABLED","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","domainEventHandlers","SearchWarehouse","SearchDomainWarehouse","searchingEnabledArchive","searchPhraseArchive","onSearchEnabled","onPhrase","onHighlight","onPlaceholder","SearchDomainEventRepository","SearchDomainCommandInvoker","searchDispatcher","SearchApiModule","StaticComponent","detach","IconComponent","SearchIconComponent","StructureWarehouse","SearchComponent","formBuilder","searchCommandDispatcher","structureWarehouse","searchWarehouse","controlsConfig","FORM_SEARCH_NAME","searchForm","group","observeChanges","searchingEnabled","get","stopObserveChanges","setValue","reset","searchInputSubscription","fromRxJsObservable","controls","valueChanges","debounceTime","FormBuilder","ViewChild","SearchFeatureModule","searchApiModule","ReactiveFormsModule","SortingSelectorComponent","sortingOptions","selectedSorting","changeSorting","sorting","SortingSelectorFeatureModule","FabricSelectModule","FilterIconComponent","CompositionWarehouse","FieldReadModelArchive","FieldWarehouse","fieldReadModelArchive","onFields","FilterEnabledArchive","QuickFilterEnabledArchive","FilterTypeMap","getFilterTypes","fieldId","FilterTypeArchive","ActiveFilterArchive","UniqueValuesReadModel","allSelected","allDisabled","calculateSelection","getValues","areAllSelected","areAllDisabled","isSelectAllChecked","isIndeterminate","UniqueValuesArchive","FilterWarehouse","filterEnabledArchive","structureQuickFilterRepository","filterTypeArchive","uniqueValuesArchive","activeFilterArchive","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","SetConfigFilterCommand","filterConfig","RemoveAllFiltersCommand","AddFilterCommand","filterTypeId","getFieldId","getFilterTypeId","getValue","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","FilterMenuComponent","fieldWarehouse","filterWarehouse","filterCommandDispatcher","compositionWarehouse","columns","activeFilters","filterTypeMap","fieldReadModels","onHeaderColumns","onColumnSelect","selectedColumn","filterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","FilterMenuTriggerComponent","injector","drawerService","filterContainerRef","openDrawer","open","Injector","FabricDrawerService","ColumnSelectorComponent","columnSelected","onSelectChange","column","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","valueChanged","FORM_FILTER_VALUE","filterForm","FieldSelectorComponent","fieldSelected","ToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","FilterToggledEvent","ToggleFilterCommandHandler","externalFieldId","toggleFilter","AddFilterCommandHandler","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","getEnabled","SetConfigFilterCommandHandler","setFilterConfig","SetConfigQuickFilterCommand","quickFiltersConfig","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","setQuickFiltersConfig","Filter","FilterSettings","filteringEnabled","searchEnabled","quickFiltersEnabled","isFilteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","entity","ContainsFilterType","getName","includes","FilterTypeId","FilterTypeIdGenerator","generate","index","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","addFields","getFilterType","getFieldIdsToFilterTypes","readModels","fields_1","fields_1_1","addField","dataType","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","filters","getSettings","getAll","arr","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","ConfigQuickFilterSetEventHandler","ConfigFilterSetEventHandler","structureFilterRepository","FilterTypesInitedEvent","getMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEvent","getFilters","ActiveFiltersSetEventHandler","activeFilterRepository","activeFiltersSetEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueValueReadModel","geDisplayValue","displayValue","UniqueFilterCalculatedEventHandler","uniqueValuesRepository","calculatedEvent","uvRM_1","valuesRM","uv","getDisplayValue","uniqueValues","FieldsInitedEvent","getFields","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","FilterApiModule","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","ActiveFilterListComponent","ActiveSearchComponent","clearSearch","stopPropagation","ActiveFilterListModule","filterApiModule","FilterMenuFeatureModule","exportDeclarations","ListViewFeatureModule","NumberFormatterPipe","number","replace","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","StructureThemeConverter","convertTheme","schemaTheme","SchemaTheme","Theme","SchemaWarehouse","StructureDialogColumnManagerService","schemaWarehouse","structureThemeConverter","fabricDialogService","readModelId","parentInjector","parent","useValue","onceTheme","theme","FabricDialogService","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","schemaReadModelRootId","menuColumnManagerService","schemaManagerService","structureInfoPanelArchive","infoModal","infoPanel","infoPanelConfig","totalItemsSize","onPreparedEntities","preparedItemsSize","themeManagerTooltipText","columnManagerTooltipText","infoTooltipText","openInfo","openColumnManager","openSchemaManager","CompositionCommandInvoker","StructureColumnManagerComponent","compositionCommandInvoker","onAllColumns","enabledColumnsCount","accumulator","toggleColumn","disableColumn","getColumnDefinitionId","enableColumn","StructureMenuColumnManagerComponent","StructureColumnManagerIconComponent","StructureColumnManagerModule","StructureInfoIconComponent","cdr","StructureInfoPanelConfigConverter","NONE","EVEN","ODD","SchemaCommandInvoker","StructureSchemaMangerComponent","schemaCommandInvoker","coloring","SchemaRowColoring","themes","onRowColoring","rowColoring","selectedRowColoring","onTheme","selectedTheme","onVerticalGrid","verticalGrid","onHorizontalGrid","horizontalGrid","toggleTheme","setTheme","toTheme","toggleRowColoring","schemaRowColoring","setRowColoring","toRowColoring","toggleVerticalGrid","setVerticalGrid","toggleHorizontalGrid","setHorizontalGrid","toLowerCase","RowColoring","StructureSchemaManagerIconComponent","SchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","schemaReadModelRepository","ActiveFilterMenuTriggerDirective","el","activeFilterService","SourceCounterFeatureModule","StructureInfoPanelModule","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","withEnabled","PagingDefinition","StructurePagingDefinitionDefaultBuilder","defaultEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","SchemaCssClassManager","cssClass","init","cssHostRef","onCssClasses","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","structureComponentToken","ENTER","SUBMIT","CANCEL","ColumnFieldId","ColumnParams","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","setGroups","getConfigs","groups","initCommand","columnFieldIds","convertColumnFieldIds","params","convertColumns","setColumns","configs","columnConfigs","groupConfigs","matcher","summaries","columnFieldId","columnField","getAccessorMethod","getSearchAccessorMethod","StructureGateway","structureCommandInvoker","sortingCommandDispatcher","compositionCommandDispatcher","compositionEventRepository","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","schemaRowClassArchive","schemaRowStyleArchive","formationCommandDispatcher","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","structureInitialValuesReadyArchive","themeChanged","columnsChanged","containerWidthChanged","cellEditEntered","cellEditCanceled","cellEditSubmitted","changeAfterInit","structureColumnInputHandler","editMode","cellEditing","width","setWidth","rowHeight","setRowHeight","autoResizeWidth","setResizeWidth","maxHeight","setContainerHeight","onColumnsChanged","onContainerWidthChanged","containerWidth","state","StructureCellEditState","onThemeChanged","componentInitialized","CompositionEventRepository","SelectedRow","itemId","getSource","getIndex","getItemId","SelectedRowChangedEvent","selectedRows","allUnselected","getSelectedRows","isAllSelected","isAllUnselected","FormationEventRepository","subject$","selectedItems","itemsMap","j","onItemSelected","has","StructureColumnMenuConfig","sort","mainMenu","filterMenu","columnsMenu","isMainEnabled","isSortingEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","setMainMenu","setFilterMenu","setColumnsMenu","StructureColumnMenuConfigArchive","nextConfig","menuConfig","RowSelectEnabledRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaEventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","DynamicallyCreatedComponent","hasInputs","isEmpty","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValue","DomSanitizer","StructureRowDetailService","ref","turnOn","turnOff","close","StructureTitlePanelConfigArchive","titlePanelConfig","StructureFooterPanelConfigArchive","footerPanelConfig","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","getCompositionId","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","setSortingConfig","toggleSort","setSortOrder","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","sortingApiModule","FieldReadModel","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","Field","of","dataField","getKey","getAccessor","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","getSearchMatcher","ifPresent","getSortMatcher","getSearchValue","DataField","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","summariesTypes","setSummariesEnabled","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownDataField","SummariesType","one","two","equals","NumberDataField","numOne","numTwo","StringDataField","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldId","FieldIdGenerator","RandomStringGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","createFields","FieldsInitedEventHandler","fieldReadModelRepository","fieldUiConverter","FieldDomainModule","FieldApiModule","FieldFeatureModule","fieldApiModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","toggleSelectedRow","SetEnabledSelectionCommand","SetSelectionModeCommand","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","selectAll","unselectAll","ROW","CHECKBOX","SINGLE","MULTIPLE","RowSelection","isModeDefined","isTypeDefined","isEnabledDefined","RowSelectionBuilder","withType","withMode","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","RowSelectionType","Source","loading","isLoading","SourceConverter","SetSourceLoadingEvent","SourceSetLoadingCommand","SourceSetLoadingCommandHandler","setLoading","SetOriginCommand","getItems","SetOriginCommandHandler","StructureEditSourceItemCommand","getParams","StructureEditSourceItemCommandHandler","editItem","SourceDispatcher","OriginItemEntity","sourceItem","version","getVersion","getPosition","bumpVersion","setPosition","clone","rawData","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","EntityId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","ent","recalculatePositions","getEntities","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","payload","isArray","deleteOneOriginItem","deleteOriginItemByIndex","addOriginItem","toggleRow","getFormation","findOriginItemIndex","findIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","calculateAllUnselected","deleteManyOriginItemByIndex","indexes","deleteManyOriginItemByItemID","itemIds","ADD","RANGE","FormationManager","RowSelectionMode","allItemIds","RowSelectToggleType","delete","rows","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedRepository","RowSelectedReadModel","isSelected","SelectedRowChangedEventHandler","rowSelectedRepository","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","RowSelectionModeRepository","SelectionModeSetEventHandler","rowSelectionModeRepository","modeSetEvent","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","byIndex","DeleteCommandPayloadType","byManyIndex","byItemId","byManyItemId","getPayload","DeleteOriginItemCommandHandler","deleteItem","StructureSourceOriginArchive","StructureOriginChangedEventHandler","structureSourceOriginRepository","origin_1","StructurePreparedItemsArchive","getValueOrNullOrThrowError","StructurePreparedItemsEventHandler","structurePreparedItemsRepository","SourceDomainModule","FormationWarehouse","selectedItemIds","getSelectedItemIds","onRowSelectedReadModel","onSelectedRows","rm","SourceDomainWarehouse","getStructure","hermesDistinctUntilChanged","ents1","ents2","flag","onEntitiesSize","onceEntities","onLoading","StructureEditSourceItemParams","getColumnFieldId","SourceDomainCommandInvoker","sourceDispatcher","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","toRxJsObservable","fieldId$","zip","array","deleteRow","row","deleteItemById","deleteItemByIndex","deleteRows","deleteManyItemsByItemIds","deleteManyItemsByIndex","SourceApiModule","SourceFeatureModule","sourceApiModule","SchemaRowClassArchive","SchemaRowStyleArchive","SchemaDomainEvent","SchemaThemeSetEvent","SchemaAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetEvent","getRowColoring","RowColoringSetAggregateEvent","SchemaVerticalGridSetEvent","getVerticalGrid","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","SchemaAggregateFactory","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","InMemorySchemaAggregateRepository","schemaAggregate","CreateSchemaCommand","CreateSchemaCommandHandler","SchemaCommand","SetSchemaThemeCommand","SetSchemaThemeCommandHandler","SetRowColoringCommand","getColoring","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommand","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommand","SetSchemaVerticalGridCommandHandler","SchemaCssClassesRepository","SchemaCssClass","SchemaCssClassesEventHandler","schemaCssClassesRepository","schemaKey","SchemaVerticalGridRepository","EventDrivenRepository","SchemaThemeRepository","SchemaRowColoringRepository","SchemaHorizontalGridRepository","SchemaDomainModule","registerMultiDomainEventHandler","SchemaDispatcher","SchemaDomainCommandInvoker","schemaDispatcher","fabricModalThemeService","toFabricTheme","setRowHeightBasedOnTheme","toSchemaRowColoring","FabricModalThemeService","SchemaDomainWarehouse","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","SchemaDomainEventRepository","onHorizontalGridChanged","onVerticalGridChanged","SchemaApiModule","SchemaFeatureModule","schemaApiModule","StyleModifier","setStyleByName","StyleName","toPx","setHeight","setPaddingTop","styleName","STYLE","removeStyleByName","StructureInitialValuesReadyArchive","v","once","SummariesCommandInvoker","SummariesEventRepository","StructureSetSummariesEnabledCommand","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","StructureSummariesChangedAggregateEvent","summarizedValues","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","aggregatedValues","update","SummariesEnabledArchive","StructureSummariesEnabledSetEventHandler","summariesEnabledArchive","SummariesCalculator","filteredFields","forDataType","count","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","sum","min","max","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","floor","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManagerFactory","provideSummariesCalculator","clazz","multi","summariesProviders","SummariesDomainModule","SummariesWarehouse","StructureSummariesPanelConfig","top","defaultTop","bottom","defaultBottom","setTop","setBottom","isTopEnabled","isBottomEnabled","StructureSummariesConfigArchive","SummariesDomainWarehouse","structureSummariesArchive","onEnabled","onBottomEnabled","onTopEnabled","StructureSummariesPanelConfigConverter","panelConfig","SummariesDomainCommandInvoker","configConverter","structureSummariesConfigArchive","setConfig","summariesPanelConfig","SummariesDomainEventRepository","onSummariesChanged","SummariesApiModule","SummariesTranslations","distinctTooltip","averageTooltip","minTooltip","maxTooltip","medTooltip","countTooltip","StructureSummariesPanelComponent","structureSummariesEventRepository","checkboxSelection","headerColumns","summariesTranslations","isSummariesTypePresent","SummariesFeatureModule","summariesApiModule","structureIdFactoryForGrid","compositionIdFactoryForGrid","schemaIdFactoryForGrid","structureComponentSelfProviders","StructureComponent","sourceCommandDispatcher","schemaCommandDispatcher","detectorRef","structureDefinition","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","styleModifier","structureReadModelRoot","isLoaderVisible","offsetWidth","setContainerWidth","hermesTimer","onWidth","getStructureId","[class.gui-structure-border]","ASC","DESC","RIGHT","CENTER","LEFT","CellTemplateWithContext","viewTemplate","editTemplate","columnDefinitionId","sortStatus","sortable","align","getSortStatus","isSortEnabled","isAscSort","SortOrder","isDescSort","isNoSort","isAlignLeft","ColumnAlign","isAlignCenter","isAlignRight","StructureColumnConfigComponent","compositionReadModelService","translationFacade","structureColumnConfigService","StructureColumnConfigService","uniqueValuesReadModel","setTabTitles","dropdownTextTranslation","hideColumn","moveLeft","moveRight","highlightColumn","inlineDialogService","placement","FabricPlacement","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","structureFilterCommandService","cd","closed","filterFieldName","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","VerticalFormationWarehouse","StructureHeaderComponent","structureVerticalFormationWarehouse","filterRowEnabled","showGroups","onContainerWidth","containerRef","onGroups","collection","getGroups","onRowHeight","headerHeight","filtersRef","read","ChangedValueEmitter","StructureHeaderFilterComponent","sub","editContext","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","getRowHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","getUiId","isEven","isOdd","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","StructureHeightSetEvent","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","onVerticalScrollEnabled","onVerticalFormation","onContainerHeight","onTopMargin","idToVerticalFormation","StructureContentComponent","formationCommandService","formationWarehouse","verticalFormationRepository","rowDetailOpened","schemaRowClass","schemaRowStyle","combineLatest","trackByFn","translateY","StructureRowComponent","detailsEnabled","selectedItem","checkSelectedItem","updateRowClass","previousValue","updateRowStyle","rowClass","rowStyle","prevValue","selectRow","calculateRowStyle","style","styleFunction","prevEntity","rowStylesToRemove","removeRowStyles","rowStylesToAdd","renderRowStyles","styles","split","separatedStyles","trim","toRemoveClass","calculateRowClass","toAddClass","class","classFunction","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","FUNCTION","BAR","PERCENTAGE_BAR","PERCENTAGE","NG_TEMPLATE","HTML","CellValue","text","CellValueType","CellTemplateWithAccessor","editable","templateFun","formatterFun","cellEditingEnabled","isCellEditingEnabled","isBooleanDataType","cellValue","findValue","getClasses","getCellView","CellView","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","BLUR","ColumnId","StructureCellComponent","cellEditCloseAllService","inEditMode","onHighlightedColumn","cell","isHighlighted","exitEditMode","enterEditMode","forceCheck","valueChanges$","status$","status","focus","observeFieldStatus","observeValueChanges","publishEditEnter","submitChangesAndExit","updatedValue","actualValue","EditEventType","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","ResizeDetector","isPlatformBrowser","Observable","observer","resizeObserver","ResizeObserver","entries","contentRect","observe","disconnect","throttleTime","hermesEmpty","destroy","StructureContainerComponent","ngZone","verticalFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","flatMap","onTemplateColumns","onResizeWidth","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","onScrollBarPosition","scrollPosition","scrollTop","height","runOutsideAngular","hermesFromEvent","setScrollPosition","NgZone","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","summariesWarehouse","topSummariesPanelEnabled","bottomSummariesPanelEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanel","titlePanelEnabled","footerPanel","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterAddedEvent","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","hermesStructure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getVisibleContainerHeight","getHeight","getContainerHeight","DomainObject","ScrollBarPositionSetEvent","ScrollBarPositionSetAggregateEvent","VerticalFormation","hiddenItemsTop","hiddenItemsBottom","VerticalFormation_1","ROW_HEIGHT","HIDDEN_ITEMS_TOP","HIDDEN_ITEMS_BOTTOM","container","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","setTopHiddenItemsCount","setBottomHiddenItemsCount","scrollToIndex","setViewportHeight","setLogger","VerticalFormationFactory","vf","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureCreatedAggregateEvent","Override","getPrototypeOf","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","setVerticalFormationEnabled","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","calculateSourceBasedOnVirtualScroll","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","searchedEntities","filterAll","ents","ae","calculateAll","tslib_1.__decorate","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","getNotSelected","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","a","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","StructureCreatedEventHandler","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollBarPositionCommand","SetScrollPositionCommand","SetRowHeightCommand","StructureSetHeightCommand","SetRowHeightBasedOnThemeCommand","StructureDomainCommandInvoker","enableVirtualScroll","disableVirtualScroll","scrollToTop","scrollToBottom","commandProviders","readProviders","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","onSortOrder","isNoneSort","StructureColumnConfigColumnHideComponent","columnHidden","StructureColumnConfigColumnMoveComponent","movedLeft","movedRight","StructureColumnMenuIconComponent","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","filterCommandInvoker","selectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","CreateStructureCommandHandler","getAggregateRepository","publishDomainEvents","StructureCellEditComponent","initEditContext","cellContainerRef","StructureCellEditBooleanComponent","submitChanges","StructureBannerPanel","onBannerPanelConfig","bannerPanel","StructureTitlePanelComponent","getPanelTitle","StructureFooterPanelComponent","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","SetScrollPositionCommandHandler","SetVerticalScrollEnabledCommandHandler","SetRowHeightBasedOnThemeCommandHandler","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","VerticalFormationScrollBarPositionArchive","DEFAULT_POSITION","ScrollBarPositionSetEventHandler","positionRepository","SetScrollBarPositionCommandHandler","VerticalFormationDomainModule","VerticalFormationDomainWarehouse","VerticalFormationApiModule","VerticalFormationFeatureModule","verticalFormationApiModule","compositionKey","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","getWidth","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionDomainEvent","CompositionWidthSetEvent","CompositionAggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledEvent","CompositionColumnSetEnabledAggregateEvent","activeColumns","getActiveColumns","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","getMinColumnWidth","calculator","CompositionChangeSortStatusEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","getColumns","addColumn","removeColumn","updatedWidths","changeSort","sortParams","setSortStatus","param","sortParams_1","sortParams_1_1","columnId","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ViewEntity","cellView","templateFunction","fromDataType","getTemplateFunction","AbstractColumnEntity","columnConfig","presentation","header","setInitialAlign","getPresentation","getColumnConfig","getHeader","getFormatterFunction","formatter","setView","setHeader","getView","getAlign","getSortingEnabled","ColumnEntity","getDefaultView","getDefaultAlign","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftEvent","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightEvent","CompositionColumnMovedRightAggregateEvent","CompositionColumnsSetEvent","ColumnsSetAggregateEvent","CompositionCreatedEvent","CompositionCreatedAggregateEvent","Group","GroupId","HermesId","emptyGroup","CompositionAggregate","columnFactory","groupFactory","columnsParams","resizeWidth","allColumns","resizeWidthEnabled","activeColumnEntityConverter","columnNameToGroupId","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","isResizeEnabled","isReady","group_1","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","NumberColumnPresentation","getInstance","instance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumns","createColumn","convertWidth","columnEntity","columnEntities","CompositionGroupFactory","CompositionAggregateFactory","CompositionAggregateRepository","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","CompositionCommand","CreateCompositionCommand","CreateCompositionCommandHandler","compositionAggregateRepository","CompositionAggregateEvents","CompositionGroupsSetEvent","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","SetColumnsCommand","SetColumnsCommandHandler","compositionEventConverter","setColumnsParams","publishEvents","composition","domainEvents","SetCompositionWidthCommand","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommand","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommand","SetCompositionContainerWidthCommandHandler","CompositionSetColumnEnabledCommand","getColumnId","CompositionSetColumnEnabledCommandHandler","CompositionChangeSortStatusCommand","getSortParams","CompositionChangeSortStatusCommandHandler","CompositionMoveLeftColumnCommand","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommand","CompositionMoveRightColumnCommandHandler","SetGroupsCommand","CompositionDispatcher","createComposition","setColumnEnabled","ChangeSortParams","CompositionChangeSortStatusEventHandler","compositionDispatcher","dir","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellContext","ColumnDefinition","setField","setTemplateFunction","setFormatterFunction","formatterFunction","toHeaderCellTemplateWithContext","headerCellContext","headerTemplate","toContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","CompositionReadModeRoot","ready","getAllColumns","getActiveHeaderColumns","getHeaderColumns","getTemplateColumns","getContainerWidth","isResizeWidthEnabled","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionReadModelRootRepository","ReadModelRootRepository","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","SetGroupsCommandHandler","ColumnHighlightManager","highlightedColumns","ColumnHighlightArchive","manager","createDefaultValue","defaultValue","CompositionDomainModule","GroupCollection","CompositionGroupArchive","CompositionDomainCommandInvoker","compositionGroupRepository","columnHighlightArchive","toColumnId","defId","CompositionDomainEventRepository","CompositionDomainWarehouse","compositionRepository","compositionGroupArchive","onWidthForEachColumn","CompositionApiModule","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","cancel","InputEditTemplateComponent","inputElement","inputRef","focusField","emitValueChange","keyup$","keyCode","StringEditTemplateComponent","fb","setSelectionRange","NumberEditTemplateComponent","BooleanEditTemplateComponent","changed","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","ColumnQueryComponent","FunctionViewComponent","BarViewComponent","showPercentage","PercentageViewComponent","TextViewComponent","isBold","isItalic","renderer","isHtml","Attribute","Renderer2","components","CompositionFeatureModule","compositionApiModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureHeaderGroupsComponent","StructureSearchingGate","StructureColumnHeaderGate","columnHeaderTop","columnHeaderBottom","StructurePagingGate","SelectionGate","itemsSelected","rowSelection","StructureSelectionGate","StructureL10nGate","StructurePanelGate","StructureRowDetailGate","rowDetail","StructureColumnMenuGate","columnMenu","StructureSummariesGate","summariesCommandInvoker","StructureInfoPanelGate","StructureRowClassGate","StructureRowColoringGate","rowColoringChanged","StructureRowStyleGate","ThemeGridGate","horizontalGridChanged","verticalGridChanged","SourceLoadingGate","VerticalFormationGate","virtualScroll","StructureSortingGate","sortingCommandInvoker","StructureFilterGate","filtering","StructureQuickFiltersGate","quickFilters","structureGates","CssClassModule","StructureSharedModule","ResizeDetectorModule","createStructureDefinition","StructureModule","window","HERMES_API","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListModule","forRoot","forChild","imports$1","declarations$3","entryComponents$1"],"mappings":"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30C,GACzC,OAAO,IAAItX,EAAY,YAAcsX,EAAU9W,cAIhD,SAAgB0rD,GAA4B50C,GAC3C,OAAO,IAAIL,GAAc,YAAcK,EAAU9W,cAIlD,SAAgB2rD,GAAuB70C,GACtC,OAAO,IAAIH,GAAsB,YAAcG,EAAU9W,cAI1D,IAAa4rD,GAAkC,CAC9C,CACCx5C,QAAS5S,EACT2X,WAAYs0C,GACZr0C,KAAM,CACLtX,IAGF,CACCsS,QAASqE,GACTU,WAAYu0C,GACZt0C,KAAM,CACLtX,IAGF,CACCsS,QAASuE,GACTQ,WAAYw0C,GACZv0C,KAAM,CACLtX,IAIFsgC,GACA2B,GACAyH,GACAxH,GACAC,GACAvI,GACA0R,GAEAhC,GAEAl0B,GAAoBJ,eACpBm4B,GAAqBn4B,eACrBq+B,GAAmBr+B,eACnBqS,GAAoBrS,eACpB6qC,GAAoB7qC,eACpBqvC,GAAoBrvC,eACpBy2C,GAAuBz2C,eACvBF,GAAyBE,eAEzBy0B,GACAM,GACAD,GACAG,GACAY,GACAK,GACAE,IAID2gB,GAAA,SAAAvtD,GAiDC,SAAAutD,EAAYzmD,EACT0Y,EACAxT,EACAyT,EACA+tC,EACApsC,EACAskB,EACAje,EACAnH,EACAmtC,EACA9nB,EACAC,EACAC,EACA7sB,EACA8sB,EACAC,EACAnK,EACAqK,EACAC,EACA7B,EACA8B,EACAj/B,EACAm/B,EACAC,EACAC,EACAC,EACAC,EACA/lB,EACAgmB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAxyB,EACAyyB,EACiB9iC,EACAwpD,EACDl/B,EACCm/B,EACAjmC,EACA4F,EACAsgC,EACAnyB,EACjBlvB,EACA8C,EACiBw+C,GA9CpB,IAAA9tD,EAgDCC,EAAA7J,KAAAZ,KACCm4D,EACAxpD,EACAqI,EACA8C,EACAvI,EACA0Y,EACAic,EACAziB,EACAhN,EACAyT,EACAimB,EACAje,EACAnH,EACAktC,EACApsC,EACAqsC,EACA9nB,EACAC,EACAC,EACAC,EACAC,EACAnK,EACAqK,EACAC,EACA7B,EACA8B,EACAj/B,EACAm/B,EACAC,EAC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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ''\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { GuiListPaging } from '../../core/api/gui.list.public-api';\nimport { PagingConfig } from '../../../../structure/paging/core/api/paging-config';\nimport { PagingDisplayMode } from '../../../../structure/paging/feature/mode/paging-display-mode';\n\n\nexport class GuiListPagingConverter {\n\n\tconvert(guiListPaging: GuiListPaging): PagingConfig {\n\n\t\tconst pagingConfig: PagingConfig = {};\n\n\t\tif (guiListPaging.enabled !== undefined && guiListPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiListPaging.enabled;\n\t\t}\n\n\t\tif (guiListPaging.page !== undefined && guiListPaging.page !== null) {\n\t\t\tpagingConfig.page = guiListPaging.page;\n\t\t}\n\n\t\tif (guiListPaging.pageSize !== undefined && guiListPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiListPaging.pageSize;\n\t\t}\n\n\t\tif (guiListPaging.pageSizes !== undefined && guiListPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiListPaging.pageSizes;\n\t\t}\n\n\t\tif (guiListPaging.pagerTop !== undefined && guiListPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiListPaging.pagerTop;\n\t\t} else {\n\t\t\tpagingConfig.pagerTop = true;\n\t\t}\n\n\t\tif (guiListPaging.pagerBottom !== undefined && guiListPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiListPaging.pagerBottom;\n\t\t}\n\n\t\tpagingConfig.displayMode = PagingDisplayMode.BASIC;\n\n\t\treturn pagingConfig;\n\t}\n\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-card',\n\ttemplate: ''\n})\nexport class GuiListCardComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum ListViewMode {\n\tLIST = 'List',\n\tCARD = 'Card'\n}\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabHighlightColumn: 'Highlight',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport interface GuiListPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiListMode {\n\tLIST,\n\tCARD\n}\n\nexport interface GuiListView {\n\n\tactive?: GuiListMode;\n\n\tselector?: boolean;\n\n}\n\nexport interface GuiListField {\n\n\tfield?: string;\n\n\ttype?: GuiListFieldType;\n\n}\n\nexport enum GuiListFieldType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport interface GuiListSearching {\n\n\tenabled?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiListLocalization {\n\n\ttranslation?: GuiListTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport type GuiListTranslation = TranslationChange;\n\nexport const GuiListDefaultTranslation = defaultTranslation;\n","import { ListViewMode } from '../../../../structure/list/core/domain/mode/list-view-mode';\nimport { GuiListMode } from '../../core/api/gui.list.public-api';\n\nexport class GuiListModeConverter {\n\n\tconvert(mode: GuiListMode): ListViewMode {\n\n\t\tif (mode === GuiListMode.LIST) {\n\t\t\treturn ListViewMode.LIST;\n\t\t} else {\n\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewCardTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { ContentChild, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\n\nimport { GuiListField, GuiListLocalization, GuiListPaging, GuiListSearching, GuiListView } from '../core/api/gui.list.public-api';\nimport { GuiListPagingConverter } from './paging/gui-list.paging.converter';\nimport { GuiListCardComponent } from './card/gui.list-card.component';\nimport { GuiListModeConverter } from './mode/gui-list.mode.converter';\n\nimport { ListViewCardTemplate } from '../../../structure/list/feature/card/template/list-view.card-template';\nimport { ListViewTemplate } from '../../../structure/list/feature/source/template/list-view-template';\nimport { ListViewMode } from '../../../structure/list/core/domain/mode/list-view-mode';\nimport { FieldConfig } from '../../../structure/field/core/api/field.config';\nimport { SearchConfig } from '../../../structure/search/core/api/search-config';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\n\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@ContentChild(GuiListCardComponent, { static: true })\n\tlistCard: GuiListCardComponent;\n\n\t@Input()\n\tsource: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\t@Input()\n\tcardTemplate: (item: any) => string;\n\n\t@Input()\n\tpaging: boolean | GuiListPaging;\n\n\t@Input()\n\tview: GuiListView;\n\n\t@Input()\n\tfields: Array<GuiListField>;\n\n\t@Input()\n\tsearching: GuiListSearching;\n\n\t@Input()\n\tlocalization: GuiListLocalization;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter<string>();\n\n\tcontainerTemplate: ListViewTemplate;\n\n\tlistCardTemplate: ListViewCardTemplate;\n\n\tlistViewMode: ListViewMode;\n\n\tlistViewModeSelector: boolean;\n\n\tguiListPagingConverter: GuiListPagingConverter = new GuiListPagingConverter();\n\n\tguiListModeConverter: GuiListModeConverter = new GuiListModeConverter();\n\n\tlistFields: Array<FieldConfig>;\n\n\tsearchConfig: SearchConfig;\n\n\tngOnChanges(changes: NgChanges<GuiListGateway>) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ListViewTemplate(this.template, templateRef);\n\n\t\tconst cardTemplateRef = this.listCard ? this.listCard.templateRef : null;\n\n\t\tthis.listCardTemplate = new ListViewCardTemplate(this.cardTemplate, cardTemplateRef);\n\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.guiListPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.view !== undefined && changes.view.currentValue !== undefined) {\n\n\t\t\tif (this.view.active !== undefined) {\n\t\t\t\tthis.listViewMode = this.guiListModeConverter.convert(this.view.active);\n\t\t\t}\n\n\t\t\tif (this.view.selector !== undefined) {\n\t\t\t\tthis.listViewModeSelector = this.view.selector;\n\t\t\t}\n\n\t\t}\n\n\t\tif (changes.fields !== undefined && changes.fields.currentValue !== undefined) {\n\n\t\t\tthis.listFields = this.fields.map((f) => {\n\t\t\t\treturn {\n\t\t\t\t\tfield: f.field,\n\t\t\t\t\ttype: f.type as any // DataType\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (changes.searching !== undefined && changes.searching.currentValue !== undefined) {\n\n\t\t\tthis.searchConfig = this.searching as SearchConfig;\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { Component, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class.gui-list]': '\"true\"'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tsuper();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonSearchPhraseChange(phrase: string): void {\n\t\tthis.searchPhraseChanged.emit(phrase);\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport abstract class StructureCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(structureId: StructureId): void;\n\n\tabstract enableVirtualScroll(structureId: StructureId): void;\n\n\tabstract disableVirtualScroll(structureId: StructureId): void;\n\n\tabstract scrollToTop(structureId: StructureId): void;\n\n\tabstract scrollToBottom(structureId: StructureId): void;\n\n\tabstract scrollToIndex(index: number, structureId: StructureId): void;\n\n\tabstract setScrollPosition(position: number, structureId: StructureId): void;\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setFilterConfig(config: FilterConfig, structureId: StructureId): void;\n\n\tabstract setQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void;\n\n\tabstract setRowHeight(rowHeight: number, structureId: StructureId): void;\n\n\tabstract setContainerHeight(height: number, structureId: StructureId): void;\n\n\tabstract setRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewTemplate } from './list-view-template';\n\n\n@Injectable()\nexport class ListViewTemplateArchive extends Archive<ListViewTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewCardTemplate } from './list-view.card-template';\n\n\n@Injectable()\nexport class ListViewCardTemplateArchive extends Archive<ListViewCardTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\n\nexport const listViewProviders = [\n\tListViewTemplateArchive,\n\tListViewCardTemplateArchive\n];\n","import { ModifierApi } from './modifier-api';\n\nexport abstract class Modifier<T extends ModifierApi> {\n\n\tprotected constructor(\n\t\tprivate readonly hostElement?: HTMLElement\n\t) {\n\t}\n\n\tprotected abstract createModifier(htmlElement: HTMLElement): T;\n\n\tgetElement(htmlElement: HTMLElement): T {\n\t\treturn this.createModifier(htmlElement);\n\t}\n\n\tgetHost(): T {\n\n\t\tif (!this.hostElement) {\n\t\t\tthrow new Error('Missing host element in DomRenderer constructor.');\n\t\t}\n\n\t\treturn this.createModifier(this.hostElement);\n\t}\n}\n","import { ClassModifierApi } from './class-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class ClassModifier extends Modifier<ClassModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): ClassModifierApi {\n\t\treturn new ClassModifier.ClassModifier(htmlElement);\n\t}\n\n\tprivate static readonly ClassModifier = class implements ClassModifierApi {\n\n\t\tprivate static readonly CLASS = 'class';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tadd(...classes: Array<string>): void {\n\t\t\tthis.addClassToDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tremove(...classes: Array<string>): void {\n\t\t\tthis.removeClassFromDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(ClassModifier.ClassModifier.CLASS);\n\t\t}\n\n\t\tprivate addClassToDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.add(classes[i]);\n\t\t\t}\n\t\t}\n\n\t\tprivate removeClassFromDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.remove(classes[i]);\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ClassModifier } from '../dom/class/class-modifier';\nimport { Changes } from './ng-changes';\n\n\nexport abstract class GuiComponent {\n\n\tprivate readonly innerClassModifier: ClassModifier = new ClassModifier(this.innerElementRef.nativeElement);\n\n\tprotected constructor(private readonly innerElementRef: ElementRef) {\n\t\tthis.addHostClass();\n\t}\n\n\tprotected abstract getSelectorName(): string;\n\n\taddClassToHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().add(className);\n\t}\n\n\tremoveClassFromHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().remove(className);\n\t}\n\n\thasChanged<T>(prop: Changes<T>): boolean {\n\t\treturn prop !== undefined && prop.currentValue !== undefined;\n\t}\n\n\tprivate addHostClass(): void {\n\t\tthis.innerClassModifier.getHost().add(this.getSelectorName());\n\t}\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';\nimport { GuiComponent } from './gui-component';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\nexport abstract class SmartComponent extends GuiComponent {\n\n\tprivate viewInDom: boolean = false;\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewInDom = true;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewInDom()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewInDom(): boolean {\n\t\treturn this.viewInDom;\n\t}\n\n\thermesSubscribe<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\thermesSubscribeWithoutRender<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t});\n\t}\n\n\t// for gate\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>,\n\t\tmapper: (value: V) => any = (value: V) => value\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(mapper(value));\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport abstract class PagingWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onPaging(structureId: StructureId): HermesObservable<Paging>;\n\n\tabstract oncePaging(structureId: StructureId): HermesObservable<Paging>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport abstract class PagingCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract enable(structureId: StructureId): void;\n\n\tabstract disable(structureId: StructureId): void;\n\n\tabstract setPaging(paging: PagingConfig, structureId: StructureId): void;\n\n\tabstract changePageSize(pageSize: number, structureId: StructureId): void;\n\n\tabstract nextPage(structureId: StructureId): void;\n\n\tabstract prevPage(structureId: StructureId): void;\n\n\tabstract goToPage(pageNumber: number, currentPage: number, structureId: StructureId): void;\n\n\tabstract changePagerTop(enabled: boolean, structureId: StructureId): void;\n\n\tabstract changePagerBottom(enabled: boolean, structureId: StructureId): void;\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tabstract getEntities(structureId: StructureId): ReadonlyArray<ItemEntity>;\n\n\tabstract onEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>>;\n\n\tabstract onEntitiesSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onceEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>>;\n\n\tabstract onOriginSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onLoading(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>>;\n\n\t/**\n\t * @deprecated\n\t */\n\tabstract getPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import { HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\n\nexport class StreamCloser<T> {\n\n\tprivate readonly unsubscribe$ = new HermesSubject<void>();\n\n\tconstructor() {\n\t}\n\n\ttakeUntil() {\n\t\treturn hermesTakeUntil(this.unsubscribe$);\n\t}\n\n\tunsubscribe(): void {\n\t\tif ((this.unsubscribe$ as any).isCompleted) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","export enum CssClass {\n\tSELECTED = 'selected',\n\tPAGING_TOP_CLASS_NAME = 'gui-paging-top',\n\tPAGING_BOTTOM_CLASS_NAME = 'gui-paging-bottom'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClassModifier } from '../../../common/cdk/dom/class/class-modifier';\nimport { CssClass } from './css-class';\n\n@Injectable()\nexport class CssClassModifier {\n\n\tprivate readonly classModifier: ClassModifier = new ClassModifier();\n\n\tselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).add(CssClass.SELECTED);\n\t}\n\n\tunselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(CssClass.SELECTED);\n\t}\n\n\tadd(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).add(clazzName);\n\t}\n\n\tremove(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(clazzName);\n\t}\n\n\ttoggle(htmlElement: HTMLElement): void {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { CssClassModifier } from '../../common/css-class/css-class.modifier';\nimport { CssClass } from '../../common/css-class/css-class';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging][position]',\n\ttemplateUrl: './paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tisPagingVisible = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly elRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-justify-end');\n\t\tthis.addClassToHost('gui-items-center');\n\t\tthis.addClassToHost('gui-p-4');\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingComponent>) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t} else {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingDisplayModeArchive.on(),\n\t\t\t(mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.calculatePagingVisibility();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandInvoker.changePageSize(pageSize, this.structureId);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandInvoker.nextPage(this.structureId);\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandInvoker.prevPage(this.structureId);\n\t}\n\n\tprivate calculatePagingVisibility(): void {\n\t\tthis.isPagingVisible = this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging';\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n\t// TODO\n\tcompare(target: Paging): boolean {\n\t\treturn JSON.stringify(this) === JSON.stringify(target);\n\t}\n\n}\n","import { GuiComponent } from './gui-component';\nimport { ElementRef } from '@angular/core';\n\nexport abstract class PureComponent extends GuiComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (!this.hasConstructorOnlyElementRefInjected(arguments)) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate hasConstructorOnlyElementRefInjected(args: IArguments): boolean {\n\n\t\tif (arguments.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.isElementRef(arguments[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isElementRef(elRef: any): boolean {\n\t\treturn elRef.nativeElement !== null;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-paging-select][paging]',\n\ttemplateUrl: './paging-select.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingSelectComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tselectPageSizes: Array<GuiSelectOption>;\n\n\tselectPageSize: GuiSelectOption;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingSelectComponent>) {\n\n\t\tif (changes.paging) {\n\t\t\tif (this.paging) {\n\t\t\t\tthis.selectPageSizes = this.getSelectPageSizes();\n\t\t\t\tthis.selectPageSize = this.getSelectPageSize(this.paging.getPageSize());\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePageSize(pageSize: GuiSelectOption): void {\n\t\tthis.pageSizeChanged.emit(+pageSize.value);\n\t}\n\n\tprivate getSelectPageSizes(): Array<GuiSelectOption> {\n\t\tconst selectPageSizes: Array<GuiSelectOption> = [],\n\t\t\tpageSizes = this.paging.getPageSizes();\n\n\t\tpageSizes.forEach((pageSize: number) => {\n\t\t\tconst selectOption = this.getSelectPageSize(pageSize);\n\t\t\tselectPageSizes.push(selectOption);\n\t\t});\n\n\t\treturn selectPageSizes;\n\t}\n\n\tprivate getSelectPageSize(pageSize: number): GuiSelectOption {\n\t\treturn { name: pageSize.toString(), value: pageSize.toString() };\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-select';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-navigator][paging][sourceSize]',\n\ttemplateUrl: './alternative-paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandInvoker.goToPage(1, this.paging.getPage(), this.structureId);\n\t}\n\n\tlastPage(): void {\n\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandInvoker.goToPage(numberOfPages, this.paging.getPage(), this.structureId);\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-pages][paging]',\n\ttemplateUrl: './alternative-paging-pages.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingPagesComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<AlternativePagingPagesComponent>) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage, this.structureId);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-pages';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onPageChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n\tabstract onPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagesizeChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private readonly logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract findById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'NextPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (const event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'StructurePreparedEntitiesSetAggregateEvent':\n\n\t\t\t\tthis.domainEventPublisher.publish(event.toDomainEvent());\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable, Reactive } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(structureId: StructureId): StructureReadModelRoot;\n\n\tabstract on(structureId: StructureId): HermesObservable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, hermesTake } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingRepository } from '../api/read/paging.repository';\nimport { Paging } from '../api/read/paging';\nimport { PagingWarehouse } from '../api/paging.warehouse';\n\n\n@Injectable()\nexport class PagingDomainWarehouse extends PagingWarehouse {\n\n\tconstructor(private readonly pagingRepository: PagingRepository) {\n\t\tsuper();\n\t}\n\n\tonPaging(structureId: StructureId): HermesObservable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\toncePaging(structureId: StructureId): HermesObservable<Paging> {\n\t\treturn this.pagingRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { PagingDispatcher } from './paging.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { Injectable } from '@angular/core';\nimport { PagingCommandInvoker } from '../api/paging.command-invoker';\n\n@Injectable()\nexport class PagingDomainCommandInvoker extends PagingCommandInvoker {\n\n\tconstructor(private readonly pagingDispatcher: PagingDispatcher) {\n\t\tsuper();\n\t}\n\n\tenable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number, structureId: StructureId) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage(structureId);\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage(structureId);\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, hermesSwitchMap } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingWarehouse } from '../api/paging.warehouse';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from '../api/read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { PagingEventRepository } from '../api/paging.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class PagingDomainEventRepository extends PagingEventRepository {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: Paging) => paging.getPage())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: Paging) => paging.getPageSize())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\nimport { PagingDomainWarehouse } from '../domain-read/paging.domain-warehouse';\nimport { PagingDomainCommandInvoker } from '../domain/paging.domain.command-invoker';\nimport { PagingDomainEventRepository } from '../domain-read/paging.domain.event-repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: PagingCommandInvoker,\n\t\t\tuseClass: PagingDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: PagingWarehouse,\n\t\t\tuseClass: PagingDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: PagingEventRepository,\n\t\t\tuseClass: PagingDomainEventRepository\n\t\t},\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-navigator][paging]',\n\ttemplateUrl: './paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-navigator';\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'div[gui-paging-stats][paging]',\n\ttemplateUrl: './paging-stats.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-mx-6');\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-stats';\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\nimport { HermesObservable } from '@generic-ui/hermes';\n\nexport abstract class TranslationFacade {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): HermesObservable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\n\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { Translation } from '../core/api/translation';\nimport { HermesSubscription } from '@generic-ui/hermes';\n\n\n@Pipe({\n\tname: 'guiTranslate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform, OnDestroy {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: HermesSubscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationFacade) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { TranslationFacade } from '../api/translation.facade';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\nimport { HermesObservable, HermesReplaySubject, HermesSubject } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class TranslationDomainFacade extends TranslationFacade {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: HermesSubject<Translation> = new HermesReplaySubject(1);\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): HermesObservable<Translation> {\n\t\treturn this.dictionary$.toObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { TranslationDomainFacade } from '../core/domain/translation.domain-facade';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t],\n\tentryComponents: []\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationFacade, useClass: TranslationDomainFacade }];\n\t}\n\n\tconstructor(@Optional() apiModule: TranslationApiModule) {\n\t\tsuper();\n\t\tif (apiModule === null) {\n\t\t\tthrow new Error('TranslationApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() pagingApiModule: PagingApiModule) {\n\t\tsuper();\n\t\tif (pagingApiModule === null) {\n\t\t\tthrow new Error('PagingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { ListViewReadModelRootId } from '../api/list-view.read-model-root-id';\n\nexport class ListViewId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new ListViewReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\n\n\nexport class ListViewReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): ListViewId {\n\t\treturn new ListViewId(this.getId());\n\t}\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class CreateListViewCommand extends CreateAggregateCommand {\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'CreateListViewCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewCommand extends Command<ListViewId> {\n}\n","import { ListViewMode } from './list-view-mode';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewCommand } from '../list-view.command';\n\n\nexport class SetListViewModeCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'SetListViewModeCommand');\n\t}\n\n\tgetMode(): ListViewMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { ListViewId } from '../../list-view.id';\nimport { ListViewCommand } from '../../list-view.command';\n\n\nexport class ToggleListViewSelectorCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ToggleListViewSelectorCommand');\n\t}\n\n\tiseEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { CreateListViewCommand } from './create/create-list-view.command';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SetListViewModeCommand } from './mode/set-list-view-mode.command';\nimport { ToggleListViewSelectorCommand } from './mode/selector/toggle-list-view-selector.command';\n\n\n@Injectable()\nexport class ListViewDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateListViewCommand(listViewId));\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new SetListViewModeCommand(listViewId, mode));\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleListViewSelectorCommand(listViewId, enabled));\n\t}\n\n}\n","import { ListViewReadModelRootId } from './list-view.read-model-root-id';\n\nexport const listViewGlobalId = new ListViewReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from '../domain/list-view.dispatcher';\nimport { listViewGlobalId } from './list-view.global-id';\nimport { ListViewReadModelRootId } from './list-view.read-model-root-id';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\n\n\n@Injectable()\nexport class ListViewCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly listViewDispatcher: ListViewDispatcher) {\n\t}\n\n\tcreate(listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.create(listViewReadModelRootId.toAggregateId());\n\t}\n\n\tsetMode(mode: ListViewMode, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.setMode(mode, listViewReadModelRootId.toAggregateId());\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.toggleSelector(enabled, listViewReadModelRootId.toAggregateId());\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { GuiComponent } from './gui-component';\nimport { ElementRef } from '@angular/core';\n\nexport abstract class LayoutComponent extends GuiComponent {\n\n\tprotected constructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../core/api/structure.id';\nimport { StructureIdGenerator } from '../../grid/feature/structure-id.generator';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { listViewProviders } from './list-view.providers';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\nimport { ListViewReadModelRootId } from '../core/api/list-view.read-model-root-id';\nimport { ListViewCommandInvoker } from '../core/api/list-view.command-invoker';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { TranslationFacade } from '../../../l10n/core/api/translation.facade';\nimport { CompositionId } from '../../../composition/core/api/composition.id';\nimport { SchemaReadModelRootId } from '../../../schema/core/api/schema.read-model-root-id';\nimport { LayoutComponent } from '../../../common/cdk/component/layout-component';\n\n\n/** @internal */\nexport function listViewIdFactoryForList(generator: StructureIdGenerator): ListViewReadModelRootId {\n\treturn new ListViewReadModelRootId('gui-list-' + generator.generateId());\n}\n\n/** @internal */\nexport function structureIdFactoryForList(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-list-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactoryForList(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-list-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactoryForList(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-list-' + generator.generateId());\n}\n\nexport const componentListProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactoryForList,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactoryForList,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactoryForList,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: ListViewReadModelRootId,\n\t\tuseFactory: listViewIdFactoryForList,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...listViewProviders,\n\n\tPagingFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent()\n];\n\n@Component({\n\tselector: 'gui-list-view',\n\ttemplateUrl: './list-view.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: [\n\t\t...componentListProviders,\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: ListViewComponent\n\t\t}\n\t],\n\tstyleUrls: [\n\t\t'./style/list-view.ngx.scss',\n\t\t'./source/list-view-source.component.ngx.scss',\n\t\t'./style/theme/generic.list.ngx.scss'\n\t],\n\thost: {\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ListViewComponent extends LayoutComponent implements FilterContainerRef {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tlistViewCommandDispatcher: ListViewCommandInvoker,\n\t\t\t\ttranslationService: TranslationFacade\n\t) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-generic')\n\t\ttranslationService.setDefaultTranslation();\n\t\tstructureCommandService.create(this.structureId);\n\t\tlistViewCommandDispatcher.create(this.listViewReadModelRootId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ListViewTemplate } from './template/list-view-template';\nimport { ListViewTemplateArchive } from './template/list-view-template.archive';\n\n@Component({\n\tselector: 'div[gui-list-view-source]',\n\ttemplateUrl: './list-view-source.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewSourceComponent extends SmartComponent implements OnInit, OnDestroy {\n\n\tsource: Array<any> = [];\n\n\ttemplate: ListViewTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ListViewTemplateArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureSourceWarehouse.onEntities(this.structureId),\n\t\t\t(items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getSourceItem());\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.containerTemplateArchive.on(),\n\t\t\t(template: ListViewTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-view-source';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ListViewModeArchive extends AggregateArchive<ListViewMode> {\n\n\tstatic readonly default = ListViewMode.LIST;\n\n\tconstructor() {\n\t\tsuper(ListViewModeArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ListViewSelectorArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(ListViewSelectorArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\nimport { ListViewModeArchive } from './mode/list-view.mode.archive';\nimport { ListViewId } from '../domain/list-view.id';\nimport { ListViewSelectorArchive } from './mode/selector/list-view.selector.archive';\n\n\n@Injectable()\nexport class ListViewWarehouse implements Warehouse {\n\n\tconstructor(private readonly listViewModeArchive: ListViewModeArchive,\n\t\t\t\tprivate readonly listViewSelectorArchive: ListViewSelectorArchive) {\n\t}\n\n\tonMode(id: ListViewId): HermesObservable<ListViewMode> {\n\t\treturn this.listViewModeArchive.on(id);\n\t}\n\n\tonSelector(id: ListViewId): HermesObservable<boolean> {\n\t\treturn this.listViewSelectorArchive.on(id);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ListViewMode } from '../../core/domain/mode/list-view-mode';\nimport { ListViewReadModelRootId } from '../../core/api/list-view.read-model-root-id';\nimport { ListViewWarehouse } from '../../core/api/list-view.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-list-view-layout]',\n\ttemplateUrl: './list-view-layout.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewLayoutComponent extends SmartComponent implements OnInit {\n\n\tlistModeEnabled: boolean = false;\n\n\tcardModeEnabled: boolean = false;\n\n\tselectorEnabled: boolean = false;\n\n\tsearchBarEnabled: boolean = true;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewWarehouse: ListViewWarehouse\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.listViewWarehouse.onMode(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(mode: ListViewMode) => {\n\t\t\t\tthis.listModeEnabled = mode === ListViewMode.LIST;\n\t\t\t\tthis.cardModeEnabled = mode === ListViewMode.CARD;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.listViewWarehouse.onSelector(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.selectorEnabled = enabled;\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-view-layout';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { ListViewTemplate } from '../template/list-view-template';\n\n\n@Component({\n\tselector: 'div[gui-list-view-item][item][template]',\n\ttemplateUrl: './list-view-item.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\n\t\tthis.addClassToHost('gui-w-full');\n\t\tthis.addClassToHost('gui-my-6');\n\t\tthis.addClassToHost('gui-mx-0');\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnChanges() {\n\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-item';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-empty-source][items]',\n\ttemplateUrl: './empty-source.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class EmptySourceComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-py-23');\n\t\tthis.addClassToHost('gui-px-6');\n\t}\n\n\tngOnChanges(changes: NgChanges<EmptySourceComponent>) {\n\n\t\tif (this.hasChanged(changes.items)) {\n\t\t\tif (this.items.length === 0) {\n\t\t\t\tthis.removeClassFromHost('gui-hidden');\n\t\t\t\tthis.addClassToHost('gui-block');\n\t\t\t} else {\n\t\t\t\tthis.removeClassFromHost('gui-block');\n\t\t\t\tthis.addClassToHost('gui-hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-empty-source';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { FeatureModule } from '@generic-ui/hermes';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ListViewCardTemplate } from './template/list-view.card-template';\nimport { ListViewCardTemplateArchive } from './template/list-view.card-template.archive';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\n\n\n@Component({\n\tselector: 'div[gui-list-container-card]',\n\ttemplateUrl: './list-view.container-card.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewContainerCardComponent extends SmartComponent implements OnInit {\n\n\titems: Array<any> = [];\n\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-flex-wrap');\n\t\tthis.addClassToHost('gui-m-0');\n\t\tthis.addClassToHost('gui-p-0');\n\t\tthis.addClassToHost('gui-rounded');\n\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureSourceWarehouse.onEntities(this.structureId),\n\t\t\t(items: Array<ItemEntity>) => {\n\t\t\t\tthis.items = items.map(i => i.getSourceItem());\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.listCardTemplateArchive.on(),\n\t\t\t(template: ListViewCardTemplate) => {\n\t\t\t\tthis.cardTemplate = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-container-card';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { ListViewCardTemplate } from '../template/list-view.card-template';\n\n\n@Component({\n\tselector: 'div[gui-list-card-item][item][template]',\n\ttemplateUrl: './list-view.card-item.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewCardItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewCardTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\n\t\tthis.addClassToHost('gui-cursor-pointer');\n\t\tthis.addClassToHost('gui-block');\n\t\tthis.addClassToHost('gui-m-0');\n\t\tthis.addClassToHost('gui-p-0');\n\t\tthis.addClassToHost('gui-relative');\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-card';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewModeArchive } from '../../../core/api/mode/list-view.mode.archive';\nimport { ListViewReadModelRootId } from '../../../core/api/list-view.read-model-root-id';\nimport { ListViewWarehouse } from '../../../core/api/list-view.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-list-mode-select]',\n\ttemplateUrl: './list-view.container-mode-select.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewContainerModeSelectComponent extends SmartComponent implements OnInit {\n\n\toptions: Array<GuiSelectOption> = Object.keys(ListViewMode)\n\t\t\t\t\t\t\t\t\t\t\t.map((key: string) => ListViewMode[key])\n\t\t\t\t\t\t\t\t\t\t\t.filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t.map((val) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.toGuiSelectOption(val);\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\tlistContainerMode: GuiSelectOption;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewWarehouse: ListViewWarehouse,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.listViewWarehouse.onMode(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(mode: ListViewMode) => {\n\t\t\t\tthis.listContainerMode = this.toGuiSelectOption(mode);\n\t\t\t}\n\t\t);\n\t}\n\n\tchangeContainerMode(mode: GuiSelectOption): void {\n\t\tconst selectedMode = this.toListViewMode(mode.value);\n\t\tthis.listViewModeRepository.next(this.listViewReadModelRootId.toAggregateId(), selectedMode);\n\t}\n\n\tprivate toGuiSelectOption(value: string | ListViewMode): GuiSelectOption {\n\t\treturn { value, name: value };\n\t}\n\n\tprivate toListViewMode(mode: string): ListViewMode {\n\n\t\tswitch (mode) {\n\t\t\tcase 'List':\n\t\t\t\treturn ListViewMode.LIST;\n\n\t\t\tcase 'Card':\n\t\t\t\treturn ListViewMode.CARD;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-mode-select';\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewDomainEvent extends DomainEvent<ListViewId> {\n}\n","import { ListViewId } from '../list-view.id';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewCreatedEvent extends ListViewDomainEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, null, 'ListViewCreatedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewAggregateEvent extends AggregateEvent<ListViewId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewCreatedEvent } from './list-view-created.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewCreatedAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewModeSetEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(schemaId, mode, 'ListViewModeSetEvent');\n\t}\n\n\tgetTheme(): ListViewMode {\n\t\treturn this.mode;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewModeSetEvent } from './list-view-mode-set.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewModeSetAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'ListViewModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","export class SelectorVisibility {\n\n\tenabled: boolean = null;\n\n\tvisible: boolean = false;\n\n\tconstructor() {\n\t}\n\n\tisVisible(): boolean {\n\n\t\tif (this.enabled !== null) {\n\t\t\treturn this.enabled;\n\t\t}\n\n\t\treturn this.visible;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis.visible = visible;\n\t}\n\n}\n","import { ListViewId } from '../../list-view.id';\nimport { ListViewDomainEvent } from '../../list-view.domain-event';\n\n\nexport class ListViewSelectorToggledEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, enabled, 'ListViewSelectorToggledEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewSelectorToggledEvent } from './list-view-selector-toggled.event';\nimport { ListViewId } from '../../list-view.id';\nimport { ListViewAggregateEvent } from '../../list-view.aggregate-event';\n\n\nexport class ListViewSelectorToggledAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ListViewSelectorToggledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewSelectorToggledEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewCreatedAggregateEvent } from './create/list-view-created.aggregate-event';\nimport { ListViewModeSetAggregateEvent } from './mode/list-view-mode-set.aggregate-event';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SelectorVisibility } from './mode/selector/selector-visibility';\nimport { ListViewSelectorToggledAggregateEvent } from './mode/selector/list-view-selector-toggled.aggregate-event';\n\n\nexport class ListViewAggregate extends AggregateRoot<ListViewId> {\n\n\tprivate mode: ListViewMode;\n\n\tprivate selectorVisibility: SelectorVisibility;\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'ListViewAggregate');\n\t\tthis.setMode(ListViewMode.LIST);\n\t\tthis.initSelectorVisibility();\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<ListViewId>> {\n\t\treturn ListViewCreatedAggregateEvent;\n\t}\n\n\tsetMode(mode: ListViewMode): void {\n\t\tthis.mode = mode;\n\t\tthis.addEvent(new ListViewModeSetAggregateEvent(this.getId(), this.mode));\n\t}\n\n\ttoggleModeSelector(enabled: boolean): void {\n\t\tthis.selectorVisibility.setEnabled(enabled);\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate initSelectorVisibility(): void {\n\t\tthis.selectorVisibility = new SelectorVisibility();\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate emitEventAfterSelectorVisibilityChange(): void {\n\t\tthis.addEvent(new ListViewSelectorToggledAggregateEvent(this.getId(), this.selectorVisibility.isVisible()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\n@Injectable()\nexport class ListViewAggregateFactory extends AggregateFactory<ListViewId, ListViewAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(id: ListViewId): ListViewAggregate {\n\t\treturn new ListViewAggregate(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateListViewCommand } from './create-list-view.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class CreateListViewCommandHandler implements CreateAggregateCommandHandler<ListViewAggregate, CreateListViewCommand> {\n\n\tforCommand(): CommandType<CreateListViewCommand> {\n\t\treturn CreateListViewCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewStore extends InMemoryStore<ListViewId, ListViewAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { InMemoryListViewStore } from './in-memory.list-view.store';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateStore extends InMemoryAggregateStore<ListViewId, ListViewAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemoryListViewStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\nexport abstract class ListViewAggregateRepository extends AggregateRepository<ListViewId, ListViewAggregate> {\n\n\tabstract findById(listViewId: ListViewId): Optional<ListViewAggregate>;\n\n\tabstract save(aggregate: ListViewAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { InMemoryListViewAggregateStore } from './in-memory.list-view.aggregate-store';\n\nimport { ListViewAggregateRepository } from '../../domain/list-view.aggregate-repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateRepository extends ListViewAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemoryListViewAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(listViewId: ListViewId): Optional<ListViewAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(listViewId);\n\t}\n\n\tsave(listViewAggregate: ListViewAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(listViewAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\nimport { ListViewReadModelRootId } from './list-view.read-model-root-id';\nimport { ListViewModeSetEvent } from '../domain/mode/list-view-mode-set.event';\n\n@Injectable()\nexport class ListViewEventRepository extends EventRepository<ListViewReadModelRootId, ListViewId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonModeChange(listViewReadModelRootId: ListViewReadModelRootId) {\n\n\t\treturn this.onEvent(listViewReadModelRootId, ListViewModeSetEvent);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetListViewModeCommand } from './set-list-view-mode.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\nimport { ListViewCommand } from '../list-view.command';\n\n\n@Injectable()\nexport class SetListViewModeCommandHandler implements CommandHandler<ListViewAggregate, SetListViewModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetListViewModeCommand> {\n\t\treturn SetListViewModeCommand;\n\t}\n\n\thandle(listViewAggregate: ListViewAggregate, command: SetListViewModeCommand): void {\n\n\t\tconst mode = command.getMode();\n\n\t\tlistViewAggregate.setMode(mode);\n\t}\n\n\tpublish(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ToggleListViewSelectorCommand } from './toggle-list-view-selector.command';\nimport { ListViewAggregate } from '../../list-view.aggregate';\nimport { ListViewCommand } from '../../list-view.command';\n\n\n@Injectable()\nexport class ToggleListViewSelectorCommandHandler implements CommandHandler<ListViewAggregate, ToggleListViewSelectorCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleListViewSelectorCommand> {\n\t\treturn ToggleListViewSelectorCommand;\n\t}\n\n\thandle(listViewAggregate: ListViewAggregate, command: ToggleListViewSelectorCommand): void {\n\n\t\tconst enabled = command.iseEnabled();\n\n\t\tlistViewAggregate.toggleModeSelector(enabled);\n\t}\n\n\tpublish(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from './list-view.dispatcher';\nimport { listViewKey } from '../api/list-view.api-module';\nimport { SetListViewModeCommandHandler } from './mode/set-list-view-mode.command-handler';\nimport { ToggleListViewSelectorCommandHandler } from './mode/selector/toggle-list-view-selector.command-handler';\n\n\n@NgModule({\n\timports: [],\n\tproviders: [\n\t\tListViewDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetListViewModeCommandHandler, listViewKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleListViewSelectorCommandHandler, listViewKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewModeArchive } from './list-view.mode.archive';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewModeSetEvent } from '../../domain/mode/list-view-mode-set.event';\n\n\n@Injectable()\nexport class ListViewModeSetEventHandler implements DomainEventHandler<ListViewId, ListViewModeSetEvent> {\n\n\tconstructor(private listViewModeRepository: ListViewModeArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewModeSetEvent> {\n\t\treturn ListViewModeSetEvent;\n\t}\n\n\thandle(event: ListViewModeSetEvent): void {\n\n\t\tif (event.ofMessageType('ListViewModeSetEvent')) {\n\t\t\tthis.listViewModeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewSelectorArchive } from './list-view.selector.archive';\n\nimport { ListViewId } from '../../../domain/list-view.id';\nimport { ListViewSelectorToggledEvent } from '../../../domain/mode/selector/list-view-selector-toggled.event';\n\n\n@Injectable()\nexport class ListViewSelectorToggledEventHandler implements DomainEventHandler<ListViewId, ListViewSelectorToggledEvent> {\n\n\tconstructor(private listViewSelectorRepository: ListViewSelectorArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewSelectorToggledEvent> {\n\t\treturn ListViewSelectorToggledEvent;\n\t}\n\n\thandle(event: ListViewSelectorToggledEvent): void {\n\n\t\tif (event.ofMessageType('ListViewSelectorToggledEvent')) {\n\t\t\tthis.listViewSelectorRepository.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewAggregateFactory } from '../domain/list-view.aggregate-factory';\nimport { CreateListViewCommandHandler } from '../domain/create/create-list-view.command-handler';\nimport { InMemoryListViewAggregateRepository } from '../infrastructure/in-memory/in-memory.list-view.aggregate-repository';\nimport { ListViewCommandInvoker } from './list-view.command-invoker';\nimport { ListViewEventRepository } from './list-view.event-repository';\nimport { ListViewWarehouse } from './list-view.warehouse';\nimport { InMemoryListViewAggregateStore } from '../infrastructure/in-memory/in-memory.list-view.aggregate-store';\nimport { InMemoryListViewStore } from '../infrastructure/in-memory/in-memory.list-view.store';\nimport { ListViewDomainModule } from '../domain/list-view.domain-module';\nimport { ListViewModeArchive } from './mode/list-view.mode.archive';\nimport { ListViewModeSetEventHandler } from './mode/list-view-mode-set.event-handler';\nimport { ListViewSelectorToggledEventHandler } from './mode/selector/list-view-selector-toggled.event-handler';\nimport { ListViewSelectorArchive } from './mode/selector/list-view.selector.archive';\n\nexport const listViewKey = 'ListViewKey';\n\n@NgModule({\n\timports: [\n\n\t\tHermesModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tlistViewKey,\n\t\t\tListViewAggregateFactory,\n\t\t\tInMemoryListViewAggregateRepository,\n\t\t\tCreateListViewCommandHandler,\n\t\t\t[\n\t\t\t\t...ListViewDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewModeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewSelectorToggledEventHandler)\n\t\t\t]\n\t\t),\n\t\tListViewDomainModule\n\n\t],\n\tproviders: [\n\t\tListViewCommandInvoker,\n\t\tListViewEventRepository,\n\t\tListViewWarehouse,\n\n\t\tListViewModeArchive,\n\t\tListViewSelectorArchive,\n\n\t\tInMemoryListViewAggregateStore,\n\t\tInMemoryListViewStore\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewApiModule {\n}\n","import { EventEmitter, OnDestroy } from '@angular/core';\n\nimport { NgChanges } from './ng-changes';\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\nexport abstract class Gate<T = any> implements OnDestroy {\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tisDefined(propertyName: string, changes: NgChanges<T>): boolean {\n\t\treturn changes[propertyName] !== undefined && changes[propertyName].currentValue !== undefined;\n\t}\n\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(value);\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { PagingConfig } from '../../core/api/paging-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingCommandInvoker } from '../../core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../core/api/paging.event-repository';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\nexport abstract class PagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly compositionId: CompositionId,\n\t\t\t\t\t\t  protected readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\t\t\t  protected readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.compositionId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageSizeChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageSizeChanged\n\t\t);\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\n\n\n@Directive({\n\tselector: 'gui-list-view[paging]'\n})\nexport class ListViewPagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository) {\n\t\tsuper(structureId, compositionId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewCommandInvoker } from '../../../core/api/list-view.command-invoker';\nimport { ListViewReadModelRootId } from '../../../core/api/list-view.read-model-root-id';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewModeGate extends Gate implements OnChanges {\n\n\t@Input()\n\tmode: ListViewMode;\n\n\t@Input()\n\tmodeSelector: boolean;\n\n\tconstructor(public readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewCommandDispatcher: ListViewCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewModeGate>) {\n\n\t\tif (this.isDefined('mode', changes)) {\n\t\t\tthis.listViewCommandDispatcher.setMode(this.mode, this.listViewReadModelRootId);\n\t\t}\n\n\t\tif (this.isDefined('modeSelector', changes)) {\n\t\t\tthis.listViewCommandDispatcher.toggleSelector(this.modeSelector, this.listViewReadModelRootId);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ListViewTemplateArchive } from '../../source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from '../../card/template/list-view.card-template.archive';\nimport { ListViewTemplate } from '../../source/template/list-view-template';\nimport { ListViewCardTemplate } from '../../card/template/list-view.card-template';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewTemplateGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\t@Input()\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly containerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewTemplateGate>) {\n\n\t\tif (this.isDefined('template', changes)) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\tif (this.isDefined('cardTemplate', changes)) {\n\t\t\tthis.listCardTemplateArchive.next(this.cardTemplate);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldCommandInvoker } from '../../../../field/core/api/field.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[fields]'\n})\nexport class ListViewFieldGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfields: Array<FieldConfig>;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldCommandDispatcher: FieldCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewFieldGate>) {\n\n\t\tif (this.isDefined('fields', changes)) {\n\n\t\t\tthis.fieldCommandDispatcher.initFields(this.fields, this.structureId);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from './search-config';\n\n\n@Injectable()\nexport abstract class SearchCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSearchingConfig(config: SearchConfig, structureId: StructureId): void;\n\n\tabstract search(phrase: string, structureId: StructureId): void;\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string>;\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from '../../core/api/search-config';\nimport { SearchEventRepository } from '../../core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../core/api/search.command-invoker';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly searchEventRepository: SearchEventRepository,\n\t\t\t\t\t\t  protected readonly searchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SearchingGate>) {\n\n\t\tif (this.isDefined('searching', changes)) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandInvoker.setSearchingConfig(searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.searchEventRepository.onSearchPhrase(this.structureId.toReadModelRootId()),\n\t\t\tthis.searchPhraseChanged\n\t\t);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[searching]'\n})\nexport class ListViewSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiListLocalization } from '../../../../../gui/list/core/api/gui.list.public-api';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[localization]'\n})\nexport class ListViewL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiListLocalization;\n\n\tconstructor(private readonly translationService: TranslationFacade) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { EditemItemValues } from '../../core/api/event/editem-item.values';\nimport { SourceCommandInvoker } from '../../core/api/source.command-invoker';\nimport { SourceEventService } from '../../core/api/event/source-event.service';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SourceGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\titems: Array<any> = [];\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly sourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\t\t\t  protected readonly sourceEventService: SourceEventService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SourceGate>) {\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (this.isDefined('source', changes)) {\n\t\t\tthis.sourceCommandInvoker.setOrigin(this.source, this.structureId);\n\t\t}\n\n\t\tif (this.isDefined('items', changes)) {\n\t\t\tthis.sourceCommandInvoker.setOrigin(this.items, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.sourceEventService.onSourceEdited(this.structureId),\n\t\t\tthis.sourceEdited\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandInvoker } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setLoading(enabled: boolean, structureId: StructureId): void;\n\n\tabstract editItem(params: StructureEditSourceItemParams, structureId: StructureId): void;\n\n\tabstract editItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void;\n\n\tabstract deleteRow(row: SelectedRow, structureId: StructureId): void;\n\n\tabstract deleteRows(rows: Array<SelectedRow>, structureId: StructureId): void;\n\n\tabstract deleteItemByIndex(index: number, structureId: StructureId): void;\n\n\tabstract deleteItemById(itemId: OriginId, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void;\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, { beforeItem, afterItem }, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): HermesObservable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getSourceItem(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getSourceItem();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Directive } from '@angular/core';\n\nimport { SourceGate } from '../../../../source/feature/gate/source.gate';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../../source/core/api/event/source-event.service';\n\n\n@Directive({\n\tselector: 'gui-list-view[items]'\n})\nexport class ListViewSourceGate extends SourceGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprotected readonly sourceCommandService: SourceCommandInvoker,\n\t\t\t\tprotected readonly sourceEventService: SourceEventService) {\n\t\tsuper(structureId, sourceCommandService, sourceEventService);\n\t}\n\n}\n","import { ListViewPagingGate } from './paging/list-view-paging.gate';\nimport { ListViewModeGate } from './mode/list-view-mode.gate';\nimport { ListViewTemplateGate } from './template/list-view-template.gate';\nimport { ListViewFieldGate } from './field/list-view-field.gate';\nimport { ListViewSearchingGate } from './searching/list-view-searching.gate';\nimport { ListViewL10nGate } from './l10n/list-view-l10n.gate';\nimport { ListViewSourceGate } from './source/list-view-source.gate';\n\nexport const listViewGatewayDeclarations = [\n\tListViewPagingGate,\n\tListViewModeGate,\n\tListViewTemplateGate,\n\tListViewFieldGate,\n\tListViewSearchingGate,\n\tListViewL10nGate,\n\tListViewSourceGate\n];\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, { phrase, initial }, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, origin, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../core/api/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, values, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, preparedItems, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent\n} from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSummariesChangedAggregateEvent') {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(\n\t\t\t\tstructureSummariesChangedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSummariesChangedAggregateEvent.getSummaries()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getAggregateId(),\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getPreparedItems()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tconst searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchHighlightArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly HIGHLIGHTING = true;\n\n\tconstructor() {\n\t\tsuper(SearchHighlightArchive.HIGHLIGHTING);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive extends AggregateArchive<string> {\n\n\tstatic readonly PLACEHOLDER = 'Search...';\n\n\tconstructor() {\n\t\tsuper(SearchPlaceholderArchive.PLACEHOLDER);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './phrase/set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.searchHighlightArchive.next(structureId, config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.searchPlaceholderArchive.next(structureId, config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPhraseArchive extends AggregateArchive<string> {\n\n\tstatic readonly SEARCH_PHRASE = '';\n\n\tconstructor() {\n\t\tsuper(SearchPhraseArchive.SEARCH_PHRASE);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseArchive } from './search-phrase.archive';\nimport { SearchPhraseSetDomainEvent } from './set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private readonly searchPhraseRepository: SearchPhraseArchive) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.searchPhraseRepository.next(event.getAggregateId(), event.getPhrase());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchingEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly ENABLED = false;\n\n\tconstructor() {\n\t\tsuper(SearchingEnabledArchive.ENABLED);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingEnabledArchive } from './searching-enabled.archive';\n\nimport { ConfigSearchingSetEvent } from '../config/config-searching-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './phrase/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from './phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from './enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Injectable()\nexport abstract class SearchWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onSearchEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPhrase(structureId: StructureId): HermesObservable<string>;\n\n\tabstract onHighlight(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPlaceholder(structureId: StructureId): HermesObservable<string>;\n\n}\n","import { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Injectable } from '@angular/core';\nimport { SearchWarehouse } from '../api/search.warehouse';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDomainWarehouse extends SearchWarehouse {\n\n\tconstructor(private readonly searchingEnabledArchive: SearchingEnabledArchive,\n\t\t\t\tprivate readonly searchPhraseArchive: SearchPhraseArchive,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\t}\n\n\tonSearchEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchingEnabledArchive.on(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPhraseArchive.on(structureId);\n\t}\n\n\tonHighlight(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchHighlightArchive.on(structureId);\n\t}\n\n\tonPlaceholder(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPlaceholderArchive.on(structureId);\n\t}\n\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { SearchPhraseSetDomainEvent } from '../domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { Injectable } from '@angular/core';\nimport { SearchEventRepository } from '../api/search.event-repository';\n\n@Injectable()\nexport class SearchDomainEventRepository extends SearchEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string> {\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   hermesMap((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   hermesFilter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../api/search.command-invoker';\n\n\n@Injectable()\nexport class SearchDomainCommandInvoker extends SearchCommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t\tsuper();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\nimport { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchDomainWarehouse } from '../domain-read/search.domain-warehouse';\nimport { SearchDomainEventRepository } from '../domain-read/search.domain-event-repository';\nimport { SearchDomainCommandInvoker } from '../domain/search.domain-command-invoker';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SearchCommandInvoker,\n\t\t\tuseClass: SearchDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SearchWarehouse,\n\t\t\tuseClass: SearchDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SearchEventRepository,\n\t\t\tuseClass: SearchDomainEventRepository\n\t\t},\n\n\t\tSearchPhraseArchive,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingEnabledArchive\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\n\nimport { GuiComponent } from './gui-component';\n\n\nexport abstract class StaticComponent extends GuiComponent implements OnInit {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.changeDetectorRef.detach();\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StaticComponent } from './static-component';\n\nexport abstract class IconComponent extends StaticComponent {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t\tthis.addClassToHost('gui-icon');\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-search-icon]',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { StructureId } from '../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\nimport { fromRxJsObservable, HermesSubscription } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-search-bar]',\n\ttemplateUrl: './search.component.html',\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder: string;\n\n\tsearchingEnabled: boolean;\n\n\tsearchInputSubscription: HermesSubscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onPlaceholder(this.structureId),\n\t\t\t(placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tconst controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-bar';\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tfromRxJsObservable(\n\t\t\t\tthis.searchForm\n\t\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t\t.valueChanges\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tdebounceTime(200)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.hermesTakeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tSearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-sorting-selector]',\n\ttemplateUrl: './sorting-selector.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SortingSelectorComponent extends SmartComponent {\n\n\tsortingOptions = [\n\t\t'Name: A-Z',\n\t\t'Name: Z-A',\n\t\t'Price: Low to High',\n\t\t'Price: High to Low',\n\t\t'None'\n\t];\n\n\tselectedSorting = this.sortingOptions[0];\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tchangeSorting(sorting: string) {\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-sorting-selector';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { SortingSelectorComponent } from './sorting-selector.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricSelectModule\n\t],\n\tdeclarations: [\n\t\tSortingSelectorComponent\n\t],\n\texports: [\n\t\tSortingSelectorComponent\n\t]\n})\nexport class SortingSelectorFeatureModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n@Component({\n\tselector: 'div[gui-filter-icon]',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\nimport { ColumnId } from './column/column.id';\n\n\n@Injectable()\nexport abstract class CompositionWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onContainerWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>>;\n\n\tabstract onHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder>;\n\n\tabstract onTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>>;\n\n\tabstract onResizeWidth(compositionId: CompositionId): HermesObservable<boolean>;\n\n\tabstract onGroups(compositionId: CompositionId): HermesObservable<GroupCollection>;\n\n\tabstract onHighlightedColumn(columnId: ColumnId, compositionId: CompositionId): HermesObservable<boolean>;\n\n\t// abstract onHighlightedColumns(compositionId: CompositionId)\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelArchive extends AggregateArchive<ReadonlyArray<FieldReadModel>> {\n\n\tstatic readonly default: ReadonlyArray<FieldReadModel> = [];\n\n\tconstructor() {\n\t\tsuper(FieldReadModelArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './read/field-read-model.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private readonly fieldReadModelArchive: FieldReadModelArchive) {\n\t}\n\n\tonFields(structureId: StructureId): HermesObservable<ReadonlyArray<FieldReadModel>> {\n\t\treturn this.fieldReadModelArchive.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class FilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(FilterEnabledArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class QuickFilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(QuickFilterEnabledArchive.default);\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeArchive extends AggregateArchive<FilterTypeMap> {\n\n\tstatic readonly default = new FilterTypeMap(new Map());\n\n\tconstructor() {\n\t\tsuper(FilterTypeArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterArchive extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tstatic readonly default: ReadonlyArray<ActiveFilterReadModel> = [];\n\n\tconstructor() {\n\t\tsuper(ActiveFilterArchive.default);\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (const key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesArchive extends AggregateArchive<UniqueValuesReadModel> {\n\n\tstatic readonly default = new UniqueValuesReadModel(new Map());\n\n\tconstructor() {\n\t\tsuper(UniqueValuesArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledArchive } from './read/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from './read/quick-filter-enabled.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterTypeArchive } from './type/filter-type.archive';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterArchive } from './active/active-filter.archive';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesArchive } from './unique/unique-values.archive';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly filterEnabledArchive: FilterEnabledArchive,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledArchive,\n\t\t\t\tprivate readonly filterTypeArchive: FilterTypeArchive,\n\t\t\t\tprivate readonly uniqueValuesArchive: UniqueValuesArchive,\n\t\t\t\tprivate readonly activeFilterArchive: ActiveFilterArchive) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.filterEnabledArchive.on(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureQuickFilterRepository.on(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): HermesObservable<FilterTypeMap> {\n\t\treturn this.filterTypeArchive.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): HermesObservable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterArchive.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): HermesObservable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesArchive.on(structureId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-filter-menu]',\n\ttemplateUrl: './filter-menu.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onFilterTypes(this.structureId),\n\t\t\t(filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.fieldWarehouse.onFields(this.structureId),\n\t\t\t(fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t}\n\t\t);\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { filterContainerToken } from '../../core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../core/api/config/filter-container-ref';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-filter-menu-trigger]',\n\ttemplateUrl: './filter-menu-trigger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstyleUrls: [\n\t\t'../style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-trigger';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-column-selector][columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent extends PureComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-selector';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-filter-type-selector][filterTypes]',\n\ttemplateUrl: './filter-type-selector.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-type-selector';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-filter-value]',\n\ttemplateUrl: './filter-value.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterValueComponent extends SmartComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly formBuilder: FormBuilder) {\n\t\tsuper(detector, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-value';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../../field/core/api/read/field.read-model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-field-selector][fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-field-selector';\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'FilterToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (const fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (const filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (const filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledArchive } from './quick-filter-enabled.archive';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledArchive } from './filter-enabled.archive';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, map, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FilterTypeArchive } from './filter-type.archive';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeArchive: FilterTypeArchive) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeArchive.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, filters, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterArchive } from './active-filter.archive';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tconst activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, map, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesArchive } from './unique-values.archive';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesArchive) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tconst uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tconst uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, { fieldConfigs, fields }, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeArchive } from './type/filter-type.archive';\nimport { ActiveFilterArchive } from './active/active-filter.archive';\nimport { UniqueValuesArchive } from './unique/unique-values.archive';\nimport { FilterEnabledArchive } from './read/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from './read/quick-filter-enabled.archive';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeArchive,\n\t\tActiveFilterArchive,\n\t\tUniqueValuesArchive,\n\t\tFilterEnabledArchive,\n\t\tQuickFilterEnabledArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-active-filter-list]',\n\ttemplateUrl: './active-filter-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-filter-list';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'div[gui-active-search]',\n\ttemplateUrl: './active-search.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t}\n\t\t);\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-search';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\nimport { ActiveFilterListComponent } from './active-filter-list.component';\nimport { ActiveSearchComponent } from './search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tActiveFilterListComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tActiveFilterListComponent\n\t]\n})\nexport class ActiveFilterListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './value/filter-value.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { ActiveFilterListModule } from '../active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule,\n\t\tFilterApiModule,\n\t\tActiveFilterListModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tFieldSelectorComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { ListViewComponent } from './list-view.component';\nimport { ListViewSourceComponent } from './source/list-view-source.component';\nimport { ListViewLayoutComponent } from './layout/list-view-layout.component';\nimport { ListViewItemComponent } from './source/list-item/list-view-item.component';\n\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { EmptySourceFeatureModule } from '../../source/feature/empty/empty-source.feature-module';\nimport { ListViewContainerCardComponent } from './card/list-view.container-card.component';\nimport { ListViewCardItemComponent } from './card/card-item/list-view.card-item.component';\nimport { ListViewContainerModeSelectComponent } from './container/select/list-view.container-mode-select.component';\nimport { ListViewApiModule } from '../core/api/list-view.api-module';\nimport { listViewGatewayDeclarations } from './gate/list-view.gates';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { SortingSelectorFeatureModule } from '../../sorting/feature/selector/sorting-selector.feature-module';\nimport { FilterMenuFeatureModule } from '../../filter/feature/menu/filter-menu.feature-module';\n\nconst exportDeclarations = [\n\tListViewComponent,\n\tlistViewGatewayDeclarations,\n\t...listViewGatewayDeclarations\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewApiModule,\n\n\t\tFabricSelectModule,\n\t\tPagingFeatureModule,\n\t\tSearchFeatureModule,\n\t\tEmptySourceFeatureModule,\n\t\tSortingSelectorFeatureModule,\n\t\tFilterMenuFeatureModule\n\t],\n\tdeclarations: [\n\t\tListViewComponent,\n\t\tListViewItemComponent,\n\t\tListViewLayoutComponent,\n\t\tListViewSourceComponent,\n\n\t\tListViewContainerCardComponent,\n\t\tListViewCardItemComponent,\n\t\tListViewContainerModeSelectComponent,\n\n\t\t...listViewGatewayDeclarations\n\t],\n\texports: exportDeclarations,\n\tproviders: []\n})\nexport class ListViewFeatureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tconstructor(private readonly paging: PagingFeatureModule) {\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StaticComponent } from '../../../../../../common/cdk/component/static-component';\n\n@Component({\n\tselector: 'div[gui-info-dialog]',\n\ttemplateUrl: './structure-info-modal.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoModalComponent extends StaticComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-info-dialog';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-dialog-column-manager]',\n\ttemplateUrl: './structure.dialog-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogColumnManagerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-dialog-column-manager';\n\t}\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\n\n@Injectable()\nexport abstract class SchemaWarehouse implements Warehouse {\n\n\tabstract onTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onceTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n\tabstract onCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass>;\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled: boolean = false;\n\n\tprivate readonly infoDialog: boolean = true;\n\n\tprivate readonly columnsManager: boolean = true;\n\n\tprivate readonly schemaManager: boolean = true;\n\n\tprivate readonly sourceSize: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-schema-manager-dialog]',\n\ttemplate: `\n\t\t<div gui-structure-schema-manager></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogSchemaManagerComponent extends PureComponent {\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-pr-10');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-schema-manager-dialog';\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\tinjector: injector\n\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from '../../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from '../../../core/api/panel/info/structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-panel]',\n\ttemplateUrl: './structure.info-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onPreparedEntities(this.structureId),\n\t\t\t(preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t}\n\t\t);\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-panel';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from './column/column-definition-id';\n\n\n@Injectable()\nexport abstract class CompositionCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(compositionId: CompositionId): void;\n\n\tabstract setColumns(params: Array<ColumnParams>, compositionId: CompositionId): void;\n\n\tabstract setGroups(configs: any, compositionId: CompositionId): void;\n\n\tabstract setWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setContainerWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setResizeWidth(enabled: boolean, compositionId: CompositionId): void;\n\n\tabstract enableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract disableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract highlightColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager]',\n\ttemplate: `\n\n\t\t<ol class=\"gui-p-0 gui-my-4 gui-mx-0 gui-list-none gui-overflow-auto\">\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\"\n\t\t\t\tclass=\"gui-p-6 gui-cursor-pointer\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onAllColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandInvoker.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandInvoker.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-menu-column-manager]',\n\ttemplateUrl: './structure.menu-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureMenuColumnManagerComponent extends PureComponent {\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-menu-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-icon]',\n\ttemplateUrl: './structure.info-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-icon';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from './row-coloring/row-coloring';\n\n\n@Injectable()\nexport abstract class SchemaCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(schemaId: SchemaReadModelRootId): void;\n\n\tabstract setTheme(\n\t\ttheme: SchemaTheme,\n\t\tschemaId: SchemaReadModelRootId,\n\t\tstructureId: StructureId\n\t): void;\n\n\tabstract setRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/api/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring/row-coloring';\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../structure/core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager]',\n\ttemplateUrl: './structure.schema-manger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends SmartComponent implements OnInit {\n\n\tcoloring: Array<GuiSelectOption> = Object.keys(SchemaRowColoring)\n\t\t\t\t\t\t\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t\t\t\t\t\t\t .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t\t value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t name: value\n\t\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t\t });\n\n\tthemes: Array<GuiSelectOption> = Object.keys(SchemaTheme)\n\t\t\t\t\t\t\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t\t\t\t\t\t\t   .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t   .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t\t\t   value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t   name: value\n\t\t\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t\t\t   });\n\n\tselectedRowColoring: GuiSelectOption;\n\n\tselectedTheme: GuiSelectOption;\n\n\tverticalGrid: boolean;\n\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onRowColoring(this.schemaReadModelRootId),\n\t\t\t(rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = {\n\t\t\t\t\tvalue: SchemaRowColoring[rowColoring],\n\t\t\t\t\tname: SchemaRowColoring[rowColoring]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onTheme(this.schemaReadModelRootId),\n\t\t\t(schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = {\n\t\t\t\t\tvalue: SchemaTheme[schemaTheme],\n\t\t\t\t\tname: SchemaTheme[schemaTheme]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onVerticalGrid(this.schemaReadModelRootId),\n\t\t\t(verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onHorizontalGrid(this.schemaReadModelRootId),\n\t\t\t(horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t}\n\t\t);\n\n\t}\n\n\ttoggleTheme(theme: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setTheme(this.toTheme(theme.value), this.schemaReadModelRootId, this.structureId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setRowColoring(this.toRowColoring(schemaRowColoring.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager-icon]',\n\ttemplateUrl: './structure.schema-manager-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSchemaManagerIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\n\t\t<h3>Active filters</h3>\n\n\t\t<div gui-active-filter-list></div>\n\n\t\t<div>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { ActiveFilterListModule } from '../../../filter/feature/active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\t\tActiveFilterListModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from '../../../core/api/panel/info/structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source/feature/counter/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate static readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate static readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate static readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate static readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate static readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate static readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate static readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate static readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate static readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.classModifier = new ClassModifier();\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tconst diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, SchemaCssClassManager.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, SchemaCssClassManager.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn SchemaCssClassManager.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn SchemaCssClassManager.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn SchemaCssClassManager.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).add(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).remove(cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { CommandDispatcher, DomainEvent, DomainEventBus, hermesFilter, hermesTake } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureGateway } from '../structure.gateway';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(changes: NgChanges<StructureGateway>): void {\n\n\t\tconst config: Array<ColumnConfig | MultiColumnConfig> = changes.columns.currentValue;\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(changes.columns.currentValue);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: Array<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tconst columnConfigs: Array<ColumnConfig> = [],\n\t\t\tgroupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs.push(...(config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/** *********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tsource: Array<any> = [];\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig> = [];\n\n\t// @Input()\n\t// filtering: boolean | FilterConfig;\n\n\t// @Input()\n\t// quickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\n\t/** *********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\telementRef: ElementRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandInvoker: StructureCommandInvoker,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandInvoker: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventRepository: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationFacade,\n\t\tprotected structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureGateway>) {\n\n\t\tif (changes.editMode !== undefined && changes.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (changes.cellEditing !== undefined && changes.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (changes.width !== undefined && changes.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width, this.compositionId);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setTheme(this.theme, this.schemaId, this.structureId);\n\t\t}\n\n\t\tif (changes.rowHeight !== undefined && changes.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandInvoker.setRowHeight(this.rowHeight, this.structureId);\n\t\t}\n\n\t\tif (changes.autoResizeWidth !== undefined && changes.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth, this.compositionId);\n\t\t}\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(changes);\n\t\t}\n\n\t\tif (changes.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandInvoker.setContainerHeight(this.maxHeight, this.structureId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (changes.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionEventRepository\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventRepository\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.on()\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onThemeChanged(this.schemaId),\n\t\t\tthis.themeChanged\n\t\t);\n\n\t\tthis.componentInitialized();\n\t}\n\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\n@Injectable()\nexport abstract class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onColumnsChanged(compositionId?: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent>;\n\n\tabstract onContainerWidthChanged(compositionId?: CompositionReadModelRootId): HermesObservable<number>;\n\n}\n","import { OriginId } from '../../domain/origin/origin-id';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly source: OriginItemEntity;\n\n\tconstructor(source: OriginItemEntity,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.source = source;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetSource(): OriginItemEntity {\n\t\treturn this.source;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, { selectedRows, allSelected, allUnselected }, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, hermesFilter, hermesMap, HermesObservable, HermesSubject, hermesSwitchMap, hermesTake } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly subject$ = new HermesSubject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesSwitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   hermesTake(1),\n\t\t\t\t\t\t\t\t   hermesMap((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map<string, OriginItemEntity>();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   const item: OriginItemEntity = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getSourceItem(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.subject$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): HermesObservable<ReadonlyArray<SelectedRow>> {\n\t\treturn this.subject$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HermesObservable, HermesSubject } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new HermesSubject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): HermesObservable<void> {\n\t\treturn this.closeAll$.toObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\nimport { SchemaId } from '../domain/schema.id';\n\n@Injectable()\nexport abstract class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","export abstract class DynamicallyCreatedComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tif (this.hasInputs()) {\n\t\t\tthis.throwError('it cannot have properties annotated with @Inputs().')\n\t\t}\n\t}\n\n\tprivate hasInputs(): boolean {\n\n\t\treturn false;\n\n\t\t// Works with Angular 12\n\t\t// return !this.isEmpty((this.constructor as any).Éµcmp.inputs);\n\t}\n\n\tprivate isEmpty(obj: Object) {\n\t\tfor (const key in obj) {\n\t\t\tif (obj.hasOwnProperty(key))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a DynamicallyCreatedComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\nimport { DynamicallyCreatedComponent } from '../../../../../common/cdk/component/dynamically-created-component';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\n\n@Component({\n\tselector: 'div[gui-row-detail]',\n\ttemplateUrl: './structure.row-detail-view.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent extends DynamicallyCreatedComponent implements OnInit {\n\n\tselectedRowValue: OriginItemEntity;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private readonly item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private readonly template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getSource(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getSource();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/api/structure.id';\n\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly titlePanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Title Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureTitlePanelConfigArchive.titlePanelConfig });\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly footerPanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Footer Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureFooterPanelConfigArchive.footerPanelConfig });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() sortingApiModule: SortingApiModule) {\n\t\tsuper();\n\t\tif (sortingApiModule === null) {\n\t\t\tthrow new Error('SortingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.clear();\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n\n\tprivate clear(): void {\n\t\tthis.fields.clear();\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tconst valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; // (rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getSourceItem()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getSourceItem());\n\t\t} else {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity;\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tconst matcher = fieldConfig.matcher;\n\t\tlet sortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './field-read-model.archive';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelArchive,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './read/field-read-model.archive';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelArchive,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() fieldApiModule: FieldApiModule) {\n\t\tsuper();\n\t\tif (fieldApiModule === null) {\n\t\t\tthrow new Error('FieldApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SetSourceLoadingEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\tsourceItem: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\tsourceItem: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.sourceItem = sourceItem;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetSourceItem(): any {\n\t\treturn this.sourceItem;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.sourceItem };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.sourceItem[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (const element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tconst rows = Array.from(this.selectedRows);\n\t\t\tlet equal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(\n\t\t\t\trowChangedEvent.getSelectedRows(),\n\t\t\t\trowChangedEvent.isAllSelected(),\n\t\t\t\trowChangedEvent.isAllUnselected()\n\t\t\t);\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, mode, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureSourceOriginArchive extends AggregateArchive<ReadonlyArray<any>> {\n\n\tstatic readonly default: ReadonlyArray<any> = [];\n\n\tconstructor() {\n\t\tsuper(StructureSourceOriginArchive.default);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginArchive } from './structure.source-origin.archive';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.next(event.getAggregateId(), origin);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructurePreparedItemsArchive extends AggregateArchive<ReadonlyArray<OriginItemEntity>> {\n\n\tstatic readonly default: ReadonlyArray<OriginItemEntity> = [];\n\n\tconstructor() {\n\t\tsuper(StructurePreparedItemsArchive.default);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetPreparedItems(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.get(structureId).getValueOrNullOrThrowError();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsArchive } from './structure.prepared-items.archive';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.next(event.getAggregateId(), preparedItems);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { hermesMap, HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tconst selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tconst item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getSourceItem(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId): HermesObservable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getValueOrNullOrThrowError().getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId): HermesObservable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId): HermesObservable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { hermesDistinctUntilChanged, hermesMap, HermesObservable, hermesTake } from '@generic-ui/hermes';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\n\n\n@Injectable()\nexport class SourceDomainWarehouse extends SourceWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate readonly structurePreparedItemsRepository: StructurePreparedItemsArchive,\n\t\t\t\tprivate readonly structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetEntities(structureId: StructureId): ReadonlyArray<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   hermesDistinctUntilChanged((ents1: ReadonlyArray<ItemEntity>, ents2: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((entities: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonceEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.on(structureId);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, fromRxJsObservable, hermesMap, hermesTake, toRxJsObservable } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { SelectedRow } from '../api/formation/selected-row';\nimport { SourceCommandInvoker } from '../api/source.command-invoker';\n\n\n@Injectable()\nexport class SourceDomainCommandInvoker extends SourceCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void {\n\n\t\tconst itemId$ =\n\t\t\ttoRxJsObservable(\n\t\t\t\tthis.sourceReadModelService\n\t\t\t\t\t.onceEntities(structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesMap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t);\n\n\t\tconst fieldId$ = toRxJsObservable(\n\t\t\tthis.fieldWarehouse.onFields(structureId)\n\t\t);\n\n\t\tfromRxJsObservable(\n\t\t\tzip(itemId$, fieldId$)\n\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\nimport { SourceDomainWarehouse } from '../domain-read/source.domain-warehouse';\nimport { SourceDomainCommandInvoker } from '../domain/source.domain.command-invoker';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginArchive,\n\t\tStructurePreparedItemsArchive,\n\t\tSourceConverter,\n\n\t\t{\n\t\t\tprovide: SourceCommandInvoker,\n\t\t\tuseClass: SourceDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SourceWarehouse,\n\t\t\tuseClass: SourceDomainWarehouse\n\t\t},\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, theme, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, rowColoring, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, verticalGrid, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, horizontalGrid, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaDomainEvent } from '../schema.domain-event';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, null, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../schema.aggregate';\nimport { SchemaId } from '../schema.id';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from './schema.aggregate';\nimport { SchemaId } from './schema.id';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract findById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends AggregateArchive<SchemaCssClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { SchemaTheme } from '../theme/schema-theme';\nimport { SchemaRowColoring } from '../row-coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.next(\n\t\t\t\taggregateId,\n\t\t\t\tnew SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring)\n\t\t\t);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends EventDrivenRepository<SchemaId, SchemaVerticalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n@Injectable()\nexport class SchemaThemeRepository extends EventDrivenRepository<SchemaId, SchemaThemeSetEvent, SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n@Injectable()\nexport class SchemaRowColoringRepository extends EventDrivenRepository<SchemaId, RowColoringSetEvent, SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends EventDrivenRepository<SchemaId, SchemaHorizontalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from './schema.key';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridRepository),\n\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { SchemaDispatcher } from './schema.dispatcher';\nimport { StructureCommandInvoker } from '../../../structure/core/api/structure.command-invoker';\nimport { FabricModalThemeService, Theme } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from '../api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { Injectable } from '@angular/core';\nimport { SchemaCommandInvoker } from '../api/schema.command-invoker';\n\n\n@Injectable()\nexport class SchemaDomainCommandInvoker extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly fabricModalThemeService: FabricModalThemeService) {\n\t\tsuper();\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme,\n\t\t\t schemaId: SchemaReadModelRootId,\n\t\t\t structureId: StructureId\n\t): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\t\tthis.fabricModalThemeService.changeTheme(this.toFabricTheme(theme)); // TODO github #2162\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toFabricTheme(schemaTheme: SchemaTheme): Theme {\n\n\t\tswitch (schemaTheme) {\n\t\t\tcase SchemaTheme.DARK: {\n\t\t\t\treturn Theme.DARK;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.FABRIC: {\n\t\t\t\treturn Theme.FABRIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.GENERIC: {\n\t\t\t\treturn Theme.GENERIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.LIGHT: {\n\t\t\t\treturn Theme.LIGHT;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.MATERIAL: {\n\t\t\t\treturn Theme.MATERIAL;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n}\n","import { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaCssClass } from '../api/css-classes/schema-css-class';\nimport { SchemaWarehouse } from '../api/schema.warehouse';\nimport { Injectable } from '@angular/core';\nimport { HermesObservable, hermesTake } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaDomainWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper();\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonceTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\t\treturn this.onTheme(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaVerticalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { DomainEventBus, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from './grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring/row-coloring-set.event';\nimport { SchemaEventRepository } from '../api/schema.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SchemaDomainEventRepository extends SchemaEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/create/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { schemaKey } from '../domain/schema.key';\nimport { SchemaDomainCommandInvoker } from '../domain/schema.domain-command-invoker';\nimport { SchemaDomainWarehouse } from '../domain-read/schema.domain-warehouse';\nimport { SchemaDomainEventRepository } from '../domain/schema.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.commandHandlers()\n\t\t\t],\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\t{\n\t\t\tprovide: SchemaCommandInvoker,\n\t\t\tuseClass: SchemaDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaWarehouse,\n\t\t\tuseClass: SchemaDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaEventRepository,\n\t\t\tuseClass: SchemaDomainEventRepository\n\t\t},\n\n\t\tSchemaCssClassesRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","export enum StyleName {\n\tWIDTH = 'width',\n\tHEIGHT = 'height',\n\tPADDING_TOP = 'padding-top'\n}\n","import { StyleModifierApi } from './style-modifier-api';\nimport { StyleName } from './style-name';\nimport { Modifier } from '../core/modifier';\n\n\nexport class StyleModifier extends Modifier<StyleModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): StyleModifierApi {\n\t\treturn new StyleModifier.StyleModifier(htmlElement);\n\t}\n\n\tprivate static readonly StyleModifier = class implements StyleModifierApi {\n\n\t\tprivate static readonly STYLE = 'style';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetStyleByName(name: string, value: string): void {\n\t\t\tthis.set(name, value);\n\t\t}\n\n\t\tsetWidth(value: number): void {\n\t\t\tthis.set(StyleName.WIDTH, this.toPx(value));\n\t\t}\n\n\t\tsetHeight(value: number): void {\n\t\t\tthis.set(StyleName.HEIGHT, this.toPx(value));\n\t\t}\n\n\t\tsetPaddingTop(value: number): void {\n\t\t\tthis.set(StyleName.PADDING_TOP, this.toPx(value));\n\t\t}\n\n\t\tremove(styleName: StyleName): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][styleName] = '';\n\t\t}\n\n\t\tremoveStyleByName(name: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = '';\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(StyleModifier.StyleModifier.STYLE);\n\t\t}\n\n\t\tprivate set(name: string, value: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = value;\n\t\t}\n\n\t\tprivate toPx(value: number): string {\n\t\t\treturn value > 0 ? `${value}px` : `${value}`;\n\t\t}\n\n\t};\n\n}\n","import { AggregateArchive, AggregateId, hermesFilter, HermesObservable, hermesTake } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StructureInitialValuesReadyArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(StructureInitialValuesReadyArchive.default);\n\t}\n\n\ton(aggregateId: AggregateId): HermesObservable<boolean> {\n\t\treturn super.on(aggregateId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(v => v)\n\t\t\t\t\t);\n\t}\n\n\tonce(aggregateId: AggregateId): HermesObservable<boolean> {\n\t\treturn this.on(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesConfig } from './summaries-config';\n\n\n@Injectable()\nexport abstract class SummariesCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSummariesEnabled(enabled: boolean, structureId: StructureId): void;\n\n\tabstract setConfig(config: SummariesConfig, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SummariesEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>>;\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, 'StructureSummariesChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic readonly DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesManager } from '../summaries.manager';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SummariesEnabledArchive extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper(SummariesManager.DEFAULT_ENABLED);\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.next(structureId, SummariesManager.DEFAULT_ENABLED);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from './summaries-enabled-archive.service';\nimport { StructureSummariesEnabledSetEvent } from '../set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private readonly summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.summariesEnabledArchive.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tconst summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tconst aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './enabled/structure.summaries-enabled-set.event-handler';\nimport { summariesProviders } from './summaries.providers';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...summariesProviders\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SummariesWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onTopEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onBottomEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n}\n","export class StructureSummariesPanelConfig {\n\n\tstatic readonly defaultTop = false;\n\n\tstatic readonly defaultBottom = true;\n\n\tprivate top: boolean = StructureSummariesPanelConfig.defaultTop;\n\n\tprivate bottom: boolean = StructureSummariesPanelConfig.defaultBottom;\n\n\tsetTop(top: boolean): void {\n\t\tthis.top = top;\n\t}\n\n\tsetBottom(bottom: boolean): void {\n\t\tthis.bottom = bottom;\n\t}\n\n\tisTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesConfigArchive extends AggregateArchive<StructureSummariesPanelConfig> {\n\n\tstatic readonly default = new StructureSummariesPanelConfig();\n\n\tconstructor() {\n\t\tsuper(StructureSummariesConfigArchive.default);\n\t}\n\n}\n","import { SummariesEnabledArchive } from '../domain/enabled/summaries-enabled-archive.service';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesWarehouse } from '../api/summaries.warehouse';\nimport { Injectable } from '@angular/core';\nimport { hermesMap, HermesObservable, hermesSwitchMap } from '@generic-ui/hermes';\nimport { StructureSummariesConfigArchive } from '../domain/config/structure.summaries-config.archive';\nimport { StructureSummariesPanelConfig } from '../domain/config/structure.summaries-panel.config';\n\n@Injectable()\nexport class SummariesDomainWarehouse extends SummariesWarehouse {\n\n\tconstructor(private readonly summariesEnabledArchive: SummariesEnabledArchive,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesConfigArchive) {\n\t\tsuper();\n\t}\n\n\tonEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.summariesEnabledArchive.on(structureId);\n\t}\n\n\tonBottomEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.onEnabled(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesSwitchMap((enabled) => {\n\t\t\t\t\t\t   return this.structureSummariesArchive\n\t\t\t\t\t\t\t\t\t  .on(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((config: StructureSummariesPanelConfig) => enabled && config.isBottomEnabled())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\n\t}\n\n\tonTopEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.onEnabled(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesSwitchMap((enabled) => {\n\t\t\t\t\t\t   return this.structureSummariesArchive\n\t\t\t\t\t\t\t\t\t  .on(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((config: StructureSummariesPanelConfig) => enabled && config.isTopEnabled())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tconst panelConfig = new StructureSummariesPanelConfig();\n\n\t\tif (config.top !== undefined && config.top !== null) {\n\t\t\tpanelConfig.setTop(config.top);\n\t\t}\n\n\t\tif (config.bottom !== undefined && config.bottom !== null) {\n\t\t\tpanelConfig.setBottom(config.bottom);\n\t\t}\n\n\t\treturn panelConfig;\n\t}\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSetSummariesEnabledCommand } from './set/structure.set-summaries-enabled.command';\nimport { Injectable } from '@angular/core';\nimport { SummariesCommandInvoker } from '../api/summaries.command-invoker';\nimport { SummariesConfig } from '../api/summaries-config';\nimport { StructureSummariesPanelConfigConverter } from './config/structure.summaries-panel.config-converter';\nimport { StructureSummariesConfigArchive } from './config/structure.summaries-config.archive';\n\n@Injectable()\nexport class SummariesDomainCommandInvoker extends SummariesCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly configConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate readonly structureSummariesConfigArchive: StructureSummariesConfigArchive) {\n\t\tsuper();\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n\tsetConfig(config: SummariesConfig, structureId: StructureId): void {\n\n\t\tconst summariesPanelConfig = this.configConverter.convert(config);\n\n\t\tthis.setSummariesEnabled(config.enabled, structureId);\n\t\tthis.structureSummariesConfigArchive.next(structureId, summariesPanelConfig);\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { SummariesEventRepository } from '../api/summaries.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class SummariesDomainEventRepository extends SummariesEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SummariesCommandInvoker } from './summaries.command-invoker';\nimport { SummariesEventRepository } from './summaries.event-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { SummariesEnabledArchive } from '../domain/enabled/summaries-enabled-archive.service';\nimport { SummariesWarehouse } from './summaries.warehouse';\nimport { SummariesDomainWarehouse } from '../domain-read/summaries.domain-warehouse';\nimport { SummariesDomainCommandInvoker } from '../domain/summaries.domain-command-invoker';\nimport { SummariesDomainEventRepository } from '../domain-read/summaries.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SummariesCommandInvoker,\n\t\t\tuseClass: SummariesDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesEventRepository,\n\t\t\tuseClass: SummariesDomainEventRepository\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesWarehouse,\n\t\t\tuseClass: SummariesDomainWarehouse\n\t\t},\n\t\tSummariesEnabledArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation, OnInit } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesEventRepository } from '../../core/api/summaries.event-repository';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from '../structure.summaries-translations';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-summaries-panel][enabled]',\n\ttemplateUrl: './structure.summaries-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummariesPanelComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tcheckboxSelection: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureSummariesEventRepository: SummariesEventRepository,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureSummariesEventRepository.onSummariesChanged(this.structureId.toReadModelRootId()),\n\t\t\t(event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onEntitiesSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t}\n\t\t);\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-summaries-panel';\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\nimport { StructureSummariesPanelComponent } from './panel/structure.summaries-panel.component';\nimport { StructureSummariesConfigArchive } from '../core/domain/config/structure.summaries-config.archive';\nimport { StructureSummariesPanelConfigConverter } from '../core/domain/config/structure.summaries-panel.config-converter';\nimport { FabricModule } from '@generic-ui/fabric';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesConfigArchive,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t];\n\t}\n\n\tconstructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t\tsuper();\n\t\tif (summariesApiModule === null) {\n\t\t\tthrow new Error('SummariesApiModule is required.');\n\t\t}\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/api/structure.id';\nimport { CompositionId } from '../../../composition/core/api/composition.id';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from '../core/api/panel/info/structure.info-panel.archive';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gate/structure.gateway';\nimport { StructureReadModelRoot } from '../core/api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus, hermesTimer } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationFacade } from '../../../l10n/core/api/translation.facade';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\nimport { StyleModifier } from '../../../common/cdk/dom/style/style-modifier';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureInitialValuesReadyArchive } from '../../core/api/structure.initial-values-ready.archive';\nimport { SummariesFeatureModule } from '../../summaries/feature/summaries.feature-module';\n\n\n/** @internal */\nexport function structureIdFactoryForGrid(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactoryForGrid(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactoryForGrid(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\tSchemaFeatureModule.forComponent(),\n\tSummariesFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'../../../composition/feature/style/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, OnDestroy, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationFacade,\n\t\t\t\tstructureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly detectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly injector: Injector,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdetectorRef,\n\t\t\telementRef,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService,\n\t\t\tstructureInitialValuesReadyArchive\n\t\t);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tstructureCommandService.create(this.structureId);\n\t\tcompositionCommandDispatcher.create(this.compositionId);\n\t\tschemaCommandDispatcher.create(this.schemaId);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureComponent>) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\tthis.structure = structureReadModelRoot;\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.detectorRef.detectChanges();\n\t\t\t}\n\t\t);\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\n\t\tthis.structureInitialValuesReadyArchive\n\t\t\t.next(this.structureId, true);\n\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\thermesTimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.hermesTakeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getHost().setWidth(width);\n\t\t\t}\n\t\t);\n\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure';\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild, ViewEncapsulation, Injector } from '@angular/core';\n\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValuesReadModel } from '../../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationFacade } from '../../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../../l10n/core/api/translation';\nimport { hermesSwitchMap } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/core/api/composition.id';\nimport { CompositionCommandInvoker } from '../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigDialogCloserService } from './structure.column-config-dialog-closer.service';\nimport { StructureColumnConfigService } from '../structure.column-config.service';\n\n\n@Component({\n\tselector: 'div[gui-column-config]',\n\ttemplateUrl: './structure.column-config.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tprivate readonly structureColumnConfigService: StructureColumnConfigService;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationFacade: TranslationFacade,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnConfigService = this.injector.get(StructureColumnConfigService);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureColumnMenuConfigArchive\n\t\t\t\t.on()\n\t\t\t\t.pipe(\n\t\t\t\t\thermesSwitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\t\tthis.config = config;\n\t\t\t\t\t\treturn this.translationFacade.onTranslation();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t}\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\thideColumn(): void {\n\t\tthis.compositionCommandInvoker.disableColumn(this.column.getColumnDefinitionId(), this.compositionId);\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveLeft(): void {\n\t\tthis.compositionCommandInvoker.moveLeft(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(): void {\n\t\tthis.compositionCommandInvoker.moveRight(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\thighlightColumn(): void {\n\t\tthis.compositionCommandInvoker.highlightColumn(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-config';\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, FabricPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { Reactive } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\t\tthis.close();\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: FabricPlacement.BOTTOM,\n\t\t\t\t\toffset: -34,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-columns][columns]',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-columns';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-filters][columns]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell gui-flex gui-justify-between\n\\t gui-overflow-hidden gui-relative gui-py-0 gui-px-6 gui-box-border\n\\t gui-leading-4 gui-whitespace-nowrap gui-overflow-ellipsis\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent extends PureComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn '';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class VerticalFormationWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onRowHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onContainerHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onTopMargin(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onScrollBarPosition(structureId: StructureId): HermesObservable<number>;\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-header]',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.styleModifier = new StyleModifier(elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.containerRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onFilteringEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onGroups(this.compositionId),\n\t\t\t(collection: GroupCollection) => {\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.styleModifier.getElement(this.filtersRef.nativeElement).setHeight(headerHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header';\n\t}\n\n}\n","import { HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new HermesReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): HermesObservable<T> {\n\t\treturn this.subject$.toObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-filter';\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../paging/core/api/read/paging';\nimport { Source } from '../../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly source: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(source: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.source = source;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetSourceItem(): any {\n\t\treturn this.source;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.sourceItem, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'RowHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, null, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n\tDomainEvent,\n\tDomainEventBus,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesMap,\n\tHermesObservable,\n\tHermesReplaySubject,\n\tReactive\n} from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { PageChangedEvent } from '../../../paging/core/domain/page/page-changed.event';\nimport { PagingSetEvent } from '../../../paging/core/domain/set/paging-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new HermesReplaySubject<Map<string, VerticalFormationReadModel>>(1);\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any,\n\t\t\t\tPageChangedEvent as any,\n\t\t\t\tPagingSetEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getRowHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getViewPortHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getTopMargin()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): HermesObservable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\nimport { fromRxJsObservable, toRxJsObservable } from '@generic-ui/hermes';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-structure-content]',\n\ttemplateUrl: './structure-content.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureEditModeArchive.on(),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureCellEditArchive.on(),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaRowClassArchive.on(),\n\t\t\t(schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaRowStyleArchive.on(),\n\t\t\t(schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\tcombineLatest(\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onPhrase(this.structureId)),\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onHighlight(this.structureId))\n\t\t\t\t)\n\t\t\t),\n\t\t\t(args: Array<any>) => {\n\n\t\t\t\tconst searchPhrase = args[0],\n\t\t\t\t\thighlighting = args[1];\n\n\t\t\t\tthis.highlighting = highlighting;\n\t\t\t\tthis.searchPhrase = searchPhrase;\n\n\t\t\t\tif (!this.highlighting) {\n\t\t\t\t\tthis.searchPhrase = '';\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tconst height = index * this.rowHeight;\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE, this.structureId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-content';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { StyleModifier } from '../../../../../common/cdk/dom/style/style-modifier';\nimport { ClassModifier } from '../../../../../common/cdk/dom/class/class-modifier';\nimport { CssClassModifier } from '../../../../common/css-class/css-class.modifier';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-structure-row]',\n\ttemplateUrl: './structure-row.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t\tthis.classModifier = new ClassModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowComponent>) {\n\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t\tthis.updateRowClass(changes.entity.previousValue);\n\t\t\tthis.updateRowStyle(changes.entity.previousValue);\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calculateRowStyle(entity: ItemEntity): string {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\t\t\treturn this.rowStyle.style || '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\t\t\treturn this.rowStyle.styleFunction(entity.getSourceItem(), entity.getPosition());\n\t\t}\n\t}\n\n\tprivate updateRowStyle(prevEntity?: ItemEntity) {\n\n\t\tif (prevEntity) {\n\t\t\tconst rowStylesToRemove = this.calculateRowStyle(prevEntity);\n\n\t\t\tthis.removeRowStyles(rowStylesToRemove);\n\t\t}\n\n\t\tconst rowStylesToAdd = this.calculateRowStyle(this.entity);\n\n\t\tthis.renderRowStyles(rowStylesToAdd);\n\t}\n\n\tprivate removeRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().removeStyleByName(separatedStyles[0].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().setStyleByName(separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowClass(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst toRemoveClass = this.calculateRowClass(prevEntity);\n\n\t\t\tif (toRemoveClass) {\n\t\t\t\tthis.classModifier.getHost().remove(toRemoveClass);\n\t\t\t}\n\t\t}\n\n\t\tconst toAddClass = this.calculateRowClass(this.entity);\n\n\t\tif (toAddClass) {\n\t\t\tthis.classModifier.getHost().add(toAddClass);\n\t\t}\n\t}\n\n\tprivate calculateRowClass(entity: ItemEntity): string {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(entity.getSourceItem(), entity.getPosition()) || '';\n\t\t\t}\n\t\t}\n\n\t\treturn clazz;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-row';\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE,\n\tNG_TEMPLATE\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tpublic template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getSourceItem());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getSourceItem());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tgetClasses(): string {\n\t\treturn 'gui-cell-highlighted';\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity);\n\t\t\tconst lowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tconst positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += '</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\nimport { hermesTimer } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnId } from '../../../../../composition/core/api/column/column.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-cell][entity][cell]',\n\ttemplateUrl: './structure.cell.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tisHighlighted: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHighlightedColumn(new ColumnId(this.cell.columnDefinitionId.toString()), this.compositionId),\n\t\t\t(value: boolean) => {\n\t\t\t\tthis.isHighlighted = value;\n\t\t\t}\n\t\t)\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.cellEditCloseAllService.onCloseAll(),\n\t\t\t() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t);\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\thermesTimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell';\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { fromRxJsObservable, hermesEmpty, HermesObservable } from '@generic-ui/hermes';\nimport { Observable, Observer } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\n\ndeclare const ResizeObserver: any;\n\nexport type ObservedSize = {\n\tbottom: number;\n\theight: number;\n\tleft: number;\n\tright: number;\n\ttop: number;\n\twidth: number;\n\tx: number;\n\ty: number;\n}\n\n@Injectable()\nexport class ResizeDetector {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t}\n\n\ton(element: HTMLElement): HermesObservable<ObservedSize> {\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\n\t\t\treturn fromRxJsObservable(\n\t\t\t\t(\n\t\t\t\t\tnew Observable((observer: Observer<any>) => {\n\n\t\t\t\t\t\tconst resizeObserver = new ResizeObserver((entries: any) => {\n\n\t\t\t\t\t\t\tif (entries && entries.length > 0) {\n\t\t\t\t\t\t\t\tobserver.next(entries[0].contentRect);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tresizeObserver.observe(element);\n\n\t\t\t\t\t\treturn () => resizeObserver.disconnect();\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tthrottleTime(25)\n\t\t\t\t\t)\n\t\t\t);\n\n\t\t}\n\n\t\treturn hermesEmpty();\n\t}\n\n\tdestroy(element: HTMLElement) {\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport {\n\tfromRxJsObservable,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesFromEvent,\n\thermesMap,\n\tHermesSubject,\n\thermesTakeUntil,\n\ttoRxJsObservable\n} from '@generic-ui/hermes';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { ObservedSize, ResizeDetector } from '../../../../common/cdk/resize-detector/resize.detector';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-container]',\n\ttemplateUrl: './structure-container.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new HermesSubject<void>();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\tprivate readonly structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onContainerHeight(this.structureId),\n\t\t\t(containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\ttoRxJsObservable(this.structureInitialValuesReadyArchive.once(this.structureId))\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tflatMap(() => {\n\t\t\t\t\t\t\treturn combineLatest(\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.sourceWarehouse.onEntities(this.structureId)),\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.compositionWarehouse.onTemplateColumns(this.compositionId))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t),\n\t\t\t(arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onResizeWidth(this.compositionId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\n\t\t\tthis.hermesSubscribeWithoutRender(\n\t\t\t\tthis.resizeDetector\n\t\t\t\t\t.on(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\t\thermesMap((size: ObservedSize) => size.width),\n\t\t\t\t\t\thermesDistinctUntilChanged()\n\t\t\t\t\t),\n\t\t\t\t(width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onVerticalScrollEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.structureWarehouse\n\t\t\t\t.on(this.structureId)\n\t\t\t\t.pipe(\n\t\t\t\t\thermesFilter((str: StructureReadModelRoot) => {\n\t\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onScrollBarPosition(this.structureId),\n\t\t\t(scrollPosition: number) => {\n\n\t\t\t\tthis.elRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.styleModifier.getHost().setHeight(height);\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setPaddingTop(topMargin);\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setHeight(sourceHeight);\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandInvoker.setContainerWidth(width, this.compositionId);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\thermesFromEvent(this.elRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesTakeUntil(this.scrollObservation$),\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop, this.structureId);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-container';\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'div[gui-structure-quick-filters]',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../../core/api/panel/info/structure.info-panel.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\n\nimport { StructureInfoPanelConfig } from '../../core/api/panel/info/structure.info-panel.config';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { StructureBannerPanelConfig } from '../panel/banner-panels/structure-banner-panel.config';\nimport { SummariesWarehouse } from '../../../summaries/core/api/summaries.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-structure-blueprint]',\n\ttemplateUrl: './structure.blueprint.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent implements OnInit {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tprivate pagingReadModel: Paging;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly summariesWarehouse: SummariesWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureHeaderTopEnabledArchive.on(),\n\t\t\t(topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureHeaderBottomEnabledArchive.on(),\n\t\t\t(bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onQuickFiltersEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.summariesWarehouse.onBottomEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.bottomSummariesPanelEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.summariesWarehouse.onTopEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.topSummariesPanelEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureTitlePanelConfigArchive.on(),\n\t\t\t(titlePanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureFooterPanelConfigArchive.on(),\n\t\t\t(footerPanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-blueprint';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, { fieldId, filterTypeId, value }, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../api/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly hermesStructure$ = new HermesReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(structureId: StructureId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(structureId.getId());\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\n\t\treturn this.hermesStructure$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\t\t\t\t\t\t   return structureIdToStructure.get(structureId.getId());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.hermesStructure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, position, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tstatic readonly ROW_HEIGHT = 42;\n\n\tstatic readonly HIDDEN_ITEMS_TOP = 5;\n\n\tstatic readonly HIDDEN_ITEMS_BOTTOM = 2;\n\n\n\tprivate rowHeight: number = VerticalFormation.ROW_HEIGHT;\n\n\tprivate hiddenItemsTop: number = VerticalFormation.HIDDEN_ITEMS_TOP;\n\n\tprivate hiddenItemsBottom: number = VerticalFormation.HIDDEN_ITEMS_BOTTOM;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../api/structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from '../api/structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.key';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (const sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (const value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (const entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (const field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (const notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tconst map = new Map();\n\n\t\tfor (const field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from '../api/structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from '../../../summaries/core/domain/enabled/summaries-enabled-archive.service';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.summariesEnabledArchive.init(structureId);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from '../api/structure.id';\nimport { CreateStructureCommand } from './create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { StructureCommandInvoker } from '../api/structure.command-invoker';\nimport { Injectable } from '@angular/core';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\n\n@Injectable()\nexport class StructureDomainCommandInvoker extends StructureCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVirtualScroll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVirtualScroll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\nimport { StructureDomainCommandInvoker } from '../../../core/domain/structure.domain-command-invoker';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\t{\n\t\tprovide: StructureCommandInvoker,\n\t\tuseClass: StructureDomainCommandInvoker\n\t},\n\n\tStructureInitialValuesReadyArchive\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(source: any): ItemEntity;\n\tcreate(source: Array<any>): Array<ItemEntity>;\n\tcreate(source: any): any {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createEntities(source);\n\t\t} else {\n\t\t\treturn this.createEntity(source);\n\t\t}\n\t}\n\n\tcreateEntities(source: Array<any>): Array<ItemEntity> {\n\t\treturn source.map((source: any) => this.createEntity(source));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.sourceItem, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-top-panel]',\n\ttemplate: `\n\n\t\t<div gui-search-bar\n\t\t\t class=\"gui-flex gui-items-center gui-h-full gui-w-3/5 gui-mr-auto\"></div>\n\t\t<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-p-6');\n\t\tthis.addClassToHost('gui-border-b');\n\t\tthis.addClassToHost('gui-border-b-solid');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-top-panel';\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/menu/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { StructureColumnConfigService } from '../structure.column-config.service';\nimport { StructureColumnMenuConfig } from '../config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureColumnMenuConfigArchive } from '../config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-trigger]',\n\ttemplateUrl: './structure.column-config-trigger.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureColumnMenuConfigArchive.on(),\n\t\t\t(config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t}\n\t\t);\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-trigger';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-sort]',\n\ttemplateUrl: './structure.column-config-sort.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionReadModelService.onSortOrder(this.column.getFieldId(), this.compositionId),\n\t\t\t(sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t}\n\t\t);\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-sort';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-column-hide]',\n\ttemplateUrl: './structure.column-config-column-hide.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigColumnHideComponent extends PureComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Output()\n\tcolumnHidden = new EventEmitter<void>();\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t}\n\n\thideColumn(): void {\n\t\tthis.columnHidden.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-column-hide';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-column-config-column-move][column]',\n\ttemplateUrl: './structure.column-config-column-move.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigColumnMoveComponent extends PureComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Output()\n\tmovedLeft = new EventEmitter<void>();\n\n\t@Output()\n\tmovedRight = new EventEmitter<void>();\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t}\n\n\tmoveLeft(): void {\n\t\tthis.movedLeft.emit();\n\t}\n\n\tmoveRight(): void {\n\t\tthis.movedRight.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-column-move';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-menu-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-menu-arrow-icon]',\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuArrowIconComponent extends PureComponent {\n\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-arrow-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'div[gui-unique-value-list][fieldId]',\n\ttemplateUrl: './unique-value-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'../style/unique-value-list.ngx.scss'\n\t]\n})\nexport class UniqueValueListComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandInvoker: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandInvoker.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandInvoker.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-unique-value-list';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './trigger/structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit-boolean][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditBooleanComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit-boolean';\n\t}\n\n}\n","import { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\nimport { StructureBannerPanelConfig } from './structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\nexport abstract class StructureBannerPanel extends SmartComponent implements OnInit {\n\n\tbannerPanel: string | (() => string);\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.onBannerPanelConfig(),\n\t\t\t(config: StructureBannerPanelConfig) => {\n\n\t\t\t\tthis.bannerPanel = config.template;\n\n\t\t\t\tif (typeof this.bannerPanel === 'function') {\n\t\t\t\t\tthis.bannerPanel = this.bannerPanel();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tabstract onBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig>\n\n\tabstract getSelectorName(): string\n\n\tabstract getPanelTitle(): string\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-structure-title-panel]',\n\ttemplateUrl: './structure.title-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureTitlePanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-title-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Title panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-structure-footer-panel]',\n\ttemplateUrl: './structure.footer-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureFooterPanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-footer-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Footer panel';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'div[gui-select-all]',\n\ttemplateUrl: './select-all.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SelectAllComponent extends SmartComponent implements OnInit {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.formationWarehouse.onMode(this.structureId),\n\t\t\t(mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-select-all';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionArchive extends AggregateArchive<number> {\n\n\tstatic readonly DEFAULT_POSITION = 0;\n\n\tconstructor() {\n\t\tsuper(VerticalFormationScrollBarPositionArchive.DEFAULT_POSITION);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionArchive } from './vertical-formation.scroll-bar-position.archive';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { VerticalFormationRepository } from '../api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionArchive } from './scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\nimport { VerticalFormationWarehouse } from '../api/vertical-formation.warehouse';\n\n\n@Injectable()\nexport class VerticalFormationDomainWarehouse extends VerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t\tsuper();\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { VerticalFormationWarehouse } from './vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionArchive } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { VerticalFormationDomainWarehouse } from '../domain-read/vertical-formation.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\t{\n\t\t\tprovide: VerticalFormationWarehouse,\n\t\t\tuseClass: VerticalFormationDomainWarehouse\n\t\t},\n\t\tVerticalFormationScrollBarPositionArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t\tsuper();\n\t\tif (verticalFormationApiModule === null) {\n\t\t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t\t}\n\t}\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tconst staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => {\n\t\t\t\treturn columnWidth.isTypeAuto() ||\n\t\t\t\t\tcolumnWidth.isTypePercentage() ||\n\t\t\t\t\t(columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH);\n\t\t\t});\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, payload, 'CompositionContainerWidthSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tconst newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (const column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width;\n\t\tconst autoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tconst column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (const column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, activeColumns, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t// this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (const param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../api/composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(source: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createColumns(source);\n\t\t} else {\n\t\t\treturn this.createColumn(source);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\tdataType = field.getDataType(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined;\n\n\t\tlet view: ViewEntity,\n\t\t\tenabled: boolean;\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tconst columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tconst columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract findById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../../api/composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n\tpublish(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../../api/composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private readonly columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\ttoHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header || '';\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\ttoContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private readonly viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate readonly editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tif (column.getCellView() === CellView.NG_TEMPLATE) {\n\t\t\tcolumnDef.cellTemplate = column.getColumnConfig().templateRef;\n\t\t} else {\n\t\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\t}\n\n\t\tif (typeof column.getHeader() === 'function') {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\t\t}\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tif (activeColumn.getCellView() === CellView.NG_TEMPLATE) {\n\t\t\tcolumnDef.cellTemplate = activeColumn.getColumnConfig().templateRef;\n\t\t} else {\n\t\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\t}\n\n\t\tif (typeof activeColumn.getHeader() === 'function') {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\t\t}\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.toHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.toHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.toContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionReadModelRootId } from '../../../api/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, HermesObservable, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new HermesReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../../api/composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { ColumnId } from '../../api/column/column.id';\n\nexport class ColumnHighlightManager {\n\n\tprivate enabled = true;\n\n\tprivate highlightedColumns: Set<string> = new Set(); // should be set of ColumnId\n\n\tisHighlighted(columnId: ColumnId): boolean {\n\t\treturn this.highlightedColumns.has(columnId.toString());\n\t}\n\n\ttoggle(columnId: ColumnId): void {\n\t\tif (this.highlightedColumns.has(columnId.toString())) {\n\t\t\tthis.highlightedColumns.delete(columnId.toString())\n\t\t} else {\n\t\t\tthis.highlightedColumns.add(columnId.toString())\n\t\t}\n\t}\n\n\tremove(columnId: ColumnId): void {\n\t\tthis.highlightedColumns.delete(columnId.toString());\n\t}\n}\n","import { AggregateArchive } from '@generic-ui/hermes';\nimport { ColumnHighlightManager } from './column-highlight.manager';\nimport { Injectable } from '@angular/core';\nimport { Override } from '../../../../common/cdk/decorators';\nimport { CompositionId } from '../../api/composition.id';\nimport { ColumnId } from '../../api/column/column.id';\n\n@Injectable()\nexport class ColumnHighlightArchive extends AggregateArchive<ColumnHighlightManager> {\n\n\tconstructor() {\n\t\tsuper(new ColumnHighlightManager());\n\t}\n\n\ttoggle(key: CompositionId, value: ColumnId) {\n\t\tthis.get(key)\n\t\t\t.ifPresent((manager) => {\n\t\t\t\tmanager.toggle(value);\n\t\t\t\tthis.next(key, manager);\n\t\t\t});\n\t}\n\n\t@Override\n\tprotected equals(a: ColumnHighlightManager, b: ColumnHighlightManager): boolean {\n\t\treturn false;\n\t}\n\n\t@Override\n\tprotected createDefaultValue(defaultValue: ColumnHighlightManager): ColumnHighlightManager {\n\t\treturn new ColumnHighlightManager();\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from './composition.key';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\nimport { ColumnHighlightArchive } from './highlight/column-highlight.archive';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory,\n\t\tColumnHighlightArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupArchive extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], false);\n\n\tconstructor() {\n\t\tsuper(CompositionGroupArchive.default);\n\t}\n\n}\n","import { CompositionDispatcher } from './composition.dispatcher';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionId } from '../api/composition.id';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../api/column/column-definition-id';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionCommandInvoker } from '../api/composition.command-invoker';\nimport { Injectable } from '@angular/core';\nimport { ColumnHighlightArchive } from './highlight/column-highlight.archive';\n\n@Injectable()\nexport class CompositionDomainCommandInvoker extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupArchive,\n\t\t\t\tprivate readonly columnHighlightArchive: ColumnHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tcreate(compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\thighlightColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.columnHighlightArchive.toggle(compositionId, new ColumnId(columnDefinitionId.getId()))\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionEventRepository } from '../api/composition.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainEventRepository extends CompositionEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CompositionReadModelRootRepository } from './composition.read-model-root-repository';\nimport { CompositionGroupArchive } from './group/composition-group.archive';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { GroupCollection } from '../api/group/group.collection';\nimport { CompositionWarehouse } from '../api/composition.warehouse';\nimport { Injectable } from '@angular/core';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { ColumnId } from '../api/column/column.id';\nimport { ColumnHighlightArchive } from '../domain/highlight/column-highlight.archive';\nimport { ColumnHighlightManager } from '../domain/highlight/column-highlight.manager';\n\n@Injectable()\nexport class CompositionDomainWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupArchive: CompositionGroupArchive,\n\t\t\t\tprivate readonly columnHighlightArchive: ColumnHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tonWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   hermesMap((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId): HermesObservable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId): HermesObservable<GroupCollection> {\n\t\treturn this.compositionGroupArchive.on(compositionId);\n\t}\n\n\tonHighlightedColumn(columnId: ColumnId, compositionId: CompositionId): HermesObservable<boolean> {\n\t\treturn this.columnHighlightArchive\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((manager: ColumnHighlightManager) => manager.isHighlighted(columnId))\n\t\t\t\t   );\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from '../domain/composition.key';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport { inMemoryCompositionProviders, inMemoryCompositionReadModelProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionDomainCommandInvoker } from '../domain/compositon.domain-command-invoker';\nimport { CompositionDomainEventRepository } from '../domain/composition.domain-event-repository';\nimport { CompositionDomainWarehouse } from '../domain-read/composition.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\t...inMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupArchive,\n\n\t\t{\n\t\t\tprovide: CompositionCommandInvoker,\n\t\t\tuseClass: CompositionDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionWarehouse,\n\t\t\tuseClass: CompositionDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionEventRepository,\n\t\t\tuseClass: CompositionDomainEventRepository\n\t\t}\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ChangeDetectorRef, ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { fromRxJsObservable, hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: NgChanges<InputEditTemplateComponent<any>>) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\thermesFromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tfromRxJsObservable(\n\t\t\tthis.filterForm\n\t\t\t\t.controls[this.filterFieldName]\n\t\t\t\t.valueChanges\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-string-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-number-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-boolean-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\nimport { StreamCloser } from '../../../../../common/cdk/reactive/stream-closer';\nimport { hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-date-edit';\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column[header]',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { CellValue } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div class=\"gui-h-full gui-flex gui-items-center\"\n\t\t\t [innerHTML]=\"safeHTML\">\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent extends PureComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private readonly sanitizer: DomSanitizer,\n\t\t\t\tprivate readonly elRef: ElementRef) {\n\t\tsuper(elRef);\n\n\t\tthis.addClassToHost('gui-h-full');\n\t\tthis.addClassToHost('gui-w-full');\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-function-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<BarViewComponent>) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-bar-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-percentage-view';\n\t}\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\t\tsuper(elementRef);\n\n\t\tif (isBold !== null) {\n\t\t\tthis.addClassToHost('gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.addClassToHost('gui-italic');\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-text-view';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column/column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\t...components\n\t],\n\texports: [\n\t\t...exportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t\tsuper();\n\t\tif (compositionApiModule === null) {\n\t\t\tthrow new Error('CompositionApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-groups][groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent extends PureComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-groups';\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[searching]'\n})\nexport class StructureSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureHeaderTopEnabledArchive } from '../../../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../../../header/structure-header-bottom-enabled.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]'\n})\nexport class StructureColumnHeaderGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\tconstructor(private readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnHeaderGate>) {\n\n\t\tif (this.isDefined('columnHeaderTop', changes)) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (this.isDefined('columnHeaderBottom', changes)) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { PagingDisplayModeArchive } from '../../../../paging/feature/mode/paging-display-mode.archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\n\n\n@Directive({\n\tselector: 'gui-structure[paging]'\n})\nexport class StructurePagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(structureId, compositionId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n\t@Override\n\tngOnChanges(changes: NgChanges<StructurePagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.pagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.structureId);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { RowSelection } from '../../core/api/row-selection';\nimport { SelectedRow } from '../../core/api/formation/selected-row';\nimport { FormationEventRepository } from '../../core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../core/api/formation/type/row-selection-type.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\nexport abstract class SelectionGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly formationEventService: FormationEventRepository,\n\t\t\t\t\t\t  protected readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\t\t\t  protected readonly rowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SelectionGate>) {\n\n\t\tif (this.isDefined('rowSelection', changes)) {\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getSource()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectionGate } from '../../../../source/feature/gate/selection.gate';\nimport { FormationEventRepository } from '../../../../source/core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Directive({\n\tselector: 'gui-structure[rowSelection], gui-structure[selectionGate]'\n})\nexport class StructureSelectionGate extends SelectionGate {\n\n\t@Input()\n\tselectionGate: void;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper(structureId, formationEventService, formationCommandDispatcher, rowSelectionTypeArchive);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiLocalization } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[localization]'\n})\nexport class StructureL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\tconstructor(private readonly translationService: TranslationFacade) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { StructureTitlePanelConfigArchive } from '../../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureBannerPanelConfig } from '../../panel/banner-panels/structure-banner-panel.config';\n\n@Directive({\n\tselector: 'gui-structure[titlePanel][footerPanel]'\n})\nexport class StructurePanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttitlePanel: StructureBannerPanelConfig;\n\n\t@Input()\n\tfooterPanel: StructureBannerPanelConfig;\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructurePanelGate>) {\n\n\t\tif (this.isDefined('titlePanel', changes)) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (this.isDefined('footerPanel', changes)) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { RowDetailConfig } from '../../../row-detail/row-detail.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureRowDetailConfigArchive } from '../../../row-detail/structure.row-detail.config-archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowDetail]'\n})\nexport class StructureRowDetailGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\tconstructor(private readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowDetailGate>) {\n\n\t\tif (this.isDefined('rowDetail', changes)) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../../../header/menu/config/structure.column-menu-config.archive';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnMenu]'\n})\nexport class StructureColumnMenuGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\tconstructor(private readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnMenuGate>) {\n\n\t\tif (this.isDefined('columnMenu', changes)) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SummariesConfig } from '../../core/api/summaries-config';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { SummariesCommandInvoker } from '../../core/api/summaries.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Directive({\n\tselector: 'gui-structure[summaries]'\n})\nexport class StructureSummariesGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSummariesGate>) {\n\n\t\tif (this.isDefined('summaries', changes)) {\n\t\t\tthis.summariesCommandInvoker.setConfig(this.summaries, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { InfoPanelConfig } from '../../../../core/api/panel/info/info-panel.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureInfoPanelConfigService } from '../../../../core/api/panel/info/structure.info-panel-config.service';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[infoPanel]'\n})\nexport class StructureInfoPanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\tconstructor(protected readonly structureInfoPanelConfigService: StructureInfoPanelConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureInfoPanelGate>) {\n\n\t\tif (this.isDefined('infoPanel', changes)) {\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowClass } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowClass } from '../../../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowClassArchive } from '../../../../../../schema/core/api/styling/schema.row-class.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowClass]'\n})\nexport class StructureRowClassGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\tconstructor(private readonly schemaRowClassArchive: SchemaRowClassArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowClassGate>) {\n\n\t\tif (this.isDefined('rowClass', changes)) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaCommandInvoker } from '../../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../../../schema/core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowColoring]'\n})\nexport class StructureRowColoringGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowColoringGate>) {\n\n\t\tif (this.isDefined('rowColoring', changes)) {\n\t\t\tthis.schemaCommandInvoker.setRowColoring(this.rowColoring, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onRowColoring(this.schemaId),\n\t\t\tthis.rowColoringChanged\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowStyle } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowStyle } from '../../../../../../schema/core/api/styling/schema.row-style';\nimport { SchemaRowStyleArchive } from '../../../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowStyle]'\n})\nexport class StructureRowStyleGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\tconstructor(private readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowStyleGate>) {\n\n\t\tif (this.isDefined('rowStyle', changes)) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\t}\n\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { SchemaCommandInvoker } from '../../../core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { Directive, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n\n@Directive({\n\tselector: 'gui-structure[verticalGrid][horizontalGrid]'\n})\nexport class ThemeGridGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ThemeGridGate>): void {\n\n\t\tif (this.isDefined('verticalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setVerticalGrid(this.verticalGrid, this.schemaId);\n\t\t}\n\n\t\tif (this.isDefined('horizontalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setHorizontalGrid(this.horizontalGrid, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onHorizontalGridChanged(this.schemaId),\n\t\t\tthis.horizontalGridChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onVerticalGridChanged(this.schemaId),\n\t\t\tthis.verticalGridChanged\n\t\t);\n\t}\n}\n","import { Directive, Input, OnChanges, OnInit } from '@angular/core';\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Directive({\n\tselector: 'gui-structure[loading]'\n})\nexport class SourceLoadingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tloading: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandInvoker: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SourceLoadingGate>): void {\n\n\n\t\tif (this.isDefined('loading', changes)) {\n\t\t\tthis.sourceCommandInvoker.setLoading(this.loading, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t}\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { Directive, Input, OnChanges } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[virtualScroll]'\n})\nexport class VerticalFormationGate extends Gate implements OnChanges {\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<VerticalFormationGate>): void {\n\n\t\tif (this.isDefined('virtualScroll', changes)) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandInvoker.enableVirtualScroll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.structureCommandInvoker.disableVirtualScroll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SortingConfig } from '../../core/api/sorting-config';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { SortingCommandInvoker } from '../../core/api/sorting.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[sorting]'\n})\nexport class StructureSortingGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandInvoker: SortingCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSortingGate>) {\n\n\t\tif (this.isDefined('sorting', changes)) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandInvoker.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { FilterConfig } from '../../core/api/filter-config';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[filtering]'\n})\nexport class StructureFilterGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureFilterGate>) {\n\n\t\tif (this.isDefined('filtering', changes)) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setFilterConfig(filtering, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { QuickFiltersConfig } from '../../core/api/quick-filters.config';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[quickFilters]'\n})\nexport class StructureQuickFiltersGate extends Gate implements OnChanges {\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureQuickFiltersGate>) {\n\n\t\tif (this.isDefined('quickFilters', changes)) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setQuickFiltersConfig(quickFilters, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { StructureSearchingGate } from './searching/structure-searching.gate';\nimport { StructureColumnHeaderGate } from './column/header/structure-column-header.gate';\nimport { StructurePagingGate } from './paging/structure-paging.gate';\nimport { StructureSelectionGate } from './source/structure-selection.gate';\nimport { StructureL10nGate } from './l10n/structure-l10n.gate';\nimport { StructurePanelGate } from './panel/structure-panel.gate';\nimport { StructureRowDetailGate } from './row/detail/structure-row-detail.gate';\nimport { StructureColumnMenuGate } from './column/menu/structure-column-menu.gate';\nimport { StructureSummariesGate } from '../../../summaries/feature/gate/structure-summaries.gate';\nimport { StructureInfoPanelGate } from './panel/info/structure-info-panel.gate';\nimport { StructureRowClassGate } from './row/class/structure-row-class.gate';\nimport { StructureRowColoringGate } from './row/coloring/structure-row-coloring.gate';\nimport { StructureRowStyleGate } from './row/style/structure-row-style.gate';\nimport { ThemeGridGate } from '../../../../schema/feature/gate/grid/theme-grid.gate';\nimport { SourceLoadingGate } from './source/source-loading.gate';\nimport { VerticalFormationGate } from '../../../vertical-formation/feature/gate/vertical-formation.gate';\nimport { StructureSortingGate } from '../../../sorting/feature/gate/structure-sorting.gate';\nimport { StructureFilterGate } from '../../../filter/feature/gate/structure-filter.gate';\nimport { StructureQuickFiltersGate } from '../../../filter/feature/gate/structure-quick-filters.gate';\n\nexport const structureGates = [\n\tStructureColumnHeaderGate,\n\tStructurePagingGate,\n\tStructureSearchingGate,\n\t// StructureSourceGate,\n\tStructureSelectionGate,\n\tStructureL10nGate,\n\tStructurePanelGate,\n\tStructureRowDetailGate,\n\tStructureColumnMenuGate,\n\tStructureSummariesGate,\n\tStructureInfoPanelGate,\n\tStructureRowClassGate,\n\tStructureRowStyleGate,\n\tStructureRowColoringGate,\n\tThemeGridGate,\n\tStructureSortingGate,\n\tSourceLoadingGate,\n\tStructureFilterGate,\n\tStructureQuickFiltersGate,\n\tVerticalFormationGate\n];\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModifier } from './css-class.modifier';\n\n@NgModule({\n\tproviders: [\n\t\tCssClassModifier\n\t]\n})\nexport class CssClassModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModule } from './css-class/css-class.module';\n\n\n@NgModule({\n\timports: [\n\t\tCssClassModule\n\t]\n})\nexport class StructureSharedModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDetector } from './resize.detector';\n\n@NgModule({\n\tproviders: [\n\t\tResizeDetector\n\t]\n})\nexport class ResizeDetectorModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/config/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/banner-panels/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../source/feature/empty/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\nimport { structureGates } from '../../feature/gate/structure.gates';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { SourceFeatureModule } from '../../../source/feature/source.feature-module';\nimport { StructureSharedModule } from '../../../common/structure-shared.module';\nimport { SanitizeModule } from '../../../../common/cdk/sanitize/sanitize.module';\nimport { ResizeDetectorModule } from '../../../../common/cdk/resize-detector/resize-detector.module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...SummariesDomainModule.commandHandlers(),\n\t\t\t...VerticalFormationDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers(),\n\t\t\t...SummariesDomainModule.domainEventHandlers(),\n\t\t\t...FieldDomainModule.domainEventHandlers(),\n\t\t\t...VerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\tResizeDetectorModule,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tFilterMenuFeatureModule,\n\tSourceFeatureModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureSharedModule,\n\n\tStructureInfoPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule,\n\tSanitizeModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\n\t...structureGates\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule,\n\t...structureGates\n];\n\n@NgModule({\n\timports: [\n\t\timports\n\t],\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tprivate static readonly HERMES_API = 'hermesApi';\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow[StructureModule.HERMES_API].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../../feature/gui.list.component';\n\nimport { ListViewFeatureModule } from '../../../../structure/list/feature/list-view.feature-module';\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\nimport { GuiListItemComponent } from '../../feature/item/gui.list-item.component';\nimport { GuiListCardComponent } from '../../feature/card/gui.list-card.component';\n\nconst imports = [\n\tCommonModule,\n\tListViewFeatureModule,\n\tStructureModule.withConfig({\n\t\tcssClassName: 'list',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n"]}