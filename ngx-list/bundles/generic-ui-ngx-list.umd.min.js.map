{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/gui/list/feature/paging/gui-list.paging.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/card/gui.list-card.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode.ts","ng://@generic-ui/ngx-list/l10n/core/domain/lang/en.ts","ng://@generic-ui/ngx-list/l10n/core/api/default-translation.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.public-api.ts","ng://@generic-ui/ngx-list/gui/list/feature/mode/gui-list.mode.converter.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.id.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-definition.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.global-id.ts","ng://@generic-ui/ngx-list/composition/core/api/column/column.id.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.collection.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/group/composition.group.repository.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.command-invoker.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.global-id.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.command-invoker.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.domain-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/reactive/reactive.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/selected-row.ts","ng://@generic-ui/ngx-list/structure/source/core/api/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/core/api/schema-theme.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition-id.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.id.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-list/structure/search/core/api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.id.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/schema.global-id.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/schema/core/api/schema-row-coloring.ts","ng://@generic-ui/ngx-list/schema/core/api/row-coloring.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.converter.ts","ng://@generic-ui/ngx-list/structure/source/core/api/read/source.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.converter.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/local-providers.ts","ng://@generic-ui/ngx-list/common/cdk/dom/core/modifier.ts","ng://@generic-ui/ngx-list/common/cdk/dom/class/class-modifier.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/common/cdk/reactive/stream-closer.ts","ng://@generic-ui/ngx-list/common/cdk/component/gui-component.ts","ng://@generic-ui/ngx-list/common/cdk/component/smart-component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/structure.gateway.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/editem-item.values.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/source-event.service.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-list/structure/shared/css-class/css-class.ts","ng://@generic-ui/ngx-list/structure/shared/css-class/css-class.modifier.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-list/common/cdk/component/pure-component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/api/structre.api.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.domain-module.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.api-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.api-module.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.service.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.pipe.ts","ng://@generic-ui/ngx-list/l10n/core/domain/dictionary.ts","ng://@generic-ui/ngx-list/l10n/core/domain/translation.service-impl.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.feature-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.command-invoker.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.warehouse.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.event-repository.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.api-module.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-type.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager-factory.ts","ng://@generic-ui/ngx-list/structure/search/core/api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/api/enabled/searching.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.domain-module.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.command-invoker.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/component/static-component.ts","ng://@generic-ui/ngx-list/common/cdk/component/icon-component.ts","ng://@generic-ui/ngx-list/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.read-model.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.ui-converter.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/base-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.type.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field-id.generator.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field.domain-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.command-invoker.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.api-module.ts","ng://@generic-ui/ngx-list/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/config/filter-container-token.ts","ng://@generic-ui/ngx-list/structure/source/core/api/row-selection.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-id.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/api/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/api/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-module.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.api-module.ts","ng://@generic-ui/ngx-list/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-class.archive.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-style.archive.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/horizontal-grid/schema.horizontal-grid-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/row-coloring/schema.row-coloring-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/vertical-grid/schema.vertical-grid-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.api.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-module.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.api-module.ts","ng://@generic-ui/ngx-list/schema/feature/schema.feature-module.ts","ng://@generic-ui/ngx-list/common/cdk/dom/style/style-name.ts","ng://@generic-ui/ngx-list/common/cdk/dom/style/style-modifier.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.providers.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/read/list-view.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/core/api/read/list-view.global-id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.command-invoker.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-view-source.component.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view.mode.repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view.selector.repository.ts","ng://@generic-ui/ngx-list/structure/list/feature/layout/list-view-layout.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-item/list-view-item.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/empty/empty-source.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/empty/empty-source.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/list-view.container-card.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/card-item/list-view.card-item.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container/select/list-view.container-mode-select.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/selector-visibility.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.store.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.event-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.warehouse.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-module.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view-selector-toggled.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/component/gate.ts","ng://@generic-ui/ngx-list/structure/paging/feature/gate/paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/paging/list-view-paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/mode/list-view-mode.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/template/list-view-template.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/field/list-view-field.gate.ts","ng://@generic-ui/ngx-list/structure/search/feature/gate/searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/searching/list-view-searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/l10n/list-view-l10n.gate.ts","ng://@generic-ui/ngx-list/structure/source/feature/gate/source.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/source/list-view-source.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view.gates.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.component.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.feature-module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/icon/filter-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/quick-filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.settings.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type-map.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.domain-module.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.api-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.feature-module.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/schema-manager.module.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter.service.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/source-counter.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-align.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-value.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure-tokens.ts","ng://@generic-ui/ngx-list/structure/grid/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-range.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/structure.sorter.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorter.id.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorter.collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-translations.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/structure-banner-panel.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/select-all/select-all.component.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.providers.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.domain-module.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.api-module.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/summaries.feature-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.api-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/feature/vertical-formation.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.api.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/empty-group.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/composition.group.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.events.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/composition.groups-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/template/template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-context.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-module.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/feature/column/column-query.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/composition/feature/composition.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/group/structure-header-groups.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/searching/structure-searching.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/header/structure-column-header.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/paging/structure-paging.gate.ts","ng://@generic-ui/ngx-list/structure/source/feature/gate/selection.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/source/structure-selection.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/l10n/structure-l10n.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/panel/structure-panel.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/detail/structure-row-detail.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/menu/structure-column-menu.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/summaries/structure-summaries.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/panel/info/structure-info-panel.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/class/structure-row-class.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/coloring/structure-row-coloring.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/style/structure-row-style.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/structure.gates.ts","ng://@generic-ui/ngx-list/structure/shared/css-class/css-class.module.ts","ng://@generic-ui/ngx-list/structure/shared/structure-shared.module.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","BASIC","ADVANCED","GuiListPagingConverter","convert","guiListPaging","pagingConfig","undefined","enabled","page","pageSize","pageSizes","pagerTop","pagerBottom","displayMode","PagingDisplayMode","GuiListCardComponent","LIST","CARD","enTranslation","sourceEmpty","pagingItemsPerPage","pagingOf","pagingNextPage","pagingPrevPage","pagingNoItems","infoPanelShowing","infoPanelItems","infoPanelOutOf","infoPanelThemeMangerTooltipText","infoPanelColumnManagerTooltipText","infoPanelInfoTooltipText","themeManagerModalTitle","themeManagerModalTheme","themeManagerModalRowColoring","themeManagerModalVerticalGrid","themeManagerModalHorizontalGrid","columnManagerModalTitle","headerMenuMainTab","headerMenuMainTabColumnSort","headerMenuMainTabHideColumn","headerMenuMainTabMoveLeft","headerMenuMainTabMoveRight","headerMenuMainTabColumnSortAscending","headerMenuMainTabColumnSortDescending","headerMenuMainTabColumnSortNone","headerMenuFilterTab","headerMenuColumnsTab","summariesCount","summariesDist","summariesSum","summariesAvg","summariesMin","summariesMax","summariesMed","summariesTruthy","summariesFalsy","summariesDistinctValuesTooltip","summariesAverageTooltip","summariesMinTooltip","summariesMaxTooltip","summariesMedTooltip","summariesCountTooltip","defaultTranslation","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","GuiListDefaultTranslation","GuiListModeConverter","mode","GuiListMode","ListViewMode","ListViewCardTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","ListViewTemplate","GuiListGateway","pageChanged","EventEmitter","pageSizeChanged","searchPhraseChanged","guiListPagingConverter","guiListModeConverter","ngOnChanges","changes","templateRef","listItem","containerTemplate","cardTemplateRef","listCard","listCardTemplate","cardTemplate","paging","currentValue","view","active","listViewMode","listViewModeSelector","fields","listFields","map","f","field","type","searching","searchConfig","Input","Output","guiListProviders","GuiListComponent","platformId","_this","_super","tslib_1.__extends","onPageChange","emit","onPageSizeChange","onSearchPhraseChange","phrase","providers","host","[class.gui-list]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","StructureIdGenerator","increment","generateId","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","PagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","CompositionReadModelRootId","CompositionId","CompositionCommand","Command","CreateCompositionCommand","compositionId","SetColumnsCommand","columns","getParams","SetCompositionWidthCommand","structureId","width","getWidth","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","SetGroupsCommand","configs","getConfigs","CompositionDispatcher","commandDispatcher","createComposition","dispatch","setColumns","params","setGroups","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","Injectable","CommandDispatcher","compositionGlobalId","ColumnId","EntityId","GroupCollection","groups","showGroups","getGroups","isVisible","CompositionGroupRepository","default","AggregateArchive","CompositionCommandInvoker","compositionDispatcher","compositionGroupRepository","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureCommand","SetPagingCommand","config","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","setPaging","changePageSize","nextPage","prevPage","structureGlobalId","PagingCommandInvoker","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","Override","container","getPrototypeOf","Error","name","StructureDomainEvent","DomainEvent","PageChangedEvent","aggregateId","StructureAggregateEvent","AggregateEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","sourceSize","logger","events","fromConfig","defaultPagingDefinition","getPage","getPageSizes","isPagerTop","isPagerBottom","isDisabled","getSourceSize","change","warn","setSourceSize","size","isNextPageDisabled","isPrevPageDisabled","find","ps","setPage","setPageSize","Math","ceil","calculateStart","firstItem","calculateEnd","lastItem","sample","source","start","slice","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","LocalPagingWarehouse","Observable","ToggleSelectedRowCommand","selectedRow","getSelectedRow","getType","FormationDispatcher","toggleSelectedRow","SetEnabledSelectionCommand","SetSelectionModeCommand","getMode","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","selectAll","unselectAll","NONE","ADD","RANGE","LocalFormationCommandDispatcher","setDefault","RowSelectedRepository","RowSelectionModeRepository","SelectedRow","data","index","itemId","getData","getIndex","getItemId","StructureSourceOriginRepository","origin","Map","origin$","ReplaySubject","setOrigin","set","onOrigin","asObservable","get","distinctUntilChanged","StructurePreparedItemsRepository","setItems","getPreparedItems","onPreparedItems","SourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","getEntities","getStructure","onEntities","ents1","ents2","flag","forEach","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","getPreparedEntities","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","getSelectedRows","items","selectedItemIds","getSelectedItemIds","selectedItems","item","some","onRowSelectedReadModel","getAll","onSelectedRows","rm","onMode","LocalFormationWarehouse","rowSelectedArchive","SetConfigFilterCommand","filterConfig","getConfig","RemoveAllFiltersCommand","AddFilterCommand","fieldId","filterTypeId","getFieldId","getFilterTypeId","getValue","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","add","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","SourceSetLoadingCommand","SetOriginCommand","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","theme","getTheme","SetScrollBarPositionCommand","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","scrollToTop","scrollToBottom","Number","MAX_SAFE_INTEGER","scrollToIndex","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","LocalStructureCommandDispatcher","StructureWarehouse","LocalStructureWarehouse","StructureEditSourceItemParams","columnFieldId","getColumnFieldId","FieldReadModelRepository","FieldWarehouse","fieldReadModelRepository","onFields","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","payload","byIndex","DeleteCommandPayloadType","byManyIndex","indexes","byItemId","byManyItemId","itemIds","getPayload","SourceCommandInvoker","fieldWarehouse","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","deleteRow","row","deleteItemById","deleteItemByIndex","deleteRows","rows","deleteManyItemsByItemIds","deleteManyItemsByIndex","LocalSourceCommandDispatcher","LocalSourceWarehouse","ColumnDefinitionId","ReadModelEntityId","LocalCompositionCommandDispatcher","columnDefId","CompositionReadModelRootRepository","ReadModelRootRepository","CompositionWarehouse","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","onGroups","FieldId","LocalCompositionWarehouse","SetConfigSearchingCommand","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","search","LocalStructureSearchCommandDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","SchemaCssClassesRepository","theme$","setCssClass","schemaId","SchemaHorizontalGridRepository","SchemaRowColoringRepository","SchemaVerticalGridRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","onSingleTheme","onCssClasses","LocalSchemaWarehouse","schemaReadModelRootId","SchemaCommand","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setTheme","setRowColoring","rowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","EVEN","ODD","SchemaCommandInvoker","schemaDispatcher","structureCommandService","fabricModalThemeService","changeTheme","toFabricTheme","schemaRowColoring","toSchemaRowColoring","RowColoring","SchemaRowColoring","schemaTheme","SchemaTheme","Theme","FabricModalThemeService","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","Paging","isNextDisabled","isPrevDisabled","end","getStart","getEnd","calculateVisiblePages","numberOfVisiblePages","compare","JSON","stringify","ReadModelObject","Boolean","PagingConverter","aggregate","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","version","RandomStringGenerator","generate","getUiId","replace","getVersion","isSelected","isEven","isOdd","entity","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","SchemaDomainEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","PagingSetEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","DomainEventBus","VerticalFormationScrollBarPositionRepository","StructureVerticalFormationWarehouse","verticalFormationRepository","positionRepository","onScrollBarPosition","LocalStructureVerticalFormationWarehouse","localProviders","provide","useClass","provideComponentServices","Modifier","hostElement","getElement","htmlElement","createModifier","getHost","ClassModifier","_a","class_1","classes","_i","addClassToDomElement","remove","removeClassFromDomElement","clear","removeAttribute","CLASS","classList","SchemaCssClassManager","schemaReadModelRepository","cssClass","classModifier","init","elementRef","cssHostRef","diff","updateState","renderCssClasses","css","diff_1","keys","toggleCssClass","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","toggle","cssClassName","removeClass","className","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","nativeElement","StructureCellEditArchive","Archive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","InjectionToken","StreamCloser","GuiComponent","innerElementRef","innerClassModifier","addHostClass","addClassToHost","removeClassFromHost","hasChanged","prop","getSelectorName","SmartComponent","detector","viewInDom","streamCloser","ngAfterViewInit","reRender","isViewInDom","detectChanges","subscribeAndRender","obs$","callback","subscribeArguments","subscribeWithoutRender","ENTER","SUBMIT","CANCEL","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldsInitedEvent","getFields","ColumnFieldId","ColumnParams","column","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","compositionCommandInvoker","handle","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","columnConfigs","groupConfigs","matcher","summaries","sorting","columnField","getAccessorMethod","getDataType","getSearchAccessorMethod","StructureGateway","changeDetectorRef","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","searchCommandDispatcher","fieldCommandDispatcher","sourceCommandService","sourceEventService","schemaCommandDispatcher","compositionCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","schemaRowClassArchive","schemaRowStyleArchive","formationCommandDispatcher","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","translationService","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","themeChanged","horizontalGridChanged","verticalGridChanged","changeAfterInit","structureColumnInputHandler","setDefaultTranslation","editMode","cellEditing","autoResizeWidth","maxHeight","virtualScroll","setSortingConfig","filtering","quickFilters","ngOnInit","onColumnsChanged","onContainerWidthChanged","containerWidth","onSourceEdited","values","state","StructureCellEditState","connectSchemaEvents","componentInitialized","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","isInitialized","isNotInitialized","NextPageEvent","PrevPageEvent","PagingEventRepository","eventBus","pagingReadModelService","switchMap","onEvent","EventRepository","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionDomainEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionEventRepository","SelectedRowChangedEvent","selectedRows","allSelected","allUnselected","isAllSelected","isAllUnselected","FormationEventRepository","s$","itemsMap","j","onItemSelected","StructureColumnMenuConfig","sort","mainMenu","filterMenu","columnsMenu","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","setMainMenu","setFilterMenu","setColumnsMenu","StructureColumnMenuConfigArchive","nextConfig","menuConfig","PagingDisplayModeArchive","RowSelectEnabledRepository","SearchEventRepository","onSearchPhrase","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValue","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","StructureRowDetailService","injector","drawerService","ref","turnOn","turnOff","close","Injector","parent","useValue","open","FabricDrawerService","TOP","BOTTOM","CssClassModifier","select","CssClass","unselect","clazzName","PagingComponent","elRef","cssClassModifier","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","alternativeDisplay","isPagingVisible","localStreamCloser","PagingPosition","a","calculatePagingVisibility","ElementRef","ChangeDetectorRef","PureComponent","subClassConstructor","subClassNgOnInit","hasConstructorOnlyElementRefInjected","throwError","isElementRef","reason","PagingSelectComponent","selectPageSizes","getSelectPageSizes","selectPageSize","getSelectPageSize","selectOption","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","StructureAggregateRepository","AggregateRepository","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","structureKey","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingApiModule","ApiModule","PagingNavigatorComponent","PagingStatsComponent","firstItemIndex","lastItemIndex","TranslationApiModule","TranslationPipe","actualTranslationValue","subscription","transform","onTranslation","translation","markForCheck","Pipe","pure","TranslationService","Dictionary","resolver","changeTranslation","_b","_c","getTranslation","from","reduce","obj","setResolver","TranslationServiceImpl","dictionary","dictionary$","changeTranslationAndPropagate","setResolverAndPropagate","TranslationFeatureModule","apiModule","forComponent","entryComponents","Optional","FeatureModule","PagingFeatureModule","pagingApiModule","FabricModule","StructureTitlePanelConfigArchive","titlePanelConfig","StructureFooterPanelConfigArchive","footerPanelConfig","StructureInfoPanelConfigConverter","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","infoPanelConfig","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","sortingApiModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","preparedItems","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","DataType","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","SearchManagerFactory","SearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","SearchPhraseSetEventHandler","structureSearchPhraseRepository","forEvent","ofMessageType","SearchingRepository","enabled$","setEnabled","onSearchingEnabled","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","domainEventHandlers","registerDomainEventHandler","SearchCommandInvoker","searchDispatcher","SearchWarehouse","searchPhraseRepository","onSearchEnabled","SearchApiModule","StaticComponent","detach","IconComponent","SearchIconComponent","SearchComponent","formBuilder","structureWarehouse","searchWarehouse","verticalFormationWarehouse","searchingEnabled","controlsConfig","FORM_SEARCH_NAME","searchForm","group","observeChanges","stopObserveChanges","setValue","reset","searchInputSubscription","controls","valueChanges","debounceTime","FormBuilder","ViewChild","SearchFeatureModule","searchApiModule","ReactiveFormsModule","FieldReadModel","dataType","getName","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","addFields","fields_1","fields_1_1","addField","Field","of","dataField","getKey","getAccessor","getDisplayValue","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","getSearchMatcher","val","getSortMatcher","getSearchValue","DataField","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","summariesTypes","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownDataField","SummariesType","one","two","NumberDataField","numOne","numTwo","StringDataField","toLowerCase","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldIdGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","publishFromAggregate","createFields","FieldsInitedEventHandler","fieldUiConverter","FieldDomainModule","FieldCommandInvoker","FieldApiModule","FieldFeatureModule","fieldApiModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","filterContainerToken","ROW","CHECKBOX","SINGLE","MULTIPLE","RowSelection","isModeDefined","isTypeDefined","isEnabledDefined","RowSelectionBuilder","withType","withMode","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","RowSelectionType","SetSourceLoadingEvent","SourceSetLoadingCommandHandler","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","OriginItemEntity","bumpVersion","setPosition","clone","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","isArray","deleteOneOriginItem","isInteger","deleteOriginItemByIndex","findOriginItemIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","calculateAllUnselected","deleteManyOriginItemByIndex","deleteManyOriginItemByItemID","addOriginItem","toggleRow","getFormation","findIndex","FormationManager","RowSelectionMode","setMode","allItemIds","RowSelectToggleType","delete","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","StructureOriginChangedEventHandler","origin_1","StructurePreparedItemsEventHandler","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","isIndeterminate","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","DeleteOriginItemCommandHandler","deleteItem","SourceDomainModule","SourceApiModule","SourceFeatureModule","sourceApiModule","SchemaRowClassArchive","SchemaRowStyleArchive","SchemaAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","createEvent","addEvent","AggregateRoot","SchemaAggregateFactory","AggregateFactory","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","save","schemaAggregate","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaThemeSetEventHandler","themeRepository","SchemaHorizontalGridSetEventHandler","horizontalGridRepository","SchemaRowColoringSetEventHandler","SchemaVerticalGridSetEventHandler","SchemaCssClass","SchemaCssClassesEventHandler","schemaKey","SchemaDomainModule","registerMultiDomainEventHandler","SchemaApiModule","defineAggregate","SchemaFeatureModule","schemaApiModule","StyleModifier","setStyleByName","StyleName","toPx","setHeight","setPaddingTop","styleName","STYLE","removeStyleByName","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","sourceCommandDispatcher","compositionEventRepository","pagingDisplayModeArchive","detectorRef","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","styleModifier","offsetWidth","timer","getStructureId","getElementRef","[class.gui-structure-border]","[id]","useExisting","ListViewTemplateArchive","ListViewCardTemplateArchive","listViewProviders","ListViewId","ListViewReadModelRootId","CreateListViewCommand","listViewId","ListViewCommand","SetListViewModeCommand","ToggleListViewSelectorCommand","iseEnabled","ListViewDispatcher","toggleSelector","listViewGlobalId","ListViewCommandInvoker","listViewDispatcher","listViewReadModelRootId","listViewIdFactory","componentProviders","ListViewComponent","containerTemplateArchive","listCardTemplateArchive","listViewCommandDispatcher","[class.gui-list-view]","[class.gui-generic]","ListViewSourceComponent","ListViewModeRepository","mode$","ListViewSelectorRepository","selectorEnabled","selectorEnabled$","ListViewLayoutComponent","listViewModeRepository","listViewSelectorRepository","searchBarEnabled","listModeEnabled","cardModeEnabled","ListViewItemComponent","context","EmptySourceComponent","EmptySourceFeatureModule","ListViewContainerCardComponent","ListViewCardItemComponent","ListViewContainerModeSelectComponent","options","toGuiSelectOption","listContainerMode","changeContainerMode","selectedMode","toListViewMode","ListViewDomainEvent","ListViewCreatedEvent","ListViewAggregateEvent","ListViewCreatedAggregateEvent","ListViewModeSetEvent","ListViewModeSetAggregateEvent","SelectorVisibility","visible","setVisible","ListViewSelectorToggledEvent","ListViewSelectorToggledAggregateEvent","ListViewAggregate","initSelectorVisibility","toggleModeSelector","selectorVisibility","emitEventAfterSelectorVisibilityChange","ListViewAggregateFactory","CreateListViewCommandHandler","InMemoryListViewStore","InMemoryListViewAggregateStore","ListViewAggregateRepository","InMemoryListViewAggregateRepository","listViewAggregate","ListViewEventRepository","onModeChange","ListViewWarehouse","SetListViewModeCommandHandler","ToggleListViewSelectorCommandHandler","ListViewDomainModule","listViewKey","ListViewModeSetEventHandler","ListViewSelectorToggledEventHandler","ListViewApiModule","Gate","isDefined","propertyName","PagingGate","ListViewPagingGate","Directive","ListViewModeGate","modeSelector","ListViewTemplateGate","ListViewFieldGate","SearchingGate","searchCommandInvoker","ListViewSearchingGate","ListViewL10nGate","localization","translationResolver","SourceGate","sourceCommandInvoker","ListViewSourceGate","listViewGatewayDeclarations","SortingSelectorComponent","sortingOptions","selectedSorting","changeSorting","log","SortingSelectorFeatureModule","FabricSelectModule","FilterIconComponent","FilterEnabledRepository","onFilterEnabled","QuickFilterEnabledRepository","onQuickFilterEnabled","FilterTypeRepository","ActiveFilterRepository","UniqueValuesRepository","FilterWarehouse","structureFilterRepository","structureQuickFilterRepository","filterTypeRepository","uniqueValuesRepository","activeFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","FilterMenuComponent","filterWarehouse","filterCommandDispatcher","compositionWarehouse","activeFilters","filterTypeMap","fieldReadModels","onColumnSelect","selectedColumn","filterTypes","getFilterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","FilterMenuTriggerComponent","filterContainerRef","openDrawer","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","valueChanged","FORM_FILTER_VALUE","filterForm","FieldSelectorComponent","fieldSelected","ToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","FilterToggledEvent","ToggleFilterCommandHandler","externalFieldId","toggleFilter","AddFilterCommandHandler","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","SetConfigFilterCommandHandler","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","Filter","FilterSettings","filteringEnabled","searchEnabled","quickFiltersEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","ContainsFilterType","includes","FilterTypeId","FilterTypeIdGenerator","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","getFilterType","getFieldIdsToFilterTypes","readModels","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","filters","getSettings","arr","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","ConfigQuickFilterSetEventHandler","ConfigFilterSetEventHandler","FilterTypeMap","FilterTypesInitedEvent","getMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEvent","getFilters","ActiveFiltersSetEventHandler","activeFiltersSetEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueValuesReadModel","allDisabled","calculateSelection","getValues","areAllSelected","areAllDisabled","isSelectAllChecked","UniqueValueReadModel","geDisplayValue","displayValue","UniqueFilterCalculatedEventHandler","calculatedEvent","uvRM_1","valuesRM","uv","uniqueValues","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","FilterApiModule","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","ActiveFilterListComponent","ActiveSearchComponent","clearSearch","stopPropagation","ActiveFilterListModule","filterApiModule","FilterMenuFeatureModule","exportDeclarations","ListViewFeatureModule","NumberFormatterPipe","number","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","StructureThemeConverter","convertTheme","StructureDialogColumnManagerService","schemaWarehouse","structureThemeConverter","fabricDialogService","readModelId","parentInjector","FabricDialogService","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","menuColumnManagerService","schemaManagerService","infoModal","infoPanel","totalItemsSize","preparedItemsSize","themeManagerTooltipText","columnManagerTooltipText","infoTooltipText","openInfo","openColumnManager","openSchemaManager","StructureColumnManagerComponent","enabledColumnsCount","accumulator","toggleColumn","getColumnDefinitionId","StructureMenuColumnManagerComponent","StructureColumnManagerIconComponent","StructureColumnManagerModule","StructureInfoIconComponent","cdr","StructureSchemaMangerComponent","schemaCommandService","schemaReadModelService","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","StructureSchemaManagerIconComponent","SchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","ActiveFilterMenuTriggerDirective","el","activeFilterService","SourceCounterFeatureModule","StructureInfoPanelModule","ASC","DESC","RIGHT","CENTER","LEFT","CellTemplateWithContext","viewTemplate","editTemplate","sortStatus","sortable","align","isSortEnabled","isAscSort","SortOrder","isDescSort","isNoSort","isAlignLeft","ColumnAlign","isAlignCenter","isAlignRight","StructureColumnConfigComponent","uniqueValuesReadModel","setTabTitles","dropdownTextTranslation","StructureColumnConfigService","inlineDialogService","placement","FabricPlacement","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","cd","closed","filterFieldName","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","collection","headerHeight","filtersRef","read","ChangedValueEmitter","subject$","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationWarehouse","rowDetailOpened","combineLatest","schemaRowClass","schemaRowStyle","trackByFn","translateY","StructureRowComponent","detailsEnabled","selectedItem","checkSelectedItem","updateRowClass","previousValue","updateRowStyle","rowClass","rowStyle","prevValue","selectRow","calculateRowStyle","style","styleFunction","prevEntity","rowStylesToRemove","removeRowStyles","rowStylesToAdd","renderRowStyles","styles","split","separatedStyles","trim","toRemoveClass","calculateRowClass","toAddClass","class","clazz","classFunction","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","FUNCTION","BAR","PERCENTAGE_BAR","PERCENTAGE","HTML","CellValue","text","CellValueType","CellTemplateWithAccessor","editable","templateFun","formatterFun","cellEditingEnabled","isCellEditingEnabled","isBooleanDataType","cellValue","findValue","getCellView","CellView","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","BLUR","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","status","focus","observeFieldStatus","observeValueChanges","publishEditEnter","submitChangesAndExit","updatedValue","actualValue","EditEventType","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","scrollPosition","scrollTop","destroy","runOutsideAngular","fromEvent","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","pagingWarehouse","topSummariesPanelEnabled","bottomSummariesPanelEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanel","titlePanelEnabled","footerPanel","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterAddedEvent","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","DomainObject","ScrollBarPositionSetEvent","ScrollBarPositionSetAggregateEvent","VerticalFormation","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","aggregatedValues","update","SummariesManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureCreatedAggregateEvent","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","setVerticalFormationEnabled","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","calculateSourceBasedOnVirtualScroll","setConfig","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","searchedEntities","filterAll","ents","ae","calculateAll","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multi","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","getNotSelected","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","StructureSummariesRepository","onSummariesEnabled","StructureCreatedEventHandler","structureSummariesRepository","commandProviders","readProviders","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","compositionCommandService","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","[class.gui-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","selectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","StructureSummariesUiEventsRepository","onSummariesChanged","SummariesTranslations","distinctTooltip","averageTooltip","minTooltip","maxTooltip","medTooltip","countTooltip","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","summariesTranslations","isSummariesTypePresent","StructureSummariesPanelModule","CreateStructureCommandHandler","getAggregateRepository","StructureCellEditComponent","initEditContext","cellContainerRef","StructureCellEditBooleanComponent","submitChanges","StructureBannerPanel","getBannerPanelConfig","title","bannerPanel","StructureTitlePanelComponent","getPanelTitle","StructureFooterPanelComponent","StructureThemeGateway","theme2","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","StructureSummariesEnabledSetEventHandler","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","sum","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","provideSummariesCalculator","summariesProviders","SummariesDomainModule","StructureSummariesWarehouse","SummariesApiModule","SummariesFeatureModule","summariesApiModule","SetScrollPositionCommandHandler","SetVerticalScrollEnabledCommandHandler","SetRowHeightBasedOnThemeCommandHandler","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","ScrollBarPositionSetEventHandler","SetScrollBarPositionCommandHandler","VerticalFormationDomainModule","VerticalFormationApiModule","VerticalFormationFeatureModule","verticalFormationApiModule","compositionKey","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetEvent","CompositionAggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledEvent","CompositionColumnSetEnabledAggregateEvent","activeColumns","getActiveColumns","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","getMinColumnWidth","calculator","CompositionChangeSortStatusEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","getColumns","addColumn","removeColumn","updatedWidths","setSortStatus","param","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ViewEntity","cellView","templateFunction","fromDataType","getTemplateFunction","AbstractColumnEntity","columnConfig","presentation","header","setInitialAlign","getPresentation","getColumnConfig","getHeader","getFormatterFunction","formatter","setView","setHeader","getView","getAlign","getSortingEnabled","ColumnEntity","getDefaultView","getDefaultAlign","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftEvent","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedEvent","CompositionCreatedAggregateEvent","Group","GroupId","HermesId","emptyGroup","CompositionAggregate","columnFactory","groupFactory","columnsParams","resizeWidth","allColumns","resizeWidthEnabled","activeColumnEntityConverter","columnNameToGroupId","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","isResizeEnabled","isReady","group_1","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","NumberColumnPresentation","getInstance","instance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumns","createColumn","convertWidth","columnEntity","columnEntities","CompositionGroupFactory","CompositionAggregateFactory","CompositionAggregateRepository","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","CreateCompositionCommandHandler","compositionAggregateRepository","CompositionAggregateEvents","CompositionGroupsSetEvent","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","SetColumnsCommandHandler","compositionEventConverter","publishEvents","setColumnsParams","domainEvents","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","CompositionSetColumnEnabledCommandHandler","CompositionChangeSortStatusCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","ChangeSortParams","CompositionChangeSortStatusEventHandler","dir","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellContext","ColumnDefinition","setField","setTemplateFunction","setFormatterFunction","formatterFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","CompositionReadModeRoot","ready","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","columnDefs","InMemoryCompositionReadStore","compositionConverter","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","SetGroupsCommandHandler","CompositionDomainModule","CompositionApiModule","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","cancel","InputEditTemplateComponent","inputElement","inputRef","focusField","emitValueChange","keyup$","keyCode","StringEditTemplateComponent","fb","setSelectionRange","NumberEditTemplateComponent","BooleanEditTemplateComponent","changed","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","ColumnQueryComponent","FunctionViewComponent","BarViewComponent","showPercentage","PercentageViewComponent","TextViewComponent","isBold","isItalic","renderer","isHtml","Attribute","Renderer2","components","CompositionFeatureModule","compositionApiModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureHeaderGroupsComponent","StructureSearchingGate","StructureColumnHeaderGate","columnHeaderTop","columnHeaderBottom","StructurePagingGate","SelectionGate","itemsSelected","rowSelection","StructureSelectionGate","StructureL10nGate","StructurePanelGate","StructureRowDetailGate","rowDetail","StructureColumnMenuGate","columnMenu","StructureSummariesGate","StructureInfoPanelGate","StructureRowClassGate","StructureRowColoringGate","schemaCommandInvoker","rowColoringChanged","StructureRowStyleGate","structureGates","CssClassModule","StructureSharedModule","createStructureDefinition","StructureModule","isPlatformBrowser","window","HERMES_API","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListWithGridModule","GuiListModule","forRoot","forChild","imports$1","declarations$3","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ``\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { GuiListPaging } from '../../core/api/gui.list.public-api';\nimport { PagingConfig } from '../../../../structure/paging/core/api/paging-config';\nimport { PagingDisplayMode } from '../../../../structure/paging/feature/mode/paging-display-mode';\n\n\nexport class GuiListPagingConverter {\n\n\tconvert(guiListPaging: GuiListPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiListPaging.enabled !== undefined && guiListPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiListPaging.enabled;\n\t\t}\n\n\t\tif (guiListPaging.page !== undefined && guiListPaging.page !== null) {\n\t\t\tpagingConfig.page = guiListPaging.page;\n\t\t}\n\n\t\tif (guiListPaging.pageSize !== undefined && guiListPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiListPaging.pageSize;\n\t\t}\n\n\t\tif (guiListPaging.pageSizes !== undefined && guiListPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiListPaging.pageSizes;\n\t\t}\n\n\t\tif (guiListPaging.pagerTop !== undefined && guiListPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiListPaging.pagerTop;\n\t\t} else {\n\t\t\tpagingConfig.pagerTop = true;\n\t\t}\n\n\t\tif (guiListPaging.pagerBottom !== undefined && guiListPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiListPaging.pagerBottom;\n\t\t}\n\n\t\tpagingConfig.displayMode = PagingDisplayMode.BASIC;\n\n\t\treturn pagingConfig;\n\t}\n\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-card',\n\ttemplate: ``\n})\nexport class GuiListCardComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum ListViewMode {\n\tLIST = 'List',\n\tCARD = 'Card'\n}\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport interface GuiListPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiListMode {\n\tLIST,\n\tCARD\n}\n\nexport interface GuiListView {\n\n\tactive?: GuiListMode;\n\n\tselector?: boolean;\n\n}\n\nexport interface GuiListField {\n\n\tfield?: string;\n\n\ttype?: GuiListFieldType;\n\n}\n\nexport enum GuiListFieldType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport interface GuiListSearching {\n\n\tenabled?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiListLocalization {\n\n\ttranslation?: GuiListTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport type GuiListTranslation = TranslationChange;\n\nexport const GuiListDefaultTranslation = defaultTranslation;\n","import { ListViewMode } from '../../../../structure/list/core/domain/mode/list-view-mode';\nimport { GuiListMode } from '../../core/api/gui.list.public-api';\n\nexport class GuiListModeConverter {\n\n\tconvert(mode: GuiListMode): ListViewMode {\n\n\t\tif (mode === GuiListMode.LIST) {\n\t\t\treturn ListViewMode.LIST;\n\t\t} else {\n\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewCardTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { ContentChild, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\n\nimport { GuiListField, GuiListLocalization, GuiListPaging, GuiListSearching, GuiListView } from '../core/api/gui.list.public-api';\nimport { GuiListPagingConverter } from './paging/gui-list.paging.converter';\nimport { GuiListCardComponent } from './card/gui.list-card.component';\nimport { GuiListModeConverter } from './mode/gui-list.mode.converter';\n\nimport { ListViewCardTemplate } from '../../../structure/list/feature/card/template/list-view.card-template';\nimport { ListViewTemplate } from '../../../structure/list/feature/source/template/list-view-template';\nimport { ListViewMode } from '../../../structure/list/core/domain/mode/list-view-mode';\nimport { FieldConfig } from '../../../structure/field/core/api/field.config';\nimport { SearchConfig } from '../../../structure/search/core/api/search-config';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\n\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@ContentChild(GuiListCardComponent, { static: true })\n\tlistCard: GuiListCardComponent;\n\n\t@Input()\n\tsource: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\t@Input()\n\tcardTemplate: (item: any) => string;\n\n\t@Input()\n\tpaging: boolean | GuiListPaging;\n\n\t@Input()\n\tview: GuiListView;\n\n\t@Input()\n\tfields: Array<GuiListField>;\n\n\t@Input()\n\tsearching: GuiListSearching;\n\n\t@Input()\n\tlocalization: GuiListLocalization;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter<string>();\n\n\tcontainerTemplate: ListViewTemplate;\n\n\tlistCardTemplate: ListViewCardTemplate;\n\n\tlistViewMode: ListViewMode;\n\n\tlistViewModeSelector: boolean;\n\n\tguiListPagingConverter: GuiListPagingConverter = new GuiListPagingConverter();\n\n\tguiListModeConverter: GuiListModeConverter = new GuiListModeConverter();\n\n\tlistFields: Array<FieldConfig>;\n\n\tsearchConfig: SearchConfig;\n\n\tngOnChanges(changes: NgChanges<GuiListGateway>) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ListViewTemplate(this.template, templateRef);\n\n\t\tconst cardTemplateRef = this.listCard ? this.listCard.templateRef : null;\n\n\t\tthis.listCardTemplate = new ListViewCardTemplate(this.cardTemplate, cardTemplateRef);\n\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.guiListPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.view !== undefined && changes.view.currentValue !== undefined) {\n\n\t\t\tif (this.view.active !== undefined) {\n\t\t\t\tthis.listViewMode = this.guiListModeConverter.convert(this.view.active);\n\t\t\t}\n\n\t\t\tif (this.view.selector !== undefined) {\n\t\t\t\tthis.listViewModeSelector = this.view.selector;\n\t\t\t}\n\n\t\t}\n\n\t\tif (changes.fields !== undefined && changes.fields.currentValue !== undefined) {\n\n\t\t\tthis.listFields = this.fields.map((f) => {\n\t\t\t\treturn {\n\t\t\t\t\tfield: f.field,\n\t\t\t\t\ttype: f.type as any // DataType\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (changes.searching !== undefined && changes.searching.currentValue !== undefined) {\n\n\t\t\tthis.searchConfig = this.searching as SearchConfig;\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { Component, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class.gui-list]': `\"true\"`\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tsuper();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonSearchPhraseChange(phrase: string): void {\n\t\tthis.searchPhraseChanged.emit(phrase);\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../domain-read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { CompositionId } from './composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupRepository extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], true);\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from './composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from './column/column.id';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class CompositionCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { StructureId } from './structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingManagerFactory } from '../../../../paging/core/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../paging/core/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(aggregateId: AggregateId): StructureReadModelRoot;\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse implements Warehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../paging/core/api/paging.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingRepository } from '../../../../paging/core/api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../paging/core/api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationDispatcher } from '../../../../source/core/domain/formation/formation.dispatcher';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(commandDispatcher, formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType): void {\n\t\tsuper.toggleSelectedRow(selectedRow, type, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly data: any;\n\n\tconstructor(data: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.data = data;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<OriginItemEntity>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<OriginItemEntity>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tgetPreparedItems(structureId: StructureId): Array<OriginItemEntity> {\n\t\treturn this.origin.get(structureId.getId());\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SourceWarehouse implements Warehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tgetEntities(structureId: StructureId = structureGlobalId): Array<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   // tap(() => {\n\t\t\t\t\t   //    console.log('onEntities');\n\t\t\t\t\t   // }),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<Array<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n\tgetPreparedEntities(structureId: StructureId = structureGlobalId): Array<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId = structureGlobalId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tlet selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tlet item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId = structureGlobalId): Observable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId = structureGlobalId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId = structureGlobalId): Observable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedRepository } from '../../../../source/core/api/formation/row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends FormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\trowSelectedArchive: RowSelectedRepository,\n\t\t\t\trowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tsourceWarehouse: SourceWarehouse) {\n\t\tsuper(rowSelectedArchive, rowSelectionModeRepository, sourceWarehouse);\n\t}\n\n\t@Override\n\tonRowSelectedReadModel(): Observable<RowSelectedReadModel> {\n\t\treturn super.onRowSelectedReadModel(this.structureId);\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from './structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/core/api/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { FilterConfig } from '../../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tscrollToTop(): void {\n\t\tsuper.scrollToTop(this.structureId);\n\t}\n\n\t@Override\n\tscrollToBottom(): void {\n\t\tsuper.scrollToBottom(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../core/api/structure.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureReadModelRepository } from '../../../core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelRepository extends AggregateArchive<Array<FieldReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldReadModel>> {\n\t\treturn this.fieldReadModelRepository.on(structureId);\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\n\n\n@Injectable()\nexport class SourceCommandInvoker extends Reactive implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.fieldWarehouse\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { FieldWarehouse } from '../../../../field/core/api/field.warehouse';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tfieldWarehouse: FieldWarehouse,\n\t\t\t\tsourceReadModelService: SourceWarehouse) {\n\t\tsuper(commandDispatcher, sourceDispatcher, fieldWarehouse, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureReadModelRepository } from '../../../core/api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../../source/core/api/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../../source/core/api/prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends SourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn super.getEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<Array<OriginItemEntity>> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { CompositionDispatcher } from '../../../../../composition/core/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../../composition/core/domain-read/definition/column-definition-id';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionDispatcher, compositionGroupRepository);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setGroups(configs, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../domain-read/composition.read-model-root-repository';\nimport { CompositionId } from './composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from '../domain-read/composition.read-mode-root';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class CompositionWarehouse implements Warehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId = compositionGlobalId): Observable<GroupCollection> {\n\t\treturn this.compositionGroupRepository.on(compositionId);\n\t}\n\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../../composition/core/domain-read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionRepository, compositionGroupRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../search/core/domain/search.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../../../search/core/api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../search/core/api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../search/core/api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../../api/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends AggregateArchive<SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaRowColoringRepository extends AggregateArchive<SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse implements Warehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/core/domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/core/domain-read/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/core/domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/core/domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaRowColoring } from '../../../../../schema/core/api/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/schema-theme';\nimport { SchemaId } from '../api/schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './schema-theme';\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { structureGlobalId } from '../../../structure/core/api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../../structure/core/api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\nimport { FabricModalThemeService, Theme } from '@generic-ui/fabric';\n\n\n@Injectable()\nexport class SchemaCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly fabricModalThemeService: FabricModalThemeService) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\t\tthis.fabricModalThemeService.changeTheme(this.toFabricTheme(theme)); // TODO github #2162\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n\tprivate toFabricTheme(schemaTheme: SchemaTheme): Theme {\n\n\t\tswitch (schemaTheme) {\n\t\t\tcase SchemaTheme.DARK: {\n\t\t\t\treturn Theme.DARK;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.FABRIC: {\n\t\t\t\treturn Theme.FABRIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.GENERIC: {\n\t\t\t\treturn Theme.GENERIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.LIGHT: {\n\t\t\t\treturn Theme.LIGHT;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.MATERIAL: {\n\t\t\t\treturn Theme.MATERIAL;\n\t\t\t}\n\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/core/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring';\nimport { FabricModalThemeService } from '@generic-ui/fabric';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher,\n\t\t\t\tfabricModalThemeService: FabricModalThemeService) {\n\t\tsuper(schemaDispatcher, structureCommandService, fabricModalThemeService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n\t// TODO\n\tcompare(target: Paging): boolean {\n\t\treturn JSON.stringify(this) === JSON.stringify(target);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../paging/core/api/read/paging';\nimport { Source } from '../../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { PageChangedEvent } from '../../../paging/core/domain/page/page-changed.event';\nimport { PagingSetEvent } from '../../../paging/core/domain/set/paging-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any,\n\t\t\t\tPageChangedEvent as any,\n\t\t\t\tPagingSetEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionRepository extends AggregateArchive<number> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { VerticalFormationRepository } from '../../../../vertical-formation/core/api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionRepository } from '../../../../vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tpositionRepository: VerticalFormationScrollBarPositionRepository) {\n\t\tsuper(verticalFormationRepository, positionRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n\n\t@Override\n\tonScrollBarPosition(): Observable<number> {\n\t\treturn super.onScrollBarPosition(this.structureId);\n\t}\n}\n","import { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { SearchDispatcher } from '../../../search/core/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandInvoker, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandInvoker, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ModifierApi } from './modifier-api';\n\nexport abstract class Modifier<T extends ModifierApi> {\n\n\tprotected constructor(\n\t\tprivate readonly hostElement?: HTMLElement\n\t) {\n\t}\n\n\tprotected abstract createModifier(htmlElement: HTMLElement): T;\n\n\tgetElement(htmlElement: HTMLElement): T {\n\t\treturn this.createModifier(htmlElement);\n\t}\n\n\tgetHost(): T {\n\n\t\tif (!this.hostElement) {\n\t\t\tthrow new Error('Missing host element in DomRenderer constructor.');\n\t\t}\n\n\t\treturn this.createModifier(this.hostElement);\n\t}\n}\n","import { ClassModifierApi } from './class-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class ClassModifier extends Modifier<ClassModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): ClassModifierApi {\n\t\treturn new ClassModifier.ClassModifier(htmlElement);\n\t}\n\n\tprivate static readonly ClassModifier = class implements ClassModifierApi {\n\n\t\tprivate static readonly CLASS = 'class';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tadd(...classes: Array<string>): void {\n\t\t\tthis.addClassToDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tremove(...classes: Array<string>): void {\n\t\t\tthis.removeClassFromDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(ClassModifier.ClassModifier.CLASS);\n\t\t}\n\n\t\tprivate addClassToDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.add(classes[i]);\n\t\t\t}\n\t\t}\n\n\t\tprivate removeClassFromDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.remove(classes[i]);\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate static readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate static readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate static readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate static readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate static readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate static readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate static readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate static readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate static readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.classModifier = new ClassModifier();\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, SchemaCssClassManager.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, SchemaCssClassManager.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn SchemaCssClassManager.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn SchemaCssClassManager.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn SchemaCssClassManager.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).add(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).remove(cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly schemaManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../domain/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../../summaries/core/api/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport class StreamCloser<T> {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tconstructor() {\n\t}\n\n\ttakeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n\tunsubscribe(): void {\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ClassModifier } from '../dom/class/class-modifier';\nimport { Changes } from './ng-changes';\n\n\nexport abstract class GuiComponent {\n\n\tprivate readonly innerClassModifier: ClassModifier = new ClassModifier(this.innerElementRef.nativeElement);\n\n\tprotected constructor(private readonly innerElementRef: ElementRef) {\n\t\tthis.addHostClass();\n\t}\n\n\tprotected abstract getSelectorName(): string;\n\n\taddClassToHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().add(className);\n\t}\n\n\tremoveClassFromHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().remove(className);\n\t}\n\n\thasChanged<T>(prop: Changes<T>): boolean {\n\t\treturn prop !== undefined && prop.currentValue !== undefined;\n\t}\n\n\tprivate addHostClass(): void {\n\t\tthis.innerClassModifier.getHost().add(this.getSelectorName());\n\t}\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { GuiComponent } from './gui-component';\nimport { Subscription } from 'rxjs';\n\nexport abstract class SmartComponent extends GuiComponent {\n\n\tprivate viewInDom: boolean = false;\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewInDom = true;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewInDom()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewInDom(): boolean {\n\t\treturn this.viewInDom;\n\t}\n\n\tsubscribeAndRender(obs$: any, callback: (args: any) => void): Subscription {\n\t\treturn obs$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((subscribeArguments: any) => {\n\t\t\t\tcallback(subscribeArguments);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tsubscribeWithoutRender(obs$: any, callback: (args: any) => void): Subscription {\n\t\treturn obs$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((subscribeArguments: any) => {\n\t\t\t\tcallback(subscribeArguments);\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureGateway } from '../structure.gateway';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(changes: NgChanges<StructureGateway>): void {\n\n\t\tconst config: Array<ColumnConfig | MultiColumnConfig> = changes.columns.currentValue;\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(changes.columns.currentValue);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: Array<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tconst columnConfigs: Array<ColumnConfig> = [],\n\t\t\tgroupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs.push(...(config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { SortingConfig } from '../../../sorting/core/api/sorting-config';\nimport { FilterConfig } from '../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../filter/core/api/quick-filters.config';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { TranslationService } from '../../../../l10n/core/api/translation.service';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig> = [];\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t// @Input()\n\t// rowColoring: RowColoring;\n\n\t// @Input()\n\t// rowStyle: GuiRowStyle;\n\n\t// @Input()\n\t// rowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t// @Input()\n\t// infoPanel: boolean | InfoPanelConfig;\n\n\t// @Input()\n\t// summaries: SummariesConfig;\n\n\t// @Input()\n\t// columnMenu: ColumnMenuConfig;\n\t//\n\t// @Input()\n\t// rowDetail: RowDetailConfig;\n\n\t// @Input()\n\t// titlePanel: TitlePanelConfig;\n\t//\n\t// @Input()\n\t// footerPanel: FooterPanelConfig;\n\t//\n\t// @Input()\n\t// localization: GuiLocalization;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t// @Output()\n\t// rowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\telementRef: ElementRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationService\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureGateway>) {\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\t// if (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t// \tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t// }\n\n\t\t// if (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t// \tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t// }\n\t\t//\n\t\t// if (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t// \tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t// }\n\n\t\t// if (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t// \tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t// }\n\n\t\t// if (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t//\n\t\t// \tif (typeof this.infoPanel === 'boolean') {\n\t\t// \t\tthis.infoPanel = {\n\t\t// \t\t\tenabled: this.infoPanel\n\t\t// \t\t};\n\t\t// \t}\n\t\t//\n\t\t// \tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t// }\n\n\t\t// if (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t// \tthis.structureSummariesConfigService.set(this.summaries);\n\t\t// }\n\n\t\tif (changes.editMode !== undefined && changes.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (changes.cellEditing !== undefined && changes.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (changes.width !== undefined && changes.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (changes.rowHeight !== undefined && changes.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (changes.autoResizeWidth !== undefined && changes.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (changes.loading !== undefined && changes.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(changes);\n\t\t}\n\n\t\tif (changes.verticalGrid !== undefined && changes.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (changes.horizontalGrid !== undefined && changes.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\t// if (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t// \tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t// }\n\n\t\t// if (simpleChanges.rowClass !== undefined && simpleChanges.rowClass.currentValue !== undefined) {\n\t\t// \tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t// }\n\n\t\t// if (simpleChanges.rowStyle !== undefined && simpleChanges.rowStyle.currentValue !== undefined) {\n\t\t// \tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t// }\n\n\t\tif (changes.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (changes.virtualScroll !== undefined && changes.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (changes.sorting !== undefined && changes.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (changes.filtering !== undefined && changes.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (changes.quickFilters !== undefined && changes.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\t// if (simpleChanges.localization !== undefined && simpleChanges.localization.currentValue !== undefined) {\n\t\t//\n\t\t// \tif (this.localization.translationResolver) {\n\t\t// \t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t// \t}\n\t\t//\n\t\t// \tif (this.localization.translation) {\n\t\t// \t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t// \t}\n\t\t// }\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (changes.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\n\t\tthis.componentInitialized();\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\t// this.schemaEventRepository\n\t\t// \t.onRowColoring(this.schemaId)\n\t\t// \t.pipe(this.takeUntil())\n\t\t// \t.subscribe((coloring: SchemaRowColoring) => {\n\t\t// \t\tthis.rowColoringChanged.emit(coloring);\n\t\t// \t});\n\t}\n\n\tprivate isInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate isNotInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(structureId, PagesizeChangedEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionReadModelRootId } from '../domain-read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly s$ = new Subject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tswitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   take(1),\n\t\t\t\t\t\t\t\t   map((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   let item = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getData(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.s$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<SelectedRow>> {\n\t\treturn this.s$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): Observable<string> {\n\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/row-coloring/row-coloring-set.event';\nimport { SchemaId } from './schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValue: SelectedRow;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getData(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getData();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/api/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","export enum CssClass {\n\tSELECTED = 'selected',\n\tPAGING_TOP_CLASS_NAME = 'gui-paging-top',\n\tPAGING_BOTTOM_CLASS_NAME = 'gui-paging-bottom'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClassModifier } from '../../../common/cdk/dom/class/class-modifier';\nimport { CssClass } from './css-class';\n\n@Injectable()\nexport class CssClassModifier {\n\n\tprivate readonly classModifier: ClassModifier = new ClassModifier();\n\n\tselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).add(CssClass.SELECTED);\n\t}\n\n\tunselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(CssClass.SELECTED);\n\t}\n\n\tadd(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).add(clazzName);\n\t}\n\n\tremove(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(clazzName);\n\t}\n\n\ttoggle(htmlElement: HTMLElement): void {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { CssClassModifier } from '../../shared/css-class/css-class.modifier';\nimport { CssClass } from '../../shared/css-class/css-class';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'div[gui-paging][position]',\n\ttemplateUrl: './paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tisPagingVisible = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly elRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-justify-end');\n\t\tthis.addClassToHost('gui-items-center');\n\t\tthis.addClassToHost('gui-p-4');\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingComponent>) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t} else {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tdistinctUntilChanged(),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tdistinctUntilChanged((a: Paging, b: Paging) => {\n\t\t\t\t\treturn a.compare(b);\n\t\t\t\t}),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.calculatePagingVisibility();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n\tprivate calculatePagingVisibility(): void {\n\t\tthis.isPagingVisible = this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging';\n\t}\n\n}\n","import { GuiComponent } from './gui-component';\nimport { ElementRef } from '@angular/core';\n\nexport abstract class PureComponent extends GuiComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (!this.hasConstructorOnlyElementRefInjected(arguments)) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate hasConstructorOnlyElementRefInjected(args: IArguments): boolean {\n\n\t\tif (arguments.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.isElementRef(arguments[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isElementRef(elRef: any): boolean {\n\t\treturn elRef.nativeElement !== null;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-paging-select][paging]',\n\ttemplateUrl: `./paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingSelectComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tselectPageSizes: Array<GuiSelectOption>;\n\n\tselectPageSize: GuiSelectOption;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingSelectComponent>) {\n\n\t\tif (changes.paging) {\n\t\t\tif (this.paging) {\n\t\t\t\tthis.selectPageSizes = this.getSelectPageSizes();\n\t\t\t\tthis.selectPageSize = this.getSelectPageSize(this.paging.getPageSize());\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePageSize(pageSize: GuiSelectOption): void {\n\t\tthis.pageSizeChanged.emit(+pageSize.value);\n\t}\n\n\tprivate getSelectPageSizes(): Array<GuiSelectOption> {\n\t\tconst selectPageSizes: Array<GuiSelectOption> = [],\n\t\t\tpageSizes = this.paging.getPageSizes();\n\n\t\tpageSizes.forEach((pageSize: number) => {\n\t\t\tconst selectOption = this.getSelectPageSize(pageSize);\n\t\t\tselectPageSizes.push(selectOption);\n\t\t});\n\n\t\treturn selectPageSizes;\n\t}\n\n\tprivate getSelectPageSize(pageSize: number): GuiSelectOption {\n\t\treturn { name: pageSize.toString(), value: pageSize.toString() };\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-select';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-navigator][paging][sourceSize]',\n\ttemplateUrl: `./alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-pages][paging]',\n\ttemplateUrl: `./alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingPagesComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<AlternativePagingPagesComponent>) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-pages';\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'StructurePreparedEntitiesSetAggregateEvent':\n\n\t\t\t\tthis.domainEventPublisher.publish(event.toDomainEvent());\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandInvoker,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-navigator][paging]',\n\ttemplateUrl: `./paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'div[gui-paging-stats][paging]',\n\ttemplateUrl: `./paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-mx-6');\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-stats';\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Observable } from 'rxjs';\nimport { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\n\nexport abstract class TranslationService {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): Observable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TranslationService } from '../core/api/translation.service';\nimport { Translation } from '../core/api/translation';\n\n\n@Pipe({\n\tname: 'guiTranslate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform, OnDestroy {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: Subscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationService) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\n\nimport { TranslationService } from '../api/translation.service';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\n\n\n@Injectable()\nexport class TranslationServiceImpl extends TranslationService {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: Subject<Translation> = new ReplaySubject(1);\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): Observable<Translation> {\n\t\treturn this.dictionary$\n\t\t\t\t   .asObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationService } from '../core/api/translation.service';\nimport { TranslationServiceImpl } from '../core/domain/translation.service-impl';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t],\n\tentryComponents: []\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationService, useClass: TranslationServiceImpl }];\n\t}\n\n\tconstructor(@Optional() apiModule: TranslationApiModule) {\n\t\tsuper();\n\t\tif (apiModule === null) {\n\t\t\tthrow new Error('TranslationApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() pagingApiModule: PagingApiModule) {\n\t\tsuper();\n\t\tif (pagingApiModule === null) {\n\t\t\tthrow new Error('PagingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly titlePanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Title Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper(StructureTitlePanelConfigArchive.titlePanelConfig);\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly footerPanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Footer Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper(StructureFooterPanelConfigArchive.footerPanelConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class SortingWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SortingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() sortingApiModule: SortingApiModule) {\n\t\tsuper();\n\t\tif (sortingApiModule === null) {\n\t\t\tthrow new Error('SortingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { StructureId } from '../../../core/api/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../api/enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\n\n\n@Injectable()\nexport class SearchWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandInvoker,\n\t\tSearchWarehouse,\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n}\n","import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\n\nimport { GuiComponent } from './gui-component';\n\n\nexport abstract class StaticComponent extends GuiComponent implements OnInit {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.changeDetectorRef.detach();\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StaticComponent } from './static-component';\n\nexport abstract class IconComponent extends StaticComponent {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t\tthis.addClassToHost('gui-icon');\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-search-icon]',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../core/api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../core/api/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-search-bar]',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\"\n\t\t\t\t  class=\"gui-flex gui-relative gui-w-full\">\n\n\t\t\t\t<div gui-search-icon></div>\n\n\t\t\t\t<input formControlName=\"searchPhrase\"\n\t\t\t\t\t   class=\"gui-border-0 gui-w-full gui-h-full gui-py-5 gui-pr-5 gui-pl-21\"\n\t\t\t\t\t   [placeholder]=\"placeholder\">\n\n\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\"\n\t\t\t\t\t  class=\"gui-clear-search-icon\"\n\t\t\t\t\t  (click)=\"clear()\">\n\t\t\t\t</span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-bar';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tSearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tlet matcher = fieldConfig.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './field.read-model-repository';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.api';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelRepository,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() fieldApiModule: FieldApiModule) {\n\t\tsuper();\n\t\tif (fieldApiModule === null) {\n\t\t\tthrow new Error('FieldApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (let element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tlet rows = Array.from(this.selectedRows),\n\t\t\t\tequal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(rowChangedEvent.getSelectedRows(), rowChangedEvent.isAllSelected(), rowChangedEvent.isAllUnselected());\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { StructureOriginChangedEventHandler } from '../api/origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from '../api/prepared/structure.prepared-items.event-handler';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginRepository,\n\t\tStructurePreparedItemsRepository,\n\t\tSourceConverter,\n\n\t\tSourceCommandInvoker,\n\t\tSourceWarehouse,\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaTheme } from '../api/schema-theme';\nimport { SchemaRowColoring } from '../api/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../api/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler implements DomainEventHandler<SchemaId, SchemaThemeSetEvent> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.themeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaHorizontalGridRepository } from './schema.horizontal-grid.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaHorizontalGridSetEvent> {\n\n\tconstructor(private horizontalGridRepository: SchemaHorizontalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n\thandle(event: SchemaHorizontalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGridRepository.next(event.getAggregateId(), event.getHorizontalGrid());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaRowColoringRepository } from './schema.row-coloring.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n\n@Injectable()\nexport class SchemaRowColoringSetEventHandler implements DomainEventHandler<SchemaId, RowColoringSetEvent> {\n\n\tconstructor(private schemaRowColoringRepository: SchemaRowColoringRepository) {\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n\thandle(event: RowColoringSetEvent): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.schemaRowColoringRepository.next(event.getAggregateId(), event.getRowColoring());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaVerticalGridRepository } from './schema.vertical-grid.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaVerticalGridSetEvent> {\n\n\tconstructor(private schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n\thandle(event: SchemaVerticalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.schemaVerticalGridRepository.next(event.getAggregateId(), event.getVerticalGrid());\n\t\t}\n\n\t}\n\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaTheme } from '../../api/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaThemeSetEventHandler } from '../domain-read/theme/schema-theme-set.event-handler';\nimport { SchemaHorizontalGridSetEventHandler } from '../domain-read/horizontal-grid/schema.horizontal-grid-set.event-handler';\nimport { SchemaRowColoringSetEventHandler } from '../domain-read/row-coloring/schema.row-coloring-set.event-handler';\nimport { SchemaVerticalGridSetEventHandler } from '../domain-read/vertical-grid/schema.vertical-grid-set.event-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from '../api/schema.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridSetEventHandler),\n\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { schemaKey } from './schema.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.commandHandlers()\n\t\t\t],\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandInvoker,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository,\n\t\tSchemaHorizontalGridRepository,\n\t\tSchemaRowColoringRepository,\n\t\tSchemaVerticalGridRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","export enum StyleName {\n\tWIDTH = 'width',\n\tHEIGHT = 'height',\n\tPADDING_TOP = 'padding-top'\n}\n","import { StyleModifierApi } from './style-modifier-api';\nimport { StyleName } from './style-name';\nimport { Modifier } from '../core/modifier';\n\n\nexport class StyleModifier extends Modifier<StyleModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): StyleModifierApi {\n\t\treturn new StyleModifier.StyleModifier(htmlElement);\n\t}\n\n\tprivate static readonly StyleModifier = class implements StyleModifierApi {\n\n\t\tprivate static readonly STYLE = 'style';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetStyleByName(name: string, value: string): void {\n\t\t\tthis.set(name, value);\n\t\t}\n\n\t\tsetWidth(value: number): void {\n\t\t\tthis.set(StyleName.WIDTH, this.toPx(value));\n\t\t}\n\n\t\tsetHeight(value: number): void {\n\t\t\tthis.set(StyleName.HEIGHT, this.toPx(value));\n\t\t}\n\n\t\tsetPaddingTop(value: number): void {\n\t\t\tthis.set(StyleName.PADDING_TOP, this.toPx(value));\n\t\t}\n\n\t\tremove(styleName: StyleName): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][styleName] = '';\n\t\t}\n\n\t\tremoveStyleByName(name: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = '';\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(StyleModifier.StyleModifier.STYLE);\n\t\t}\n\n\t\tprivate set(name: string, value: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = value;\n\t\t}\n\n\t\tprivate toPx(value: number): string {\n\t\t\treturn value > 0 ? `${value}px` : `${value}`;\n\t\t}\n\n\t};\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/api/structure.id';\nimport { CompositionId } from '../../../composition/core/api/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gate/structure.gateway';\nimport { StructureReadModelRoot } from '../core/api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandDispatcher } from '../../core/api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationService } from '../../../l10n/core/api/translation.service';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { StyleModifier } from '../../../common/cdk/dom/style/style-modifier';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\tSchemaFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'../../../composition/feature/style/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, OnDestroy, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationService,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly detectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly injector: Injector,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdetectorRef,\n\t\t\telementRef,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService\n\t\t);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandDispatcher.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureComponent>) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.detectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getHost().setWidth(width);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewTemplate } from './list-view-template';\n\n\n@Injectable()\nexport class ListViewTemplateArchive extends Archive<ListViewTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewCardTemplate } from './list-view.card-template';\n\n\n@Injectable()\nexport class ListViewCardTemplateArchive extends Archive<ListViewCardTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\n\nexport const listViewProviders = [\n\tListViewTemplateArchive,\n\tListViewCardTemplateArchive\n];\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootId } from '../../../../composition/core/domain-read/composition.read-model-root-id';\n\nexport class ListViewId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class ListViewReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): ListViewId {\n\t\treturn new ListViewId(this.getId());\n\t}\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../api/list-view.id';\n\n\nexport class CreateListViewCommand extends CreateAggregateCommand {\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'CreateListViewCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { ListViewId } from '../api/list-view.id';\n\nexport abstract class ListViewCommand extends Command<ListViewId> {\n}\n","import { ListViewMode } from './list-view-mode';\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewCommand } from '../list-view.command';\n\n\nexport class SetListViewModeCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'SetListViewModeCommand');\n\t}\n\n\tgetMode(): ListViewMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { ListViewId } from '../../../api/list-view.id';\nimport { ListViewCommand } from '../../list-view.command';\n\n\nexport class ToggleListViewSelectorCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ToggleListViewSelectorCommand');\n\t}\n\n\tiseEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../api/list-view.id';\nimport { CreateListViewCommand } from './create/create-list-view.command';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SetListViewModeCommand } from './mode/set-list-view-mode.command';\nimport { ToggleListViewSelectorCommand } from './mode/selector/toggle-list-view-selector.command';\n\n\n@Injectable()\nexport class ListViewDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateListViewCommand(listViewId));\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new SetListViewModeCommand(listViewId, mode));\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleListViewSelectorCommand(listViewId, enabled));\n\t}\n\n}\n","import { ListViewReadModelRootId } from './list-view.read-model-root-id';\n\nexport const listViewGlobalId = new ListViewReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from '../domain/list-view.dispatcher';\nimport { listViewGlobalId } from './read/list-view.global-id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\n\n\n@Injectable()\nexport class ListViewCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly listViewDispatcher: ListViewDispatcher) {\n\t}\n\n\tcreate(listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.create(listViewReadModelRootId.toAggregateId());\n\t}\n\n\tsetMode(mode: ListViewMode, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.setMode(mode, listViewReadModelRootId.toAggregateId());\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.toggleSelector(enabled, listViewReadModelRootId.toAggregateId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../core/api/structure.id';\nimport { StructureIdGenerator } from '../../grid/feature/structure-id.generator';\nimport { structureIdFactory } from '../../grid/feature/structure.component';\nimport { StructureCommandDispatcher } from '../../core/api/structure.command-dispatcher';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { listViewProviders } from './list-view.providers';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { provideComponentServices } from '../../grid/feature/local/local-providers';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\nimport { ListViewReadModelRootId } from '../core/api/read/list-view.read-model-root-id';\nimport { ListViewCommandInvoker } from '../core/api/list-view.command-invoker';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { TranslationService } from '../../../l10n/core/api/translation.service';\n\n\n/** @internal */\nexport function listViewIdFactory(generator: StructureIdGenerator): ListViewReadModelRootId {\n\treturn new ListViewReadModelRootId('gui-' + generator.generateId());\n}\n\nconst componentProviders = [{\n\tprovide: StructureId,\n\tuseFactory: structureIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n}, {\n\tprovide: ListViewReadModelRootId,\n\tuseFactory: listViewIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n},\n\t...listViewProviders,\n\n\t...provideComponentServices(),\n\n\tPagingFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent()\n];\n\n@Component({\n\tselector: 'gui-list-view',\n\ttemplate: `\n\n\t\t<div gui-list-view-layout></div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: [\n\t\t...componentProviders,\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: ListViewComponent\n\t\t}\n\t],\n\tstyleUrls: [\n\t\t'./style/list-view.ngx.scss',\n\t\t'./source/list-view-source.component.ngx.scss',\n\t\t'./style/theme/generic.list.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-list-view]': `\"true\"`,\n\t\t'[class.gui-generic]': `\"true\"`,\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ListViewComponent implements FilterContainerRef {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tsourceCommandService: SourceCommandInvoker,\n\t\t\t\tcontainerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tlistCardTemplateArchive: ListViewCardTemplateArchive,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tlistViewCommandDispatcher: ListViewCommandInvoker,\n\t\t\t\tprivate readonly translationService: TranslationService\n\t) {\n\t\tthis.translationService.setDefaultTranslation();\n\t\tstructureCommandService.createStructure(this.structureId);\n\t\tlistViewCommandDispatcher.create(this.listViewReadModelRootId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ListViewTemplate } from './template/list-view-template';\nimport { ListViewTemplateArchive } from './template/list-view-template.archive';\n\n@Component({\n\tselector: 'div[gui-list-view-source]',\n\ttemplateUrl: `./list-view-source.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewSourceComponent extends SmartComponent implements OnInit, OnDestroy {\n\n\tsource: Array<any> = [];\n\n\ttemplate: ListViewTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ListViewTemplateArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.structureSourceWarehouse.onEntities(this.structureId),\n\t\t\t(items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getData());\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.containerTemplateArchive.onValue(),\n\t\t\t(template: ListViewTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-view-source';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewId } from '../list-view.id';\n\n\n@Injectable()\nexport class ListViewModeRepository extends Reactive {\n\n\tprivate mode = new Map<string, ListViewMode>();\n\n\tprivate mode$ = new ReplaySubject<Map<string, ListViewMode>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.next(mode, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<ListViewMode> {\n\n\t\treturn this.mode$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, ListViewMode>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.mode.set(listViewId.toString(), mode);\n\t\tthis.mode$.next(this.mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../list-view.id';\n\n\n@Injectable()\nexport class ListViewSelectorRepository extends Reactive {\n\n\tprivate selectorEnabled = new Map<string, boolean>();\n\n\tprivate selectorEnabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(selectorEnabled: boolean, listViewId: ListViewId): void {\n\t\tthis.next(selectorEnabled, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<boolean> {\n\n\t\treturn this.selectorEnabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.selectorEnabled.set(listViewId.toString(), enabled);\n\t\tthis.selectorEnabled$.next(this.selectorEnabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ListViewMode } from '../../core/domain/mode/list-view-mode';\nimport { ListViewReadModelRootId } from '../../core/api/read/list-view.read-model-root-id';\nimport { ListViewModeRepository } from '../../core/api/mode/list-view.mode.repository';\nimport { ListViewSelectorRepository } from '../../core/api/mode/selector/list-view.selector.repository';\n\n\n@Component({\n\tselector: 'div[gui-list-view-layout]',\n\ttemplateUrl: `./list-view-layout.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewLayoutComponent extends SmartComponent implements OnInit {\n\n\tlistModeEnabled: boolean;\n\n\tcardModeEnabled: boolean;\n\n\tselectorEnabled: boolean;\n\n\tsearchBarEnabled: boolean = true;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeRepository,\n\t\t\t\tprivate readonly listViewSelectorRepository: ListViewSelectorRepository\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.listViewModeRepository.on(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(mode: ListViewMode) => {\n\t\t\t\tthis.listModeEnabled = mode === ListViewMode.LIST;\n\t\t\t\tthis.cardModeEnabled = mode === ListViewMode.CARD;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.listViewSelectorRepository.on(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.selectorEnabled = enabled;\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-view-layout';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { ListViewTemplate } from '../template/list-view-template';\n\n\n@Component({\n\tselector: 'div[gui-list-view-item][item][template]',\n\ttemplateUrl: `./list-view-item.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\n\t\tthis.addClassToHost('gui-w-full');\n\t\tthis.addClassToHost('gui-my-6');\n\t\tthis.addClassToHost('gui-mx-0');\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnChanges() {\n\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-item';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-empty-source][items]',\n\ttemplateUrl: `./empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class EmptySourceComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-py-23');\n\t\tthis.addClassToHost('gui-px-6');\n\t}\n\n\tngOnChanges(changes: NgChanges<EmptySourceComponent>) {\n\n\t\tif (this.hasChanged(changes.items)) {\n\t\t\tif (this.items.length === 0) {\n\t\t\t\tthis.removeClassFromHost('gui-hidden');\n\t\t\t\tthis.addClassToHost('gui-block');\n\t\t\t} else {\n\t\t\t\tthis.removeClassFromHost('gui-block');\n\t\t\t\tthis.addClassToHost('gui-hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-empty-source';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { FeatureModule } from '@generic-ui/hermes';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ListViewCardTemplate } from './template/list-view.card-template';\nimport { ListViewCardTemplateArchive } from './template/list-view.card-template.archive';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\n\n\n@Component({\n\tselector: 'div[gui-list-container-card]',\n\ttemplateUrl: `./list-view.container-card.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewContainerCardComponent extends SmartComponent implements OnInit, OnDestroy {\n\n\titems: Array<any> = [];\n\n\tcardTemplate: ListViewCardTemplate;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-flex-wrap');\n\t\tthis.addClassToHost('gui-m-0');\n\t\tthis.addClassToHost('gui-p-0');\n\t\tthis.addClassToHost('gui-rounded');\n\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.items = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listCardTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListViewCardTemplate) => {\n\t\t\t\tthis.cardTemplate = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-container-card';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { ListViewCardTemplate } from '../template/list-view.card-template';\n\n\n@Component({\n\tselector: 'div[gui-list-card-item][item][template]',\n\ttemplateUrl: `./list-view.card-item.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewCardItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewCardTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\n\t\tthis.addClassToHost('gui-cursor-pointer');\n\t\tthis.addClassToHost('gui-block');\n\t\tthis.addClassToHost('gui-m-0');\n\t\tthis.addClassToHost('gui-p-0');\n\t\tthis.addClassToHost('gui-relative');\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-card';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewModeRepository } from '../../../core/api/mode/list-view.mode.repository';\nimport { ListViewReadModelRootId } from '../../../core/api/read/list-view.read-model-root-id';\n\n\n@Component({\n\tselector: 'div[gui-list-mode-select]',\n\ttemplateUrl: `./list-view.container-mode-select.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewContainerModeSelectComponent extends SmartComponent implements OnInit {\n\n\toptions: Array<GuiSelectOption> = Object.keys(ListViewMode)\n\t\t\t\t\t\t\t\t\t\t\t.map((key: string) => ListViewMode[key])\n\t\t\t\t\t\t\t\t\t\t\t.filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t.map((val) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.toGuiSelectOption(val);\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\tlistContainerMode: GuiSelectOption;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeRepository) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.listViewModeRepository.on(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(mode: ListViewMode) => {\n\t\t\t\tthis.listContainerMode = this.toGuiSelectOption(mode);\n\t\t\t}\n\t\t);\n\t}\n\n\tchangeContainerMode(mode: GuiSelectOption): void {\n\t\tconst selectedMode = this.toListViewMode(mode.value);\n\t\tthis.listViewModeRepository.setMode(selectedMode, this.listViewReadModelRootId.toAggregateId());\n\t}\n\n\tprivate toGuiSelectOption(value: string | ListViewMode): GuiSelectOption {\n\t\treturn { value, name: value };\n\t}\n\n\tprivate toListViewMode(mode: string): ListViewMode {\n\n\t\tswitch (mode) {\n\t\t\tcase 'List':\n\t\t\t\treturn ListViewMode.LIST;\n\n\t\t\tcase 'Card':\n\t\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-mode-select';\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { ListViewId } from '../api/list-view.id';\n\nexport abstract class ListViewDomainEvent extends DomainEvent<ListViewId> {\n}\n","import { ListViewId } from '../../api/list-view.id';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewCreatedEvent extends ListViewDomainEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { ListViewId } from '../api/list-view.id';\n\nexport abstract class ListViewAggregateEvent extends AggregateEvent<ListViewId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewCreatedEvent } from './list-view-created.event';\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewCreatedAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { ListViewId } from '../../api/list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewModeSetEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(schemaId, 'ListViewModeSetEvent');\n\t}\n\n\tgetTheme(): ListViewMode {\n\t\treturn this.mode;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewModeSetEvent } from './list-view-mode-set.event';\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewModeSetAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'ListViewModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","export class SelectorVisibility {\n\n\tenabled: boolean = null;\n\n\tvisible: boolean = false;\n\n\tconstructor() {\n\t}\n\n\tisVisible(): boolean {\n\n\t\tif (this.enabled !== null) {\n\t\t\treturn this.enabled;\n\t\t}\n\n\t\treturn this.visible;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis.visible = visible;\n\t}\n\n}\n","import { ListViewId } from '../../../api/list-view.id';\nimport { ListViewDomainEvent } from '../../list-view.domain-event';\n\n\nexport class ListViewSelectorToggledEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'ListViewSelectorToggledEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewSelectorToggledEvent } from './list-view-selector-toggled.event';\nimport { ListViewId } from '../../../api/list-view.id';\nimport { ListViewAggregateEvent } from '../../list-view.aggregate-event';\n\n\nexport class ListViewSelectorToggledAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ListViewSelectorToggledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewSelectorToggledEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../api/list-view.id';\nimport { ListViewCreatedAggregateEvent } from './create/list-view-created.aggregate-event';\nimport { ListViewModeSetAggregateEvent } from './mode/list-view-mode-set.aggregate-event';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SelectorVisibility } from './mode/selector/selector-visibility';\nimport { ListViewSelectorToggledAggregateEvent } from './mode/selector/list-view-selector-toggled.aggregate-event';\n\n\nexport class ListViewAggregate extends AggregateRoot<ListViewId> {\n\n\tprivate mode: ListViewMode;\n\n\tprivate selectorVisibility: SelectorVisibility;\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'ListViewAggregate');\n\t\tthis.setMode(ListViewMode.LIST);\n\t\tthis.initSelectorVisibility();\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<ListViewId>> {\n\t\treturn ListViewCreatedAggregateEvent;\n\t}\n\n\tsetMode(mode: ListViewMode): void {\n\t\tthis.mode = mode;\n\t\tthis.addEvent(new ListViewModeSetAggregateEvent(this.getId(), this.mode));\n\t}\n\n\ttoggleModeSelector(enabled: boolean): void {\n\t\tthis.selectorVisibility.setEnabled(enabled);\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate initSelectorVisibility(): void {\n\t\tthis.selectorVisibility = new SelectorVisibility();\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate emitEventAfterSelectorVisibilityChange(): void {\n\t\tthis.addEvent(new ListViewSelectorToggledAggregateEvent(this.getId(), this.selectorVisibility.isVisible()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../api/list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\n@Injectable()\nexport class ListViewAggregateFactory extends AggregateFactory<ListViewId, ListViewAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(id: ListViewId): ListViewAggregate {\n\t\treturn new ListViewAggregate(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateListViewCommand } from './create-list-view.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class CreateListViewCommandHandler implements CreateAggregateCommandHandler<ListViewAggregate, CreateListViewCommand> {\n\n\tforCommand(): CommandType<CreateListViewCommand> {\n\t\treturn CreateListViewCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewStore extends InMemoryStore<ListViewId, ListViewAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { InMemoryListViewStore } from './in-memory.list-view.store';\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateStore extends InMemoryAggregateStore<ListViewId, ListViewAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemoryListViewStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../api/list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\nexport abstract class ListViewAggregateRepository extends AggregateRepository<ListViewId, ListViewAggregate> {\n\n\tabstract getById(listViewId: ListViewId): Optional<ListViewAggregate>;\n\n\tabstract save(aggregate: ListViewAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { InMemoryListViewAggregateStore } from './in-memory.list-view.aggregate-store';\n\nimport { ListViewAggregateRepository } from '../../domain/list-view.aggregate-repository';\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateRepository extends ListViewAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemoryListViewAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(listViewId: ListViewId): Optional<ListViewAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(listViewId);\n\t}\n\n\tsave(listViewAggregate: ListViewAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(listViewAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\nimport { ListViewModeSetEvent } from '../domain/mode/list-view-mode-set.event';\n\n@Injectable()\nexport class ListViewEventRepository extends EventRepository<ListViewReadModelRootId, ListViewId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonModeChange(listViewReadModelRootId: ListViewReadModelRootId) {\n\n\t\treturn this.onEvent(listViewReadModelRootId, ListViewModeSetEvent);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ListViewWarehouse implements Warehouse {\n\n\tconstructor() {\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetListViewModeCommand } from './set-list-view-mode.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\nimport { ListViewCommand } from '../list-view.command';\n\n\n@Injectable()\nexport class SetListViewModeCommandHandler implements CommandHandler<ListViewAggregate, SetListViewModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetListViewModeCommand> {\n\t\treturn SetListViewModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: SetListViewModeCommand): void {\n\n\t\tconst mode = command.getMode();\n\n\t\tlistViewAggregate.setMode(mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ToggleListViewSelectorCommand } from './toggle-list-view-selector.command';\nimport { ListViewAggregate } from '../../list-view.aggregate';\nimport { ListViewCommand } from '../../list-view.command';\n\n\n@Injectable()\nexport class ToggleListViewSelectorCommandHandler implements CommandHandler<ListViewAggregate, ToggleListViewSelectorCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleListViewSelectorCommand> {\n\t\treturn ToggleListViewSelectorCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: ToggleListViewSelectorCommand): void {\n\n\t\tconst enabled = command.iseEnabled();\n\n\t\tlistViewAggregate.toggleModeSelector(enabled);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from './list-view.dispatcher';\nimport { listViewKey } from '../api/list-view.api-module';\nimport { SetListViewModeCommandHandler } from './mode/set-list-view-mode.command-handler';\nimport { ToggleListViewSelectorCommandHandler } from './mode/selector/toggle-list-view-selector.command-handler';\n\n\n@NgModule({\n\timports: [],\n\tproviders: [\n\t\tListViewDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetListViewModeCommandHandler, listViewKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleListViewSelectorCommandHandler, listViewKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewModeRepository } from './list-view.mode.repository';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewModeSetEvent } from '../../domain/mode/list-view-mode-set.event';\n\n\n@Injectable()\nexport class ListViewModeSetEventHandler implements DomainEventHandler<ListViewId, ListViewModeSetEvent> {\n\n\tconstructor(private listViewModeRepository: ListViewModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewModeSetEvent> {\n\t\treturn ListViewModeSetEvent;\n\t}\n\n\thandle(event: ListViewModeSetEvent): void {\n\n\t\tif (event.ofMessageType('ListViewModeSetEvent')) {\n\t\t\tthis.listViewModeRepository.setMode(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewSelectorRepository } from './list-view.selector.repository';\n\nimport { ListViewId } from '../../list-view.id';\nimport { ListViewSelectorToggledEvent } from '../../../domain/mode/selector/list-view-selector-toggled.event';\n\n\n@Injectable()\nexport class ListViewSelectorToggledEventHandler implements DomainEventHandler<ListViewId, ListViewSelectorToggledEvent> {\n\n\tconstructor(private listViewSelectorRepository: ListViewSelectorRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewSelectorToggledEvent> {\n\t\treturn ListViewSelectorToggledEvent;\n\t}\n\n\thandle(event: ListViewSelectorToggledEvent): void {\n\n\t\tif (event.ofMessageType('ListViewSelectorToggledEvent')) {\n\t\t\tthis.listViewSelectorRepository.setMode(event.isEnabled(), event.getAggregateId());\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewAggregateFactory } from '../domain/list-view.aggregate-factory';\nimport { CreateListViewCommandHandler } from '../domain/create/create-list-view.command-handler';\nimport { InMemoryListViewAggregateRepository } from '../infrastructure/in-memory/in-memory.list-view.aggregate-repository';\nimport { ListViewCommandInvoker } from './list-view.command-invoker';\nimport { ListViewEventRepository } from './list-view.event-repository';\nimport { ListViewWarehouse } from './list-view.warehouse';\nimport { InMemoryListViewAggregateStore } from '../infrastructure/in-memory/in-memory.list-view.aggregate-store';\nimport { InMemoryListViewStore } from '../infrastructure/in-memory/in-memory.list-view.store';\nimport { ListViewDomainModule } from '../domain/list-view.domain-module';\nimport { ListViewModeRepository } from './mode/list-view.mode.repository';\nimport { ListViewModeSetEventHandler } from './mode/list-view-mode-set.event-handler';\nimport { ListViewSelectorToggledEventHandler } from './mode/selector/list-view-selector-toggled.event-handler';\nimport { ListViewSelectorRepository } from './mode/selector/list-view.selector.repository';\n\nexport const listViewKey = 'ListViewKey';\n\n@NgModule({\n\timports: [\n\n\t\tHermesModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tlistViewKey,\n\t\t\tListViewAggregateFactory,\n\t\t\tInMemoryListViewAggregateRepository,\n\t\t\tCreateListViewCommandHandler,\n\t\t\t[\n\t\t\t\t...ListViewDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewModeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewSelectorToggledEventHandler)\n\t\t\t]\n\t\t),\n\t\tListViewDomainModule\n\n\t],\n\tproviders: [\n\t\tListViewCommandInvoker,\n\t\tListViewEventRepository,\n\t\tListViewWarehouse,\n\n\t\tListViewModeRepository,\n\t\tListViewSelectorRepository,\n\n\t\tInMemoryListViewAggregateStore,\n\t\tInMemoryListViewStore\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewApiModule {\n}\n","import { OnDestroy } from '@angular/core';\n\nimport { NgChanges } from './ng-changes';\nimport { StreamCloser } from '../reactive/stream-closer';\n\nexport abstract class Gate<T = any> implements OnDestroy {\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tisDefined(propertyName: string, changes: NgChanges<T>): boolean {\n\t\treturn changes[propertyName] !== undefined && changes[propertyName].currentValue !== undefined;\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { PagingConfig } from '../../core/api/paging-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingCommandInvoker } from '../../core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../core/api/paging.event-repository';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class PagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\t\t\t  protected readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[paging]'\n})\nexport class ListViewPagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository) {\n\t\tsuper(structureId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewCommandInvoker } from '../../../core/api/list-view.command-invoker';\nimport { ListViewReadModelRootId } from '../../../core/api/read/list-view.read-model-root-id';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewModeGate extends Gate implements OnChanges {\n\n\t@Input()\n\tmode: ListViewMode;\n\n\t@Input()\n\tmodeSelector: boolean;\n\n\tconstructor(public readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewCommandDispatcher: ListViewCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewModeGate>) {\n\n\t\tif (this.isDefined('mode', changes)) {\n\t\t\tthis.listViewCommandDispatcher.setMode(this.mode, this.listViewReadModelRootId);\n\t\t}\n\n\t\tif (this.isDefined('modeSelector', changes)) {\n\t\t\tthis.listViewCommandDispatcher.toggleSelector(this.modeSelector, this.listViewReadModelRootId);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ListViewTemplateArchive } from '../../source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from '../../card/template/list-view.card-template.archive';\nimport { ListViewTemplate } from '../../source/template/list-view-template';\nimport { ListViewCardTemplate } from '../../card/template/list-view.card-template';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewTemplateGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\t@Input()\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly containerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewTemplateGate>) {\n\n\t\tif (this.isDefined('template', changes)) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\tif (this.isDefined('cardTemplate', changes)) {\n\t\t\tthis.listCardTemplateArchive.next(this.cardTemplate);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldCommandInvoker } from '../../../../field/core/api/field.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[fields]'\n})\nexport class ListViewFieldGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfields: Array<FieldConfig>;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldCommandDispatcher: FieldCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewFieldGate>) {\n\n\t\tif (this.isDefined('fields', changes)) {\n\n\t\t\tthis.fieldCommandDispatcher.initFields(this.fields, this.structureId);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from '../../core/api/search-config';\nimport { SearchEventRepository } from '../../core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../core/api/search.command-invoker';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly searchEventRepository: SearchEventRepository,\n\t\t\t\t\t\t  protected readonly searchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SearchingGate>) {\n\n\t\tif (this.isDefined('searching', changes)) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandInvoker.setSearchingConfig(searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[searching]'\n})\nexport class ListViewSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiListLocalization } from '../../../../../gui/list/core/api/gui.list.public-api';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[localization]'\n})\nexport class ListViewL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiListLocalization;\n\n\tconstructor(private readonly translationService: TranslationService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { EditemItemValues } from '../../core/api/event/editem-item.values';\nimport { SourceCommandInvoker } from '../../core/api/source.command-invoker';\nimport { SourceEventService } from '../../core/api/event/source-event.service';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SourceGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\titems: Array<any> = [];\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly sourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\t\t\t  protected readonly sourceEventService: SourceEventService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SourceGate>) {\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (this.isDefined('source', changes)) {\n\t\t\tthis.sourceCommandInvoker.setOrigin(this.source);\n\t\t}\n\n\t\tif (this.isDefined('items', changes)) {\n\t\t\tthis.sourceCommandInvoker.setOrigin(this.items);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { SourceGate } from '../../../../source/feature/gate/source.gate';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../../source/core/api/event/source-event.service';\n\n\n@Directive({\n\tselector: 'gui-list-view[items]'\n})\nexport class ListViewSourceGate extends SourceGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprotected readonly sourceCommandService: SourceCommandInvoker,\n\t\t\t\tprotected readonly sourceEventService: SourceEventService) {\n\t\tsuper(structureId, sourceCommandService, sourceEventService);\n\t}\n\n}\n","import { ListViewPagingGate } from './paging/list-view-paging.gate';\nimport { ListViewModeGate } from './mode/list-view-mode.gate';\nimport { ListViewTemplateGate } from './template/list-view-template.gate';\nimport { ListViewFieldGate } from './field/list-view-field.gate';\nimport { ListViewSearchingGate } from './searching/list-view-searching.gate';\nimport { ListViewL10nGate } from './l10n/list-view-l10n.gate';\nimport { ListViewSourceGate } from './source/list-view-source.gate';\n\nexport const listViewGatewayDeclarations = [\n\tListViewPagingGate,\n\tListViewModeGate,\n\tListViewTemplateGate,\n\tListViewFieldGate,\n\tListViewSearchingGate,\n\tListViewL10nGate,\n\tListViewSourceGate\n];\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-sorting-selector]',\n\ttemplate: `\n\n\t\t<gui-select (optionChanged)=\"changeSorting($event)\"\n\t\t\t\t\t[options]=\"sortingOptions\"\n\t\t\t\t\t[selected]=\"selectedSorting\"\n\t\t\t\t\t[width]=\"200\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SortingSelectorComponent extends SmartComponent {\n\n\tsortingOptions = [\n\t\t'Name: A-Z',\n\t\t'Name: Z-A',\n\t\t'Price: Low to High',\n\t\t'Price: High to Low',\n\t\t'None'\n\t];\n\n\tselectedSorting = this.sortingOptions[0];\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tchangeSorting(sorting: string) {\n\t\tconsole.log(sorting);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-sorting-selector';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { SortingSelectorComponent } from './sorting-selector.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricSelectModule\n\t],\n\tdeclarations: [\n\t\tSortingSelectorComponent\n\t],\n\texports: [\n\t\tSortingSelectorComponent\n\t]\n})\nexport class SortingSelectorFeatureModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n@Component({\n\tselector: 'div[gui-filter-icon]',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class QuickFilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeRepository extends AggregateArchive<FilterTypeMap> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterRepository extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesRepository extends AggregateArchive<UniqueValuesReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledRepository,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledRepository,\n\t\t\t\tprivate readonly filterTypeRepository: FilterTypeRepository,\n\t\t\t\tprivate readonly uniqueValuesRepository: UniqueValuesRepository,\n\t\t\t\tprivate readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.onFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.onQuickFilterEnabled(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): Observable<FilterTypeMap> {\n\t\treturn this.filterTypeRepository.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): Observable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterRepository.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): Observable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\n\n\n@Component({\n\tselector: 'div[gui-filter-menu]',\n\ttemplateUrl: './filter-menu.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilterTypes(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.fieldWarehouse\n\t\t\t.onFields(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { filterContainerToken } from '../../core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../core/api/config/filter-container-ref';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-filter-menu-trigger]',\n\ttemplateUrl: './filter-menu-trigger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstyleUrls: [\n\t\t'../style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-trigger';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-column-selector][columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent extends PureComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-selector';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-filter-type-selector][filterTypes]',\n\ttemplateUrl: `./filter-type-selector.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-type-selector';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tOutput,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-filter-value]',\n\ttemplateUrl: './filter-value.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterValueComponent extends SmartComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly formBuilder: FormBuilder) {\n\t\tsuper(detector, elementRef);\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-value';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../../field/core/api/read/field.read-model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-field-selector][fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-field-selector';\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (let fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (let filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (let filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledRepository } from './quick-filter-enabled.repository';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './filter-enabled.repository';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: FilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FilterTypeRepository } from './filter-type.repository';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeRepository: FilterTypeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeRepository.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterRepository } from './active-filter.repository';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tlet activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (let key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesRepository } from './unique-values.repository';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tlet uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tlet uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeRepository,\n\t\tActiveFilterRepository,\n\t\tUniqueValuesRepository,\n\t\tFilterEnabledRepository,\n\t\tQuickFilterEnabledRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-active-filter-list]',\n\ttemplateUrl: './active-filter-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-filter-list';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'div[gui-active-search]',\n\ttemplateUrl: './active-search.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-search';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\nimport { ActiveFilterListComponent } from './active-filter-list.component';\nimport { ActiveSearchComponent } from './search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tActiveFilterListComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tActiveFilterListComponent\n\t]\n})\nexport class ActiveFilterListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './value/filter-value.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { ActiveFilterListModule } from '../active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule,\n\t\tFilterApiModule,\n\t\tActiveFilterListModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tFieldSelectorComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { ListViewComponent } from './list-view.component';\nimport { ListViewSourceComponent } from './source/list-view-source.component';\nimport { ListViewLayoutComponent } from './layout/list-view-layout.component';\nimport { ListViewItemComponent } from './source/list-item/list-view-item.component';\n\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { EmptySourceFeatureModule } from '../../source/feature/empty/empty-source.feature-module';\nimport { ListViewContainerCardComponent } from './card/list-view.container-card.component';\nimport { ListViewCardItemComponent } from './card/card-item/list-view.card-item.component';\nimport { ListViewContainerModeSelectComponent } from './container/select/list-view.container-mode-select.component';\nimport { ListViewApiModule } from '../core/api/list-view.api-module';\nimport { listViewGatewayDeclarations } from './gateway/list-view.gates';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { SortingSelectorFeatureModule } from '../../sorting/feature/selector/sorting-selector.feature-module';\nimport { FilterMenuFeatureModule } from '../../filter/feature/menu/filter-menu.feature-module';\n\nconst exportDeclarations = [\n\tListViewComponent,\n\tlistViewGatewayDeclarations,\n\t...listViewGatewayDeclarations\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewApiModule,\n\n\t\tFabricSelectModule,\n\t\tPagingFeatureModule,\n\t\tSearchFeatureModule,\n\t\tEmptySourceFeatureModule,\n\t\tSortingSelectorFeatureModule,\n\t\tFilterMenuFeatureModule\n\t],\n\tdeclarations: [\n\t\tListViewComponent,\n\t\tListViewItemComponent,\n\t\tListViewLayoutComponent,\n\t\tListViewSourceComponent,\n\n\t\tListViewContainerCardComponent,\n\t\tListViewCardItemComponent,\n\t\tListViewContainerModeSelectComponent,\n\n\t\t...listViewGatewayDeclarations\n\t],\n\texports: exportDeclarations,\n\tproviders: []\n})\nexport class ListViewFeatureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tconstructor(private readonly paging: PagingFeatureModule) {\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StaticComponent } from '../../../../../../common/cdk/component/static-component';\n\n@Component({\n\tselector: 'div[gui-info-dialog]',\n\ttemplateUrl: `./structure-info-modal.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoModalComponent extends StaticComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-info-dialog';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-dialog-column-manager]',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogColumnManagerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-dialog-column-manager';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaWarehouse\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-schema-manager-dialog]',\n\ttemplate: `\n\t\t<div gui-structure-schema-manager></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogSchemaManagerComponent extends PureComponent {\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-pr-10');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-schema-manager-dialog';\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../../../core/domain-read/schema.read-model-root-id';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\tinjector: injector\n\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-panel]',\n\ttemplateUrl: './structure.info-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager]',\n\ttemplate: `\n\n\t\t<ol class=\"gui-p-0 gui-my-4 gui-mx-0 gui-list-none gui-overflow-auto\">\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\"\n\t\t\t\tclass=\"gui-p-6 gui-cursor-pointer\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionWarehouse\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandInvoker.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandInvoker.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-menu-column-manager]',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureMenuColumnManagerComponent extends PureComponent {\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-menu-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-icon';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/domain-read/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring';\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager]',\n\ttemplateUrl: `./structure.schema-manger.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends SmartComponent implements OnInit {\n\n\tcoloring: Array<GuiSelectOption> = Object.keys(SchemaRowColoring)\n\t\t\t\t\t\t\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t\t\t\t\t\t\t .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t\t value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t name: value\n\t\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t\t });\n\n\tthemes: Array<GuiSelectOption> = Object.keys(SchemaTheme)\n\t\t\t\t\t\t\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t\t\t\t\t\t\t   .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t   .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t\t\t   value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t   name: value\n\t\t\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t\t\t   });\n\n\tselectedRowColoring: GuiSelectOption;\n\n\tselectedTheme: GuiSelectOption;\n\n\tverticalGrid: boolean;\n\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandService: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaReadModelService: SchemaWarehouse) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaReadModelService\n\t\t\t.onRowColoring(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = {\n\t\t\t\t\tvalue: SchemaRowColoring[rowColoring],\n\t\t\t\t\tname: SchemaRowColoring[rowColoring]\n\t\t\t\t};\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = {\n\t\t\t\t\tvalue: SchemaTheme[schemaTheme],\n\t\t\t\t\tname: SchemaTheme[schemaTheme]\n\t\t\t\t};\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onVerticalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHorizontalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleTheme(theme: GuiSelectOption): void {\n\t\tthis.schemaCommandService.setTheme(this.toTheme(theme.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: GuiSelectOption): void {\n\t\tthis.schemaCommandService.setRowColoring(this.toRowColoring(schemaRowColoring.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandService.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandService.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager-icon]',\n\ttemplateUrl: `./structure.schema-manager-icon.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSchemaManagerIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\n\t\t<h3>Active filters</h3>\n\n\t\t<div gui-active-filter-list></div>\n\n\t\t<div>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { ActiveFilterListModule } from '../../../filter/feature/active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\t\tActiveFilterListModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source/feature/counter/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueValuesReadModel } from '../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { switchMap } from 'rxjs/operators';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'gui-column-config',\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [dropdownTextTranslation]=\"dropdownTextTranslation\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t\t<div gui-unique-value-list\n\t\t\t\t\t\t\t [fieldId]=\"column.getFieldId()\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<div gui-structure-menu-column-manager>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tswitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\tthis.config = config;\n\t\t\t\t\treturn this.translationService.onTranslation();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-config';\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, FabricPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\t\tthis.close();\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: FabricPlacement.BOTTOM,\n\t\t\t\t\toffset: -34,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-columns][columns]',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-columns';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tInput,\n\tOnInit,\n\tOutput,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-filters][columns]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell gui-flex gui-justify-between\n\\t gui-overflow-hidden gui-relative gui-py-0 gui-px-6 gui-box-border\n\\t gui-leading-4 gui-whitespace-nowrap gui-overflow-ellipsis\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent extends PureComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn '';\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-header]',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean = false;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.styleModifier = new StyleModifier(elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.containerRef.nativeElement).setWidth(width);\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onGroups(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((collection: GroupCollection) => {\n\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.styleModifier.getElement(this.filtersRef.nativeElement).setHeight(headerHeight);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header';\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-filter';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchPhraseRepository } from '../../../search/core/api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../search/core/api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\n\n\n@Component({\n\tselector: 'div[gui-structure-content]',\n\ttemplateUrl: `./structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.reRender();\n\t\t });\n\n\t\tthis.schemaRowClassArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.schemaRowStyleArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-content';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { StyleModifier } from '../../../../../common/cdk/dom/style/style-modifier';\nimport { ClassModifier } from '../../../../../common/cdk/dom/class/class-modifier';\nimport { CssClassModifier } from '../../../../shared/css-class/css-class.modifier';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-structure-row]',\n\ttemplateUrl: `./structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t\tthis.classModifier = new ClassModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowComponent>) {\n\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t\tthis.updateRowClass(changes.entity.previousValue);\n\t\t\tthis.updateRowStyle(changes.entity.previousValue);\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calculateRowStyle(entity: ItemEntity): string {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\t\t\treturn this.rowStyle.style || '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\t\t\treturn this.rowStyle.styleFunction(entity.getData(), entity.getPosition());\n\t\t}\n\t}\n\n\tprivate updateRowStyle(prevEntity?: ItemEntity) {\n\n\t\tif (prevEntity) {\n\t\t\tconst rowStylesToRemove = this.calculateRowStyle(prevEntity);\n\n\t\t\tthis.removeRowStyles(rowStylesToRemove);\n\t\t}\n\n\t\tconst rowStylesToAdd = this.calculateRowStyle(this.entity);\n\n\t\tthis.renderRowStyles(rowStylesToAdd);\n\t}\n\n\tprivate removeRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().removeStyleByName(separatedStyles[0].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().setStyleByName(separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowClass(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst toRemoveClass = this.calculateRowClass(prevEntity);\n\n\t\t\tif (toRemoveClass) {\n\t\t\t\tthis.classModifier.getHost().remove(toRemoveClass);\n\t\t\t}\n\t\t}\n\n\t\tconst toAddClass = this.calculateRowClass(this.entity);\n\n\t\tif (toAddClass) {\n\t\t\tthis.classModifier.getHost().add(toAddClass);\n\t\t}\n\t}\n\n\tprivate calculateRowClass(entity: ItemEntity): string {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(entity.getData(), entity.getPosition()) || '';\n\t\t\t}\n\t\t}\n\n\t\treturn clazz;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-row';\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getData());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getData());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'div[gui-structure-cell][entity][cell]',\n\ttemplateUrl: `./structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell';\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/schema-row-coloring';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-container]',\n\ttemplateUrl: `./structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tconsole.log(containerHeight)\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceWarehouse.onEntities(),\n\t\t\tthis.compositionWarehouse.onTemplateColumns()\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setWidth(width);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onScrollBarPosition()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((scrollPosition: number) => {\n\n\t\t\t\tthis.elRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.styleModifier.getHost().setHeight(height);\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setPaddingTop(topMargin);\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setHeight(sourceHeight);\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandInvoker.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-container';\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'div[gui-structure-quick-filters]',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\n\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { StructureBannerPanelConfig } from '../panel/banner-panels/structure-banner-panel.config';\n\n\n@Component({\n\tselector: 'div[gui-structure-blueprint]',\n\ttemplateUrl: `./structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tprivate pagingReadModel: Paging;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.filterWarehouse\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-blueprint';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../api/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(aggregateId: AggregateId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(aggregateId.getId());\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../api/structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from '../api/structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.api';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (let value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (let entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (let field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (let notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tlet map = new Map();\n\n\t\tfor (let field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from '../api/structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SummariesManager } from '../../domain/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../summaries/core/api/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\tStructureCommandDispatcher\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-top-panel]',\n\ttemplate: `\n\n\t\t<div gui-search-bar\n\t\t\t class=\"gui-flex gui-items-center gui-h-full gui-w-3/5 gui-mr-auto\"></div>\n\t\t<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-p-6');\n\t\tthis.addClassToHost('gui-border-b');\n\t\tthis.addClassToHost('gui-border-b-solid');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-top-panel';\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/menu/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-trigger';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"dropdownTextTranslation\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortAscending' | guiTranslate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortDescending' | guiTranslate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\t{{'headerMenuMainTabColumnSortNone' | guiTranslate}}\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-sort';\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\t{{'headerMenuMainTabHideColumn' | guiTranslate}}\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\t{{'headerMenuMainTabMoveLeft' | guiTranslate}}\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\t{{'headerMenuMainTabMoveRight' | guiTranslate}}\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-icon',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-arrow-icon',\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuArrowIconComponent extends PureComponent {\n\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-arrow-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'div[gui-unique-value-list][fieldId]',\n\ttemplateUrl: './unique-value-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'../style/unique-value-list.ngx.scss'\n\t]\n})\nexport class UniqueValueListComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandDispatcher.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandDispatcher.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-unique-value-list';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): Observable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../../summaries/core/api/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../../summaries/core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from './structure.summaries-translations';\n\n\n@Component({\n\tselector: 'div[gui-structure-summaries-panel][enabled]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.countTooltip\">{{'summariesCount' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.distinctTooltip\">{{'summariesDist' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\t{{'summariesSum' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.averageTooltip\">{{'summariesAvg' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.minTooltip\">\n\t\t\t\t\t\t\t{{'summariesMin' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.maxTooltip\">\n\t\t\t\t\t\t\t{{'summariesMax' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.medTooltip\">{{'summariesMed' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesTruthy' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesFalsy' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-summaries-panel';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit-boolean][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditBooleanComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit-boolean';\n\t}\n\n}\n","import { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\nimport { StructureBannerPanelConfig } from './structure-banner-panel.config';\nimport { Observable } from 'rxjs';\n\nexport abstract class StructureBannerPanel extends SmartComponent implements OnInit {\n\n\tbannerPanel: string | (() => string);\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.getBannerPanelConfig()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: StructureBannerPanelConfig) => {\n\n\t\t\t\tthis.bannerPanel = title.template;\n\n\t\t\t\tif (typeof this.bannerPanel === 'function') {\n\t\t\t\t\tthis.bannerPanel = this.bannerPanel();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getBannerPanelConfig(): Observable<StructureBannerPanelConfig>\n\n\tabstract getSelectorName(): string\n\n\tabstract getPanelTitle(): string\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { Observable } from 'rxjs';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\n@Component({\n\tselector: 'div[gui-structure-title-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-title-panel gui-p-6 gui-border-b gui-border-b-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tgetBannerPanelConfig(): Observable<StructureBannerPanelConfig> {\n\t\treturn this.structureTitlePanelConfigArchive.onValue();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-title-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Title panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'div[gui-structure-footer-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-footer-panel gui-p-6 gui-border-t gui-border-t-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tgetBannerPanelConfig(): Observable<StructureBannerPanelConfig> {\n\t\treturn this.structureFooterPanelConfigArchive.onValue();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-footer-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Footer panel';\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandInvoker) {\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureThemeGateway>): void {\n\n\t\tif (changes.theme2 !== undefined && changes.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'gui-select-all',\n\ttemplate: `\n\n\t\t<gui-checkbox *ngIf=\"modeMulti\"\n\t\t\t\t\t  [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  [gui-tooltip]=\"'Select'\"\n\t\t\t\t\t  (changed)=\"toggleSelectAll()\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SelectAllComponent extends SmartComponent implements OnInit {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onMode(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-select-all';\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../domain/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.api';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from '../api/enabled/structure.summaries-enabled-set.event-handler';\nimport { summariesProviders } from './summaries.providers';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...summariesProviders\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSummariesCommandDispatcher } from './structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './structure-summaries.ui-events-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\nimport { StructureSummariesWarehouse } from './structure-summaries.warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\tStructureSummariesCommandDispatcher,\n\t\tStructureSummariesUiEventsRepository,\n\n\t\tStructureSummariesRepository,\n\t\tStructureSummariesWarehouse\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t\tsuper();\n\t\tif (summariesApiModule === null) {\n\t\t\tthrow new Error('SummariesApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionRepository } from './vertical-formation.scroll-bar-position.repository';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.api';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureVerticalFormationWarehouse } from './structure-vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\tStructureVerticalFormationWarehouse,\n\t\tVerticalFormationScrollBarPositionRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t\tsuper();\n\t\tif (verticalFormationApiModule === null) {\n\t\t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t\t}\n\t}\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../api/composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../../api/composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../../api/composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionReadModelRootId } from '../../../domain-read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../../api/composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from '../api/composition.api';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from './composition.api';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport {\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\t...inMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupRepository,\n\n\t\tCompositionCommandInvoker,\n\t\tCompositionWarehouse,\n\t\tCompositionEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ChangeDetectorRef, ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: NgChanges<InputEditTemplateComponent<any>>) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-string-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-number-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-boolean-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { StreamCloser } from '../../../../../common/cdk/reactive/stream-closer';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-date-edit';\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column[header]',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { CellValue } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div class=\"gui-h-full gui-flex gui-items-center\"\n\t\t\t [innerHTML]=\"safeHTML\">\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent extends PureComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private readonly sanitizer: DomSanitizer,\n\t\t\t\tprivate readonly elRef: ElementRef) {\n\t\tsuper(elRef);\n\n\t\tthis.addClassToHost('gui-h-full');\n\t\tthis.addClassToHost('gui-w-full');\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-function-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<BarViewComponent>) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-bar-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-percentage-view';\n\t}\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\t\tsuper(elementRef);\n\n\t\tif (isBold !== null) {\n\t\t\tthis.addClassToHost('gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.addClassToHost('gui-italic');\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-text-view';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column/column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\t...components\n\t],\n\texports: [\n\t\t...exportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t\tsuper();\n\t\tif (compositionApiModule === null) {\n\t\t\tthrow new Error('CompositionApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-groups][groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent extends PureComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-groups';\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[searching]'\n})\nexport class StructureSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureHeaderTopEnabledArchive } from '../../../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../../../header/structure-header-bottom-enabled.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]'\n})\nexport class StructureColumnHeaderGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\tconstructor(private readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnHeaderGate>) {\n\n\t\tif (this.isDefined('columnHeaderTop', changes)) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (this.isDefined('columnHeaderBottom', changes)) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { PagingDisplayModeArchive } from '../../../../paging/feature/mode/paging-display-mode.archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[paging]'\n})\nexport class StructurePagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(structureId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n\t@Override\n\tngOnChanges(changes: NgChanges<StructurePagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.pagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { RowSelection } from '../../core/api/row-selection';\nimport { SelectedRow } from '../../core/api/formation/selected-row';\nimport { FormationEventRepository } from '../../core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../core/api/formation/type/row-selection-type.archive';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\nexport abstract class SelectionGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly formationEventService: FormationEventRepository,\n\t\t\t\t\t\t  protected readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\t\t\t  protected readonly rowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SelectionGate>) {\n\n\t\tif (this.isDefined('rowSelection', changes)) {\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getData()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectionGate } from '../../../../source/feature/gate/selection.gate';\nimport { FormationEventRepository } from '../../../../source/core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Directive({\n\tselector: 'gui-structure[rowSelection], gui-structure[selectionGate]'\n})\nexport class StructureSelectionGate extends SelectionGate {\n\n\t@Input()\n\tselectionGate: void;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper(structureId, formationEventService, formationCommandDispatcher, rowSelectionTypeArchive);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiLocalization } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[localization]'\n})\nexport class StructureL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\tconstructor(private readonly translationService: TranslationService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { StructureTitlePanelConfigArchive } from '../../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureBannerPanelConfig } from '../../panel/banner-panels/structure-banner-panel.config';\n\n@Directive({\n\tselector: 'gui-structure[titlePanel][footerPanel]'\n})\nexport class StructurePanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttitlePanel: StructureBannerPanelConfig;\n\n\t@Input()\n\tfooterPanel: StructureBannerPanelConfig;\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructurePanelGate>) {\n\n\t\tif (this.isDefined('titlePanel', changes)) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (this.isDefined('footerPanel', changes)) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { RowDetailConfig } from '../../../row-detail/row-detail.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureRowDetailConfigArchive } from '../../../row-detail/structure.row-detail.config-archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowDetail]'\n})\nexport class StructureRowDetailGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\tconstructor(private readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowDetailGate>) {\n\n\t\tif (this.isDefined('rowDetail', changes)) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../../../header/menu/config/structure.column-menu-config.archive';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnMenu]'\n})\nexport class StructureColumnMenuGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\tconstructor(private readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnMenuGate>) {\n\n\t\tif (this.isDefined('columnMenu', changes)) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\nimport { StructureSummariesConfigService } from '../../panel/summaries/structure.summaries-config.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[summaries]'\n})\nexport class StructureSummariesGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\tconstructor(private readonly structureSummariesConfigService: StructureSummariesConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSummariesGate>) {\n\n\t\tif (this.isDefined('summaries', changes)) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { InfoPanelConfig } from '../../../panel/info/info-panel.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureInfoPanelConfigService } from '../../../panel/info/structure.info-panel-config.service';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[infoPanel]'\n})\nexport class StructureInfoPanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\tconstructor(protected readonly structureInfoPanelConfigService: StructureInfoPanelConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureInfoPanelGate>) {\n\n\t\tif (this.isDefined('infoPanel', changes)) {\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowClass } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowClass } from '../../../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowClassArchive } from '../../../../../../schema/core/api/styling/schema.row-class.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowClass]'\n})\nexport class StructureRowClassGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\tconstructor(private readonly schemaRowClassArchive: SchemaRowClassArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowClassGate>) {\n\n\t\tif (this.isDefined('rowClass', changes)) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring';\nimport { SchemaRowColoring } from '../../../../../../schema/core/api/schema-row-coloring';\nimport { SchemaCommandInvoker } from '../../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StreamCloser } from '../../../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowColoring]'\n})\nexport class StructureRowColoringGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowColoringGate>) {\n\n\t\tif (this.isDefined('rowColoring', changes)) {\n\t\t\tthis.schemaCommandInvoker.setRowColoring(this.rowColoring);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowStyle } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowStyle } from '../../../../../../schema/core/api/styling/schema.row-style';\nimport { SchemaRowStyleArchive } from '../../../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowStyle]'\n})\nexport class StructureRowStyleGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\tconstructor(private readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowStyleGate>) {\n\n\t\tif (this.isDefined('rowStyle', changes)) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\t}\n\n}\n","import { StructureSearchingGate } from './searching/structure-searching.gate';\nimport { StructureColumnHeaderGate } from './column/header/structure-column-header.gate';\nimport { StructurePagingGate } from './paging/structure-paging.gate';\nimport { StructureSelectionGate } from './source/structure-selection.gate';\nimport { StructureL10nGate } from './l10n/structure-l10n.gate';\nimport { StructurePanelGate } from './panel/structure-panel.gate';\nimport { StructureRowDetailGate } from './row/detail/structure-row-detail.gate';\nimport { StructureColumnMenuGate } from './column/menu/structure-column-menu.gate';\nimport { StructureSummariesGate } from './summaries/structure-summaries.gate';\nimport { StructureInfoPanelGate } from './panel/info/structure-info-panel.gate';\nimport { StructureRowClassGate } from './row/class/structure-row-class.gate';\nimport { StructureRowColoringGate } from './row/coloring/structure-row-coloring.gate';\nimport { StructureRowStyleGate } from './row/style/structure-row-style.gate';\n\nexport const structureGates = [\n\tStructureColumnHeaderGate,\n\tStructurePagingGate,\n\tStructureSearchingGate,\n\t// StructureSourceGate,\n\tStructureSelectionGate,\n\tStructureL10nGate,\n\tStructurePanelGate,\n\tStructureRowDetailGate,\n\tStructureColumnMenuGate,\n\tStructureSummariesGate,\n\tStructureInfoPanelGate,\n\tStructureRowClassGate,\n\tStructureRowStyleGate,\n\tStructureRowColoringGate\n];\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModifier } from './css-class.modifier';\n\n@NgModule({\n\tproviders: [\n\t\tCssClassModifier\n\t]\n})\nexport class CssClassModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModule } from './css-class/css-class.module';\n\n\n@NgModule({\n\timports: [\n\t\tCssClassModule\n\t]\n})\nexport class StructureSharedModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/banner-panels/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../source/feature/empty/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { StructureThemeGateway } from '../../feature/gate/schema/structure-theme.gateway';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.api';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\nimport { structureGates } from '../../feature/gate/structure.gates';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { SourceFeatureModule } from '../../../source/feature/source.feature-module';\nimport { StructureSharedModule } from '../../../shared/structure-shared.module';\nimport { SanitizeModule } from '../../../../common/cdk/sanitize/sanitize.module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...SummariesDomainModule.commandHandlers(),\n\t\t\t...VerticalFormationDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers(),\n\t\t\t...SummariesDomainModule.domainEventHandlers(),\n\t\t\t...FieldDomainModule.domainEventHandlers(),\n\t\t\t...VerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tFilterMenuFeatureModule,\n\tSourceFeatureModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureSharedModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule,\n\tSanitizeModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway,\n\n\t...structureGates\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule,\n\t...structureGates\n];\n\n@NgModule({\n\timports: [\n\t\timports\n\t],\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tprivate static readonly HERMES_API = 'hermesApi';\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow[StructureModule.HERMES_API].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../../feature/gui.list.component';\n\nimport { ListViewFeatureModule } from '../../../../structure/list/feature/list-view.feature-module';\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\nimport { GuiListItemComponent } from '../../feature/item/gui.list-item.component';\nimport { GuiListCardComponent } from '../../feature/card/gui.list-card.component';\n\nconst imports = [\n\tCommonModule,\n\tListViewFeatureModule,\n\tStructureModule.withConfig({\n\t\tcssClassName: 'list',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiListComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewFeatureModule,\n\t\tStructureModule.withConfig({\n\t\t\tcssClassName: 'list',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n\t]\n\t// declarations,\n\t// exports: exportDeclarations,\n\t// entryComponents\n})\nexport class GuiListWithGridModule {\n}\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n"]}