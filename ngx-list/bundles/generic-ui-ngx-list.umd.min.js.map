{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/gui/list/feature/paging/gui-list.paging.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/card/gui.list-card.component.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode.ts","ng://@generic-ui/ngx-list/gui/list/domain-api/gui.list.api.ts","ng://@generic-ui/ngx-list/gui/list/feature/mode/gui-list.mode.converter.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view.gateway.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-definition.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.global-id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.global-id.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/structure/paging/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.manager.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/reactive.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/structure-formation.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/read/formation-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/structure-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/field.ui-archive.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/field.ui-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/structure-source.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/field/domain/data-type/field.id.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-list/structure/search/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/schema.id.ts","ng://@generic-ui/ngx-list/schema/domain-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/schema/domain-api/read/schema.global-id.ts","ng://@generic-ui/ngx-list/schema/domain-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-list/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-list/schema/domain-api/row-coloring.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/read/formation.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/read/formation.converter.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/source.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/source.converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/feature-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/structure/search/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/local-providers.ts","ng://@generic-ui/ngx-list/lib/structure/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/common/cdk/smart-component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/lib/structure/feature/gateway/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.domain-module.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.api-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-list/common/cdk/pure-component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.warehouse.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.event-repository.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.api-module.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-list/structure/search/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-list/structure/search/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/structure/search/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/domain/data-type/data-type.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.manager.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.manager-factory.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/enabled/searching.repository.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.domain-module.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.api-module.ts","ng://@generic-ui/ngx-list/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/field.ui-model.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/field.ui-converter.ts","ng://@generic-ui/ngx-list/structure/field/domain/field-id.generator.ts","ng://@generic-ui/ngx-list/structure/field/domain/data-type/base.field.ts","ng://@generic-ui/ngx-list/structure/field/domain/data-type/field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-list/structure/field/domain/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/data-type/fields/number-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/data-type/fields/string-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/data-type/fields/date-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/structure/field/domain/data-type/field.factory.ts","ng://@generic-ui/ngx-list/structure/field/domain/data-type/type.field.ts","ng://@generic-ui/ngx-list/structure/field/domain/field.collection.ts","ng://@generic-ui/ngx-list/structure/field/domain/field-collection.factory.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/domain/field.domain-module.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/field.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/field.api-module.ts","ng://@generic-ui/ngx-list/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.providers.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.id.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/read/list-view.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/create-list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/set-list-view-mode.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/toggle-list-view-selector.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/read/list-view.global-id.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-view-source.component.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/list-view.mode.repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/selector/list-view.selector.repository.ts","ng://@generic-ui/ngx-list/structure/list/feature/layout/list-view-layout.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-item/list-view-item.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/list-view.container-card.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/card-item/list-view.card-item.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container/select/list-view.container-mode-select.component.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/list-view-created.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/list-view-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/selector-visibility.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/list-view-selector-toggled.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/list-view-selector-toggled.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/create-list-view.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.store.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.event-repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.warehouse.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/set-list-view-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/toggle-list-view-selector.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.domain-module.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/list-view-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/selector/list-view-selector-toggled.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/paging/list-view-paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/mode/list-view-mode.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/template/list-view-template.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/field/list-view-field.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/searching/list-view-searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view-gateway.declarations.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.feature-module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/template/template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.providers.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/read/structure.filter.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/read/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/structure-filter.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure-tokens.ts","ng://@generic-ui/ngx-list/lib/structure/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/feature-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/read/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/read/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/structure.sorter.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/sorter.id.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/sorter.collection.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/formation.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/source.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/icon/structure.filter-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/column-selector/structure.column-selector.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/horizontal-grid/schema.horizontal-grid-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/row-coloring/schema.row-coloring-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/gateway/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/domain-api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","BASIC","ADVANCED","GuiListPagingConverter","convert","guiListPaging","pagingConfig","undefined","enabled","page","pageSize","pageSizes","pagerTop","pagerBottom","displayMode","PagingDisplayMode","GuiListCardComponent","LIST","CARD","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","GuiListModeConverter","mode","GuiListMode","ListViewMode","ListViewCardTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","ListViewTemplate","GuiListGateway","pageChanged","EventEmitter","pageSizeChanged","searchPhraseChanged","guiListPagingConverter","guiListModeConverter","ngOnChanges","changes","templateRef","listItem","containerTemplate","cardTemplateRef","listCard","listCardTemplate","cardTemplate","paging","currentValue","view","active","listViewMode","listViewModeSelector","fields","listFields","map","f","field","type","searching","searchConfig","Input","Output","guiListProviders","GuiListComponent","platformId","_this","_super","tslib_1.__extends","onPageChange","emit","onPageSizeChange","onSearchPhraseChange","phrase","providers","host","[class.gui-list]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ListViewGateway","structureId","sourceCommandService","simpleChanges","items","setOrigin","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","StructureIdGenerator","increment","generateId","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","PagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","CompositionReadModelRootId","CompositionId","CreateCompositionCommand","compositionId","Command","SetColumnsCommand","columns","getParams","SetCompositionWidthCommand","width","getWidth","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","commandDispatcher","createComposition","dispatch","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","Injectable","CommandDispatcher","compositionGlobalId","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","SetPagingCommand","config","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","setPaging","changePageSize","nextPage","prevPage","structureGlobalId","PagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","Override","container","getPrototypeOf","Error","name","PageChangedEvent","aggregateId","DomainEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","AggregateEvent","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","sourceSize","logger","events","default","fromConfig","defaultPagingDefinition","getPage","getPageSizes","isPagerTop","isPagerBottom","isDisabled","getSourceSize","change","warn","setSourceSize","size","isNextPageDisabled","isPrevPageDisabled","find","ps","setPage","setPageSize","Math","ceil","calculateStart","firstItem","calculateEnd","lastItem","sample","source","start","slice","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","LocalPagingWarehouse","Observable","SetFormationCommand","payload","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","StructureFormationDispatcher","formationDispatcher","setDefaultFormation","LocalFormationCommandDispatcher","FormationRepository","onFormation","getFormation","StructureFormationWarehouse","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationWarehouse","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","fieldId","externalFilterId","filterValue","getFieldId","getExternalFilterId","getFilterValue","StructureFilterCommandDispatcher","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","StructureSetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","theme","getTheme","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","LocalStructureCommandDispatcher","StructureWarehouse","LocalStructureWarehouse","FieldUiArchive","AggregateArchive","FieldUiRepository","structureFieldUiArchive","onFields","StructureSourceOriginRepository","origin","Map","origin$","ReplaySubject","set","onOrigin","asObservable","get","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","StructureSourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","forEach","ent","index","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","StructureEditSourceItemParams","itemId","columnFieldId","getItemId","getColumnFieldId","getValue","SourceCommandDispatcher","structureFieldUiRepository","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandDispatcher","LocalSourceWarehouse","ColumnDefinitionId","ReadModelEntityId","LocalCompositionCommandDispatcher","columnDefId","CompositionReadModelRootRepository","ReadModelRootRepository","CompositionWarehouse","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","FieldId","LocalCompositionWarehouse","SetConfigSearchingCommand","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","search","LocalStructureSearchCommandDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","SchemaCssClassesRepository","theme$","setCssClass","schemaId","SchemaHorizontalGridRepository","SchemaRowColoringRepository","SchemaVerticalGridRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","onSingleTheme","onCssClasses","LocalSchemaWarehouse","schemaReadModelRootId","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setTheme","setRowColoring","rowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","NONE","EVEN","ODD","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","RowColoring","SchemaRowColoring","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","SelectedRowsList","rowIds","isRowSelected","entity","equalsById","getIds","Formation","selectedRows","selectedRowsList","ReadModelObject","FormationConverter","aggregate","rows","Paging","isNextDisabled","isPrevDisabled","end","getStart","getEnd","calculateVisiblePages","numberOfVisiblePages","Boolean","Number","PagingConverter","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","data","version","RandomStringGenerator","generate","getData","getUiId","replace","getVersion","isEven","isOdd","StructureReadModelRootConverter","formationConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","DomainEventBus","StructureVerticalFormationWarehouse","verticalFormationRepository","LocalStructureVerticalFormationWarehouse","localProviders","provide","useClass","provideComponentServices","SchemaCssClassManager","rendererFactory2","schemaReadModelRepository","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","renderer","createRenderer","init","elementRef","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","keys","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","toggle","cssClassName","removeClass","SchemaTheme","className","nativeElement","RendererFactory2","StructureCellEditArchive","Archive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelConfig","infoDialog","columnsManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","StructureInfoPanelArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","InjectionToken","SmartComponent","ENTER","SUBMIT","CANCEL","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldsInitedEvent","getFields","ColumnFieldId","ColumnParams","column","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","compositionCommandDispatcher","handle","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","columnField","getAccessorMethod","getDataType","getSearchAccessorMethod","StructureGateway","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","searchCommandDispatcher","fieldCommandDispatcher","sourceEventService","schemaCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","structureRowSelectEnabledArchive","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","structureColumnInputHandler","rowDetail","titlePanel","footerPanel","columnMenu","nextConfig","rowSelecting","infoPanel","summaries","editMode","cellEditing","autoResizeWidth","columnHeaderTop","columnHeaderBottom","maxHeight","virtualScroll","sorting","setSortingConfig","filtering","quickFilters","ngOnInit","onItemSelected","onColumnsChanged","onContainerWidthChanged","containerWidth","onSourceEdited","values","state","StructureCellEditState","onSearchPhrase","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","NextPageEvent","PrevPageEvent","PagingEventRepository","pagingReadModelService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionEventRepository","getPayload","SelectedRowToggledEvent","FormationEventService","structureWarehouse","str","StructureColumnMenuConfig","sort","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","PagingDisplayModeArchive","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","onEvent","EventRepository","StructureRowDetailConfigArchive","item","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValues","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","StructureRowDetailService","injector","drawerService","ref","turnOn","turnOff","close","Injector","parent","useValue","open","FabricDrawerService","TOP","BOTTOM","PagingComponent","renderer2","changeDetectorRef","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","alternativeDisplay","PagingPosition","detectChanges","isPagingVisible","[class.gui-paging]","Renderer2","ElementRef","ChangeDetectorRef","PagingSelectComponent","[class.gui-paging-select]","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","[class.gui-alternative-paging-navigator]","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","[class.gui-alternative-paging-pages]","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","getType","pageChangedEvent","pagesizeChangedEvent","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingApiModule","ApiModule","PagingNavigatorComponent","[class.gui-paging-navigator]","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","PagingStatsComponent","firstItemIndex","lastItemIndex","[class.gui-paging-stats]","PagingFeatureModule","forComponent","FabricModule","FeatureModule","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","StructureInfoPanelConfigConverter","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","infoPanelConfig","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandDispatcher","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","preparedItems","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","DataType","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","add","from","SearchManagerFactory","SearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","SearchPhraseSetEventHandler","structureSearchPhraseRepository","forEvent","ofMessageType","SearchingRepository","enabled$","setEnabled","onSearchingEnabled","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","domainEventHandlers","registerDomainEventHandler","SearchCommandDispatcher","searchDispatcher","SearchWarehouse","searchPhraseRepository","onSearchEnabled","SearchApiModule","SearchIconComponent","[class.gui-icon]","SearchComponent","formBuilder","searchWarehouse","verticalFormationWarehouse","searchingEnabled","controlsConfig","FORM_SEARCH_NAME","searchForm","group","observeChanges","stopObserveChanges","setValue","ngAfterViewInit","clear","reset","searchInputSubscription","controls","valueChanges","debounceTime","[class.gui-search-bar]","FormBuilder","ViewChild","SearchFeatureModule","searchApiModule","ReactiveFormsModule","FieldUiModel","dataType","FieldUiConverter","convertOne","FieldIdGenerator","BaseField","accessor","matchers","accessorMethod","getKey","getAccessor","getMatchers","matcher","getSearchMatcher","val","getSortValue","getSortMatcher","getSearchValue","Field","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","isSummaries","isSummariesEnabled","summariesTypes","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownField","SummariesType","one","two","filterPhrase","NumberField","numOne","numTwo","StringField","toLowerCase","indexOf","strOne","strTwo","localeCompare","BooleanField","booleanOne","booleanTwo","sureBoolTwo","DateField","dateOne","dateTwo","FieldMatchers","sortMatcher","searchMatcher","getMatcher","Optional","of","FieldFactory","fieldIdGenerator","fieldConfig","fieldMatchers","createMatchers","columnType","TypeField","mapNumber","callback","ifNumber","entityOne","entityTwo","valueOne","valueTwo","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","initFields","typeField","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","InitFieldsCommandHandler","createFields","fieldTypes","FieldDomainModule","FieldCommandDispatcher","FieldApiModule","FieldFeatureModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","sourceCommandDispatcher","compositionEventRepository","structureSearchEventService","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","setStyle","getStructureId","getElementRef","[class.gui-structure]","[class.gui-structure-border]","[id]","useExisting","ListViewTemplateArchive","ListViewCardTemplateArchive","listViewProviders","ListViewId","ListViewReadModelRootId","CreateListViewCommand","listViewId","SetListViewModeCommand","getMode","ToggleListViewSelectorCommand","iseEnabled","ListViewDispatcher","setMode","toggleSelector","listViewGlobalId","ListViewCommandDispatcher","listViewDispatcher","listViewReadModelRootId","listViewIdFactory","componentProviders","ListViewComponent","containerTemplateArchive","listCardTemplateArchive","listViewCommandDispatcher","[class.gui-list-view]","[class.gui-generic]","ListViewSourceComponent","[class.gui-list-view-source]","ListViewModeRepository","mode$","ListViewSelectorRepository","selectorEnabled","selectorEnabled$","ListViewLayoutComponent","listViewModeRepository","listViewSelectorRepository","searchBarEnabled","listModeEnabled","cardModeEnabled","[class.gui-list-view-layout]","ListViewItemComponent","context","[class.gui-list-item]","EmptySourceComponent","[class.gui-empty-source]","EmptySourceFeatureModule","ListViewContainerCardComponent","[class.gui-list-container-card]","ListViewCardItemComponent","[class.gui-list-card]","ListViewContainerModeSelectComponent","options","isInteger","listContainerMode","changeContainerMode","[class.gui-list-mode-select]","ListViewCreatedEvent","ListViewCreatedAggregateEvent","ListViewModeSetEvent","ListViewModeSetAggregateEvent","SelectorVisibility","visible","isVisible","setVisible","ListViewSelectorToggledEvent","ListViewSelectorToggledAggregateEvent","ListViewAggregate","initSelectorVisibility","createEvent","addEvent","toggleModeSelector","selectorVisibility","emitEventAfterSelectorVisibilityChange","AggregateRoot","ListViewAggregateFactory","AggregateFactory","CreateListViewCommandHandler","InMemoryListViewStore","InMemoryListViewAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","ListViewAggregateRepository","InMemoryListViewAggregateRepository","inMemorySchemaAggregateStore","save","listViewAggregate","ListViewEventRepository","onModeChange","ListViewWarehouse","SetListViewModeCommandHandler","publishFromAggregate","ToggleListViewSelectorCommandHandler","ListViewDomainModule","listViewKey","ListViewModeSetEventHandler","ListViewSelectorToggledEventHandler","ListViewApiModule","defineAggregate","Gate","isDefined","propertyName","ListViewPagingGate","Directive","ListViewModeGate","modeSelector","ListViewTemplateGate","ListViewFieldGate","ListViewSearchingGate","listViewGatewayDeclarations","ListViewFeatureModule","FabricSelectModule","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","NumberFormatterPipe","transform","number","Pipe","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","StructureDialogColumnManagerService","structureThemeConverter","fabricDialogService","readModelId","FabricDialogService","StructureInfoPanelComponent","dialog","menuColumnManagerService","infoModal","totalItemsSize","preparedItemsSize","openInfo","openColumnManager","StructureColumnManagerComponent","compositionCommandService","enabledColumnsCount","reduce","accumulator","toggleColumn","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelModule","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","FUNCTION","BAR","PERCENTAGE_BAR","PERCENTAGE","ViewTemplatesComponent","getTemplate","CellView","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","ChangedValueEmitter","subject$","BLUR","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","filterFieldName","filterForm","_a","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","NumberEditTemplateComponent","fb","StringEditTemplateComponent","setSelectionRange","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","changed","ColumnQueryComponent","HTML","CellValue","text","CellValueType","FunctionViewComponent","element","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","CompositionAggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","instance","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ASC","DESC","ViewEntity","cellView","templateFunction","cellValue","fromDataType","getCellView","getTemplateFunction","RIGHT","CENTER","LEFT","AbstractColumnEntity","columnConfig","presentation","header","align","setInitialAlign","getPresentation","getColumnConfig","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","ColumnAlign","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","CellTemplateWithAccessor","editable","templateFun","cellEditingEnabled","isBooleanDataType","findValue","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","ColumnDefinition","setField","setTemplateFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","isArray","createColumn","convertWidth","columnEntity","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","commandProviders","readProviders","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","CompositionAggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","getAggregateRepository","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","[class.gui-text-view]","Attribute","ChangeSortParams","CompositionChangeSortStatusEventHandler","dir","components","exportDeclarations","compositionKey","CompositionModule","FabricDatePickerModule","registerMultiDomainEventHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureColumnConfigComponent","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterWarehouse","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationReadModelService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","isPlatformBrowser","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","StructureContainerComponent","ngZone","structureReadModelWarehouse","compositionWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","FormationSetEvent","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","StructureFilter","filterId","setFilterValue","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","delete","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","allFields","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","multi","summariesProviders","StructureConfigFilterSetEventHandler","StructureConfigQuickFilterSetEventHandler","FieldsInitedEventHandler","fieldUiArchive","fieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterCollection","searchManager","fieldCollection","pagingManager","filterManager","initTheme","calculateSource","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setFormation","typeFields","setConfig","removeSearchPhrase","searchedEntities","ents","ae","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","FormationAggregateFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceDomainEventHandlers","sourceProviders","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureFilterIconComponent","StructureFilterMenuComponent","onColumnSelect","selectedColumnId","[class.gui-structure-filter-menu]","StructureFilterMenuTriggerComponent","structureComponent","openDrawer","structureElement","StructureColumnSelectorComponent","columnSelected","onSelectChange","StructureFilterMenuModule","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","InMemorySchemaAggregateRepository","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","SchemaHorizontalGridSetEventHandler","horizontalGridRepository","SchemaRowColoringSetEventHandler","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","StructureThemeGateway","theme2","createStructureDefinition","StructureModule","window","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListWithGridModule","GuiListModule","forRoot","forChild","imports$1","declarations$3","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ``\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { GuiListPaging } from '../../domain-api/gui.list.api';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { PagingDisplayMode } from '../../../../structure/paging/feature/mode/paging-display-mode';\n\n\nexport class GuiListPagingConverter {\n\n\tconvert(guiListPaging: GuiListPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiListPaging.enabled !== undefined && guiListPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiListPaging.enabled;\n\t\t}\n\n\t\tif (guiListPaging.page !== undefined && guiListPaging.page !== null) {\n\t\t\tpagingConfig.page = guiListPaging.page;\n\t\t}\n\n\t\tif (guiListPaging.pageSize !== undefined && guiListPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiListPaging.pageSize;\n\t\t}\n\n\t\tif (guiListPaging.pageSizes !== undefined && guiListPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiListPaging.pageSizes;\n\t\t}\n\n\t\tif (guiListPaging.pagerTop !== undefined && guiListPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiListPaging.pagerTop;\n\t\t} else {\n\t\t\tpagingConfig.pagerTop = true;\n\t\t}\n\n\t\tif (guiListPaging.pagerBottom !== undefined && guiListPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiListPaging.pagerBottom;\n\t\t}\n\n\t\tpagingConfig.displayMode = PagingDisplayMode.BASIC;\n\n\t\treturn pagingConfig;\n\t}\n\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-card',\n\ttemplate: ``\n})\nexport class GuiListCardComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum ListViewMode {\n\tLIST = 'List',\n\tCARD = 'Card'\n}\n","export interface GuiListPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiListMode {\n\tLIST,\n\tCARD\n}\n\nexport interface GuiListView {\n\n\tactive?: GuiListMode;\n\n\tselector?: boolean;\n\n}\n\nexport interface GuiListField {\n\n\tfield?: string;\n\n\ttype?: GuiListFieldType;\n\n}\n\nexport enum GuiListFieldType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport interface GuiListSearching {\n\n\tenabled?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n","import { ListViewMode } from '../../../../structure/list/domain/mode/list-view-mode';\nimport { GuiListMode } from '../../domain-api/gui.list.api';\n\nexport class GuiListModeConverter {\n\n\tconvert(mode: GuiListMode): ListViewMode {\n\n\t\tif (mode === GuiListMode.LIST) {\n\t\t\treturn ListViewMode.LIST;\n\t\t} else {\n\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewCardTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { ContentChild, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\n\nimport { GuiListField, GuiListPaging, GuiListSearching, GuiListView } from '../domain-api/gui.list.api';\nimport { GuiListPagingConverter } from './paging/gui-list.paging.converter';\nimport { GuiListCardComponent } from './card/gui.list-card.component';\nimport { GuiListModeConverter } from './mode/gui-list.mode.converter';\n\nimport { ListViewCardTemplate } from '../../../structure/list/feature/card/template/list-view.card-template';\nimport { ListViewTemplate } from '../../../structure/list/feature/source/template/list-view-template';\nimport { ListViewMode } from '../../../structure/list/domain/mode/list-view-mode';\nimport { FieldConfig } from '../../../structure/field/domain-api/field.config';\nimport { SearchConfig } from '../../../structure/search/domain-api/search-config';\n\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@ContentChild(GuiListCardComponent, { static: true })\n\tlistCard: GuiListCardComponent;\n\n\t@Input()\n\tsource: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\t@Input()\n\tcardTemplate: (item: any) => string;\n\n\t@Input()\n\tpaging: boolean | GuiListPaging;\n\n\t@Input()\n\tview: GuiListView;\n\n\t@Input()\n\tfields: Array<GuiListField>;\n\n\t@Input()\n\tsearching: GuiListSearching;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter<string>();\n\n\tcontainerTemplate: ListViewTemplate;\n\n\tlistCardTemplate: ListViewCardTemplate;\n\n\tlistViewMode: ListViewMode;\n\n\tlistViewModeSelector: boolean;\n\n\tguiListPagingConverter: GuiListPagingConverter = new GuiListPagingConverter();\n\n\tguiListModeConverter: GuiListModeConverter = new GuiListModeConverter();\n\n\tlistFields: Array<FieldConfig>;\n\n\tsearchConfig: SearchConfig;\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ListViewTemplate(this.template, templateRef);\n\n\t\tconst cardTemplateRef = this.listCard ? this.listCard.templateRef : null;\n\n\t\tthis.listCardTemplate = new ListViewCardTemplate(this.cardTemplate, cardTemplateRef);\n\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.guiListPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.view !== undefined && changes.view.currentValue !== undefined) {\n\n\t\t\tif (this.view.active !== undefined) {\n\t\t\t\tthis.listViewMode = this.guiListModeConverter.convert(this.view.active);\n\t\t\t}\n\n\t\t\tif (this.view.selector !== undefined) {\n\t\t\t\tthis.listViewModeSelector = this.view.selector;\n\t\t\t}\n\n\t\t}\n\n\t\tif (changes.fields !== undefined && changes.fields.currentValue !== undefined) {\n\n\t\t\tthis.listFields = this.fields.map((f) => {\n\t\t\t\treturn {\n\t\t\t\t\tfield: f.field,\n\t\t\t\t\ttype: f.type as any // DataType\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (changes.searching !== undefined && changes.searching.currentValue !== undefined) {\n\n\t\t\tthis.searchConfig = this.searching as SearchConfig;\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { Component, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class.gui-list]': `\"true\"`\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tsuper();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonSearchPhraseChange(phrase: string): void {\n\t\tthis.searchPhraseChanged.emit(phrase);\n\t}\n\n}\n","import { Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SourceCommandDispatcher } from '../../../../lib/structure/domain-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport abstract class ListViewGateway implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tprotected constructor(\n\t\tpublic readonly structureId: StructureId,\n\t\tprotected readonly sourceCommandService: SourceCommandDispatcher\n\t) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.items) {\n\t\t\tthis.sourceCommandService.setOrigin(this.items, this.structureId);\n\t\t}\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../domain-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../../structure/paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../domain-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../../domain-api/paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandDispatcher } from '../../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../../../structure/paging/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../../structure/paging/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../../structure/paging/domain-api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../lib/structure/domain-api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../lib/structure/domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../../../structure/paging/domain-api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../../structure/paging/domain-api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureFormationDispatcher {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureFormationDispatcher } from '../../../domain-api/formation/structure-formation.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends StructureFormationDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from './read/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from './read/selected-rows/selected-rows-list';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class StructureFormationWarehouse {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFormationWarehouse } from '../../../domain-api/formation/structure-formation.warehouse';\nimport { FormationRepository } from '../../../domain-api/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain-api/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends StructureFormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../domain-api/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../../../../../structure/field/domain/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../../structure/field/domain/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../domain-api/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../domain/source/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../domain-api/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { FilterConfig } from '../../../domain-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../domain-api/filter/quick-filters.config';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../domain-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { FieldUiModel } from './field.ui-model';\n\n\n@Injectable()\nexport class FieldUiArchive extends AggregateArchive<Array<FieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FieldUiArchive } from './field.ui-archive';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FieldUiModel } from './field.ui-model';\n\n\n@Injectable()\nexport class FieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: FieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { FieldUiRepository } from '../../../../structure/field/domain-api/read/field.ui-repository';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: FieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../domain-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { FieldUiRepository } from '../../../../../structure/field/domain-api/read/field.ui-repository';\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: FieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../domain-api/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain-api/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends StructureSourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/domain-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/domain-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/domain/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/domain-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/domain-api/composition.global-id';\nimport { FieldId } from '../../../../../structure/field/domain/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SearchConfig } from '../../domain-api/search-config';\n\n\nexport class SetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../domain-api/search-config';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../../structure/search/domain/search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../../../structure/search/domain-api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../../structure/search/domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../../structure/search/domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../domain-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends AggregateArchive<SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaRowColoringRepository extends AggregateArchive<SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/domain-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/domain-api/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/domain-api/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/domain-api/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/domain-api/vertical-grid/schema.vertical-grid.repository';\nimport { schemaGlobalId } from '../../../../../schema/domain-api/read/schema.global-id';\nimport { SchemaRowColoring } from '../../../../../schema/domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../lib/structure/domain-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../lib/structure/domain-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../../schema/domain-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/read/formation';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/read/formation.converter';\nimport { PagingConverter } from '../../../../structure/paging/domain-api/read/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../domain-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../domain-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/feature-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../domain/source/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../structure/search/domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../domain-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { StructureFormationDispatcher } from '../../domain-api/formation/structure-formation.dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { StructureFormationWarehouse } from '../../domain-api/formation/structure-formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../domain-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../domain-api/source/structure-source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { SearchDispatcher } from '../../../../structure/search/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../../schema/domain-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../domain-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { SimpleChanges } from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../../structure/field/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../../structure/field/domain-api/field.config';\nimport { FieldsInitedEvent } from '../../../../../structure/field/domain/init/fields-inited.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { TypeField } from '../../../../../structure/field/domain/data-type/type.field';\nimport { ColumnFieldId } from '../../../../composition/domain/column/field/column-field.id';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { CompositionCommandDispatcher } from '../../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { ColumnFieldFactory } from '../../../../composition/domain/column/field/colum-field.factory';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandDispatcher: CompositionCommandDispatcher) {\n\t}\n\n\thandle(simpleChanges: SimpleChanges): void {\n\n\t\tconst columns = simpleChanges.columns.currentValue;\n\t\tconst fieldConfigs = simpleChanges.columns.currentValue;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs as Array<FieldConfig>);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tcolumns = event.fieldConfigs,\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandDispatcher.setColumns(params, this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../../../structure/sorting/domain-api/sorting-config';\nimport { FilterConfig } from '../../domain-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../domain-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../../structure/search/domain-api/search-config';\nimport { SummariesConfig } from '../../domain-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../domain-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../../domain-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../domain-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/domain-api/composition.event-repository';\nimport { FormationEventService } from '../../domain-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../domain-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { SearchEventRepository } from '../../../../structure/search/domain-api/search.event-repository';\nimport { SchemaCommandDispatcher } from '../../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/domain-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../../schema/domain-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { InfoPanelConfig } from '../panel/info/info-panel.config';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandDispatcher } from '../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { SearchCommandDispatcher } from '../../../../structure/search/domain-api/search.command-dispatcher';\nimport { FieldCommandDispatcher } from '../../../../structure/field/domain-api/field.command-dispatcher';\nimport { InitFieldsCommand } from '../../../../structure/field/domain/init/init-fields.command';\nimport { FieldsInitedEvent } from '../../../../structure/field/domain/init/fields-inited.event';\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\nimport { filter } from 'rxjs/operators';\nimport { FieldConfig } from '../../../../structure/field/domain-api/field.config';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../composition/domain/column/field/colum-field.factory';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprotected constructor(\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandDispatcher,\n\t\tprotected searchCommandDispatcher: SearchCommandDispatcher,\n\t\tprotected fieldCommandDispatcher: FieldCommandDispatcher,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandDispatcher: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns !== undefined && simpleChanges.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(simpleChanges);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(searching, this.structureId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SelectedRowToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureWarehouse } from '../structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureWarehouse\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class SearchEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SearchPhraseSetDomainEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => event.getTheme())\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventService } from '../../domain-api/formation/formation-event.service';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventService,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\n\nimport { Paging } from '../domain-api/read/paging';\nimport { PagingWarehouse } from '../domain-api/paging.warehouse';\nimport { PagingCommandDispatcher } from '../domain-api/paging.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../../lib/structure/domain-api/source/structure-source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\n\n\n@Component({\n\tselector: 'gui-paging[position]',\n\ttemplateUrl: 'paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-paging]': `\"true\"`\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandDispatcher,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t} else {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t}\n\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisPagingVisible(): boolean {\n\t\treturn this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-select',\n\ttemplateUrl: `paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-select]': `\"true\"`\n\t}\n})\nexport class PagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-navigator',\n\ttemplateUrl: `alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-navigator]': `\"true\"`\n\t}\n})\nexport class AlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-pages',\n\ttemplateUrl: `alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-pages]': `\"true\"`\n\t}\n})\nexport class AlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandDispatcher } from './paging.command-dispatcher';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandDispatcher,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-navigator',\n\ttemplateUrl: `paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-navigator]': `\"true\"`\n\t}\n})\nexport class PagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-stats',\n\ttemplateUrl: `paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-stats]': `\"true\"`\n\t}\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../domain-api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SortingConfig } from '../../domain-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SortOrder } from '../../../../lib/composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../field/domain/data-type/field.id';\nimport { CompositionId } from '../../../lib/composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../lib/composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SortingCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureReadModelRepository } from '../../../lib/structure/domain-api/read/structure.read-model-repository';\nimport { AggregateId } from '@generic-ui/hermes';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../lib/structure/domain-api/read/structure.read-model-root';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class SortingWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class SortingEventRepository {\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandDispatcher } from './sorting.command-dispatcher';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandDispatcher,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../domain-api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../lib/structure/domain/source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { OriginItemEntity } from '../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { DataType } from '../../field/domain/data-type/data-type';\nimport { TypeField } from '../../field/domain/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): Type<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): Type<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../domain-api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../domain-api/enabled/config-searching-set.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher,\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler),\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandDispatcher {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\n\n\n@Injectable()\nexport class SearchWarehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandDispatcher } from './search.command-dispatcher';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandDispatcher,\n\t\tSearchWarehouse,\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-search-icon',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class SearchIconComponent {\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\nimport { StructureWarehouse } from '../../../lib/structure/domain-api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../lib/structure/domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { SearchCommandDispatcher } from '../domain-api/search.command-dispatcher';\nimport { SearchWarehouse } from '../domain-api/search.warehouse';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n\tselector: 'gui-search-bar',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t\t<gui-search-icon></gui-search-icon>\n\t\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\" class=\"gui-clear-search-icon\" (click)=\"clear()\"></span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-search-bar]': `\"true\"`\n\t},\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\t// REMOVE\n\t\tthis.verticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\t// this.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls['searchPhrase']\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../domain-api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\t// SearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required')\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/data-type/field.id';\nimport { DataType } from '../../domain/data-type/data-type';\n\n\nexport class FieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldUiModel } from './field.ui-model';\nimport { TypeField } from '../../domain/data-type/type.field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<FieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): FieldUiModel {\n\n\t\treturn new FieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { SummariesType } from '../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../lib/composition/domain/column/column-summaries.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../lib/structure/domain/source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../lib/structure/domain/source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../lib/structure/domain/source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../lib/structure/domain/source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../lib/structure/domain/source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(fieldConfig: FieldConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tlet matcher = fieldConfig.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../lib/composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\nimport { FieldConfig } from '../domain-api/field.config';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tif (!fieldConfigs) {\n\t\t\treturn;\n\t\t}\n\n\t\tfieldConfigs.forEach((fieldConfig: FieldConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(fieldConfig);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs = command.getFieldConfigs();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), fieldConfigs, fieldTypes));\n\t}\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\n\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandDispatcher {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldUiArchive } from './read/field.ui-archive';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldUiRepository } from './read/field.ui-repository';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandDispatcher } from './field.command-dispatcher';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandDispatcher,\n\n\t\tFieldUiArchive,\n\t\tFieldUiConverter,\n\t\tFieldUiRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldApiModule extends ApiModule {\n\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../domain-api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../domain-api/read/structure.read-model-root';\nimport { PagingCommandDispatcher } from '../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../domain-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../domain-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/domain-api/composition.event-repository';\nimport { FormationEventService } from '../domain-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../domain-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/domain-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { SearchEventRepository } from '../../../structure/search/domain-api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/domain-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../../structure/sorting/feature/sorting.feature-module';\nimport { SortingCommandDispatcher } from '../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { SearchFeatureModule } from '../../../structure/search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../../structure/field/feature/field.feature-module';\nimport { SearchCommandDispatcher } from '../../../structure/search/domain-api/search.command-dispatcher';\nimport { FieldCommandDispatcher } from '../../../structure/field/domain-api/field.command-dispatcher';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../composition/domain/column/field/colum-field.factory';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t// '../../../structure/paging/feature/style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'./style/structure-filter.ngx.scss',\n\t\t'../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure]': `\"true\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandDispatcher,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandDispatcher,\n\t\t\t\tsearchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tfieldCommandDispatcher: FieldCommandDispatcher,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandDispatcher.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewTemplate } from './list-view-template';\n\n\n@Injectable()\nexport class ListViewTemplateArchive extends Archive<ListViewTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewCardTemplate } from './list-view.card-template';\n\n\n@Injectable()\nexport class ListViewCardTemplateArchive extends Archive<ListViewCardTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\n\nexport const listViewProviders = [\n\tListViewTemplateArchive,\n\tListViewCardTemplateArchive\n];\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootId } from '../../../lib/composition/domain-api/read/composition.read-model-root-id';\n\nexport class ListViewId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\n\n\nexport class ListViewReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): ListViewId {\n\t\treturn new ListViewId(this.getId());\n\t}\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class CreateListViewCommand extends CreateAggregateCommand {\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'CreateListViewCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewId } from '../list-view.id';\n\n\nexport class SetListViewModeCommand extends Command {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'SetListViewModeCommand');\n\t}\n\n\tgetMode(): ListViewMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ToggleListViewSelectorCommand extends Command {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ToggleListViewSelectorCommand');\n\t}\n\n\tiseEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { CreateListViewCommand } from './create/create-list-view.command';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SetListViewModeCommand } from './mode/set-list-view-mode.command';\nimport { ToggleListViewSelectorCommand } from './mode/selector/toggle-list-view-selector.command';\n\n\n@Injectable()\nexport class ListViewDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateListViewCommand(listViewId));\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new SetListViewModeCommand(listViewId, mode));\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleListViewSelectorCommand(listViewId, enabled));\n\t}\n\n}\n","import { ListViewReadModelRootId } from './list-view.read-model-root-id';\n\nexport const listViewGlobalId = new ListViewReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { ListViewDispatcher } from '../domain/list-view.dispatcher';\nimport { listViewGlobalId } from './read/list-view.global-id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\n\n\n@Injectable()\nexport class ListViewCommandDispatcher {\n\n\tconstructor(private readonly listViewDispatcher: ListViewDispatcher) {\n\t}\n\n\tcreate(listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.create(listViewReadModelRootId.toAggregateId());\n\t}\n\n\tsetMode(mode: ListViewMode, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.setMode(mode, listViewReadModelRootId.toAggregateId());\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.toggleSelector(enabled, listViewReadModelRootId.toAggregateId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { ListViewGateway } from './gateway/list-view.gateway';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { StructureIdGenerator } from '../../../lib/structure/feature/structure-id.generator';\nimport { structureIdFactory } from '../../../lib/structure/feature/structure.component';\nimport { StructureCommandDispatcher } from '../../../lib/structure/domain-api/structure.command-dispatcher';\nimport { SourceCommandDispatcher } from '../../../lib/structure/domain-api/source/source.command-dispatcher';\nimport { listViewProviders } from './list-view.providers';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { provideComponentServices } from '../../../lib/structure/feature/local/local-providers';\nimport { PagingCommandDispatcher } from '../../paging/domain-api/paging.command-dispatcher';\nimport { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\nimport { ListViewReadModelRootId } from '../domain-api/read/list-view.read-model-root-id';\nimport { ListViewCommandDispatcher } from '../domain-api/list-view.command-dispatcher';\n\n\n/** @internal */\nexport function listViewIdFactory(generator: StructureIdGenerator): ListViewReadModelRootId {\n\treturn new ListViewReadModelRootId('gui-' + generator.generateId());\n}\n\nconst componentProviders = [{\n\tprovide: StructureId,\n\tuseFactory: structureIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n}, {\n\tprovide: ListViewReadModelRootId,\n\tuseFactory: listViewIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n},\n\t...listViewProviders,\n\n\t...provideComponentServices(),\n\n\tPagingFeatureModule.forComponent()\n];\n\n@Component({\n\tselector: 'gui-list-view',\n\ttemplate: `\n\n\t\t<gui-list-view-layout></gui-list-view-layout>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: componentProviders,\n\tstyleUrls: [\n\t\t'./style/list-view.ngx.scss',\n\t\t'./source/list-view-source.component.ngx.scss',\n\t\t'./style/theme/generic.list.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-list-view]': `\"true\"`,\n\t\t'[class.gui-generic]': `\"true\"`,\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ListViewComponent extends ListViewGateway {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tcontainerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tlistCardTemplateArchive: ListViewCardTemplateArchive,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\t\t\tlistViewCommandDispatcher: ListViewCommandDispatcher\n\t) {\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tsourceCommandService\n\t\t);\n\t\tstructureCommandService.createStructure(this.structureId);\n\t\tlistViewCommandDispatcher.create(this.listViewReadModelRootId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { StructureSourceWarehouse } from '../../../../lib/structure/domain-api/source/structure-source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../../../lib/structure/domain/source/item.entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ListViewTemplate } from './template/list-view-template';\nimport { ListViewTemplateArchive } from './template/list-view-template.archive';\n\n@Component({\n\tselector: 'gui-list-view-source',\n\ttemplate: `\n\n\t\t<gui-list-view-item *ngFor=\"let element of source\"\n\t\t\t\t\t\t\t[item]=\"element\"\n\t\t\t\t\t\t\t[template]=\"template\">\n\t\t</gui-list-view-item>\n\n\t\t<gui-empty-source [items]=\"source\">\n\t\t</gui-empty-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-view-source]': `\"true\"`\n\t}\n})\nexport class ListViewSourceComponent extends SmartComponent implements OnInit {\n\n\tsource: Array<any> = [];\n\n\ttemplate: ListViewTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ListViewTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.containerTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListViewTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewId } from '../../domain/list-view.id';\n\n\n@Injectable()\nexport class ListViewModeRepository extends Reactive {\n\n\tprivate mode = new Map<string, ListViewMode>();\n\n\tprivate mode$ = new ReplaySubject<Map<string, ListViewMode>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.next(mode, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<ListViewMode> {\n\n\t\treturn this.mode$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, ListViewMode>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.mode.set(listViewId.toString(), mode);\n\t\tthis.mode$.next(this.mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../../domain/list-view.id';\n\n\n@Injectable()\nexport class ListViewSelectorRepository extends Reactive {\n\n\tprivate selectorEnabled = new Map<string, boolean>();\n\n\tprivate selectorEnabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(selectorEnabled: boolean, listViewId: ListViewId): void {\n\t\tthis.next(selectorEnabled, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<boolean> {\n\n\t\treturn this.selectorEnabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.selectorEnabled.set(listViewId.toString(), enabled);\n\t\tthis.selectorEnabled$.next(this.selectorEnabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewReadModelRootId } from '../../domain-api/read/list-view.read-model-root-id';\nimport { ListViewModeRepository } from '../../domain-api/mode/list-view.mode.repository';\nimport { ListViewSelectorRepository } from '../../domain-api/mode/selector/list-view.selector.repository';\n\n@Component({\n\tselector: 'gui-list-view-layout',\n\ttemplate: `\n\n\t\t<div class=\"gui-list-panel-search\">\n\n\t\t\t<gui-search-bar *ngIf=\"searchBarEnabled\"></gui-search-bar>\n\t\t\t\n\t\t</div>\n\t\t<div class=\"gui-list-panel-top\">\n\t\t\t<gui-list-mode-select *ngIf=\"selectorEnabled\"></gui-list-mode-select>\n\t\t\t\n\t\t\t<gui-paging [minimal]=\"true\" [position]=\"0\"></gui-paging>\n\t\t</div>\n\n\t\t<gui-list-view-source *ngIf=\"listModeEnabled\"></gui-list-view-source>\n\n\t\t<gui-list-container-card *ngIf=\"cardModeEnabled\"></gui-list-container-card>\n\n\t\t<gui-paging [position]=\"1\"></gui-paging>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-view-layout]': `\"true\"`\n\t}\n})\nexport class ListViewLayoutComponent extends SmartComponent {\n\n\tlistModeEnabled: boolean;\n\n\tcardModeEnabled: boolean;\n\n\tselectorEnabled: boolean;\n\n\tsearchBarEnabled: boolean = true;\n\n\tconstructor(\n\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\tprivate readonly listViewModeRepository: ListViewModeRepository,\n\t\t// private readonly c: ListViewModeRepository,\n\t\tprivate readonly listViewSelectorRepository: ListViewSelectorRepository\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.listViewModeRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: ListViewMode) => {\n\t\t\t\tthis.listModeEnabled = mode === ListViewMode.LIST;\n\t\t\t\tthis.cardModeEnabled = mode === ListViewMode.CARD;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listViewSelectorRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.selectorEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { ListViewTemplate } from '../template/list-view-template';\n\n\n@Component({\n\tselector: 'gui-list-view-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div class=\"gui-list-item-container\" >\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div class=\"gui-list-item-container\"\n\t\t\t\t [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-item]': `\"true\"`\n\t}\n})\nexport class ListViewItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-empty-source[items]',\n\ttemplateUrl: `empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [`\n\t\t.gui-empty-source div {\n\t\t\tdisplay: block;\n\t\t\tpadding: 42px 8px;\n\t\t}\n\t`],\n\thost: {\n\t\t'[class.gui-empty-source]': 'true'\n\t}\n})\nexport class EmptySourceComponent {\n\n\t@Input()\n\titems: Array<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureSourceWarehouse } from '../../../../lib/structure/domain-api/source/structure-source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../../../lib/structure/domain/source/item.entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ListViewCardTemplate } from './template/list-view.card-template';\nimport { ListViewCardTemplateArchive } from './template/list-view.card-template.archive';\n\n@Component({\n\tselector: 'gui-list-container-card',\n\ttemplate: `\n\n\t\t<gui-list-card-item *ngFor=\"let element of items\"\n\t\t\t\t\t\t\t\t [item]=\"element\"\n\t\t\t\t\t\t\t\t [template]=\"cardTemplate\">\n\t\t</gui-list-card-item>\n\n\t\t<gui-empty-source [items]=\"items\">\n\t\t</gui-empty-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-container-card]': `\"true\"`\n\t}\n})\nexport class ListViewContainerCardComponent extends SmartComponent implements OnInit {\n\n\titems: Array<any> = [];\n\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.items = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listCardTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListViewCardTemplate) => {\n\t\t\t\tthis.cardTemplate = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { ListViewCardTemplate } from '../template/list-view.card-template';\n\n\n@Component({\n\tselector: 'gui-list-card-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div class=\"gui-list-card-wrapper\" >\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div class=\"gui-list-card-wrapper\"\n\t\t\t\t [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-card]': `\"true\"`\n\t}\n})\nexport class ListViewCardItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewCardTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { ListViewMode } from '../../../domain/mode/list-view-mode';\nimport { ListViewModeRepository } from '../../../domain-api/mode/list-view.mode.repository';\nimport { ListViewReadModelRootId } from '../../../domain-api/read/list-view.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-list-mode-select',\n\ttemplate: `\n\n\t\t<gui-select (optionChanged)=\"changeContainerMode($event)\"\n\t\t\t\t\t[options]=\"options\"\n\t\t\t\t\t[selected]=\"listContainerMode\">\n\t\t</gui-select>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-mode-select]': `\"true\"`\n\t}\n})\nexport class ListViewContainerModeSelectComponent extends SmartComponent {\n\n\toptions = Object.keys(ListViewMode)\n\t\t\t\t\t.map((key: string) => ListViewMode[key])\n\t\t\t\t\t.filter((val) => !Number.isInteger(val));\n\n\tlistContainerMode: ListViewMode;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeRepository) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.listViewModeRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: ListViewMode) => {\n\t\t\t\tthis.listContainerMode = mode;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangeContainerMode(mode: ListViewMode): void {\n\t\tthis.listViewModeRepository.setMode(mode, this.listViewReadModelRootId.toAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class ListViewCreatedEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewCreatedEvent } from './list-view-created.event';\nimport { ListViewId } from '../list-view.id';\n\nexport class ListViewCreatedAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\n\n\nexport class ListViewModeSetEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(schemaId, 'ListViewModeSetEvent');\n\t}\n\n\tgetTheme(): ListViewMode {\n\t\treturn this.mode;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewModeSetEvent } from './list-view-mode-set.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\n\nexport class ListViewModeSetAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'ListViewModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","export class SelectorVisibility {\n\n\tenabled: boolean = null;\n\n\tvisible: boolean = false;\n\n\tconstructor() {\n\t}\n\n\tisVisible(): boolean {\n\n\t\tif (this.enabled !== null) {\n\t\t\treturn this.enabled;\n\t\t}\n\n\t\treturn this.visible;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis.visible = visible;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ListViewSelectorToggledEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'ListViewSelectorToggledEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewSelectorToggledEvent } from './list-view-selector-toggled.event';\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ListViewSelectorToggledAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ListViewSelectorToggledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewSelectorToggledEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewCreatedAggregateEvent } from './create/list-view-created.aggregate-event';\nimport { ListViewModeSetAggregateEvent } from './mode/list-view-mode-set.aggregate-event';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SelectorVisibility } from './mode/selector/selector-visibility';\nimport { ListViewSelectorToggledAggregateEvent } from './mode/selector/list-view-selector-toggled.aggregate-event';\n\n\nexport class ListViewAggregate extends AggregateRoot<ListViewId> {\n\n\tmode: ListViewMode;\n\n\tselectorVisibility: SelectorVisibility;\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'ListViewAggregate');\n\t\tthis.setMode(ListViewMode.LIST);\n\t\tthis.initSelectorVisibility();\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<ListViewId>> {\n\t\treturn ListViewCreatedAggregateEvent;\n\t}\n\n\tsetMode(mode: ListViewMode): void {\n\t\tthis.mode = mode;\n\t\tthis.addEvent(new ListViewModeSetAggregateEvent(this.getId(), this.mode));\n\t}\n\n\ttoggleModeSelector(enabled: boolean): void {\n\t\tthis.selectorVisibility.setEnabled(enabled);\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate initSelectorVisibility(): void {\n\t\tthis.selectorVisibility = new SelectorVisibility();\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate emitEventAfterSelectorVisibilityChange(): void {\n\t\tthis.addEvent(new ListViewSelectorToggledAggregateEvent(this.getId(), this.selectorVisibility.isVisible()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\n@Injectable()\nexport class ListViewAggregateFactory extends AggregateFactory<ListViewId, ListViewAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(id: ListViewId): ListViewAggregate {\n\t\treturn new ListViewAggregate(id);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateListViewCommand } from './create-list-view.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class CreateListViewCommandHandler implements CreateAggregateCommandHandler<ListViewAggregate, CreateListViewCommand> {\n\n\tforCommand(): Type<CreateListViewCommand> {\n\t\treturn CreateListViewCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewStore extends InMemoryStore<ListViewId, ListViewAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { InMemoryListViewStore } from './in-memory.list-view.store';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateStore extends InMemoryAggregateStore<ListViewId, ListViewAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemoryListViewStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\nexport abstract class ListViewAggregateRepository extends AggregateRepository<ListViewId, ListViewAggregate> {\n\n\tabstract getById(listViewId: ListViewId): Optional<ListViewAggregate>;\n\n\tabstract save(aggregate: ListViewAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { InMemoryListViewAggregateStore } from './in-memory.list-view.aggregate-store';\n\nimport { ListViewAggregateRepository } from '../../domain/list-view.aggregate-repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateRepository extends ListViewAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemoryListViewAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(listViewId: ListViewId): Optional<ListViewAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(listViewId);\n\t}\n\n\tsave(listViewAggregate: ListViewAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(listViewAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { ListViewModeSetEvent } from '../domain/mode/list-view-mode-set.event';\n\n@Injectable()\nexport class ListViewEventRepository extends EventRepository<ListViewReadModelRootId, ListViewId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonModeChange(listViewReadModelRootId: ListViewReadModelRootId) {\n\n\t\treturn this.onEvent(listViewReadModelRootId, ListViewModeSetEvent);\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class ListViewWarehouse {\n\n\tconstructor() {\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetListViewModeCommand } from './set-list-view-mode.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class SetListViewModeCommandHandler implements CommandHandler<ListViewAggregate, SetListViewModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetListViewModeCommand> {\n\t\treturn SetListViewModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: SetListViewModeCommand): void {\n\n\t\tconst mode = command.getMode();\n\n\t\tlistViewAggregate.setMode(mode);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ToggleListViewSelectorCommand } from './toggle-list-view-selector.command';\nimport { ListViewAggregate } from '../../list-view.aggregate';\n\n\n@Injectable()\nexport class ToggleListViewSelectorCommandHandler implements CommandHandler<ListViewAggregate, ToggleListViewSelectorCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleListViewSelectorCommand> {\n\t\treturn ToggleListViewSelectorCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: ToggleListViewSelectorCommand): void {\n\n\t\tconst enabled = command.iseEnabled();\n\n\t\tlistViewAggregate.toggleModeSelector(enabled);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from './list-view.dispatcher';\nimport { listViewKey } from '../domain-api/list-view.api-module';\nimport { SetListViewModeCommandHandler } from './mode/set-list-view-mode.command-handler';\nimport { ToggleListViewSelectorCommandHandler } from './mode/selector/toggle-list-view-selector.command-handler';\n\n\n@NgModule({\n\timports: [],\n\tproviders: [\n\t\tListViewDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetListViewModeCommandHandler, listViewKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleListViewSelectorCommandHandler, listViewKey)\n\t\t];\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { ListViewModeRepository } from './list-view.mode.repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewModeSetEvent } from '../../domain/mode/list-view-mode-set.event';\n\n\n@Injectable()\nexport class ListViewModeSetEventHandler implements DomainEventHandler<ListViewId, ListViewModeSetEvent> {\n\n\tconstructor(private listViewModeRepository: ListViewModeRepository) {\n\t}\n\n\tforEvent(): Type<ListViewModeSetEvent> {\n\t\treturn ListViewModeSetEvent;\n\t}\n\n\thandle(event: ListViewModeSetEvent): void {\n\n\t\tif (event.ofMessageType('ListViewModeSetEvent')) {\n\t\t\tthis.listViewModeRepository.setMode(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { ListViewSelectorRepository } from './list-view.selector.repository';\n\nimport { ListViewId } from '../../../domain/list-view.id';\nimport { ListViewSelectorToggledEvent } from '../../../domain/mode/selector/list-view-selector-toggled.event';\n\n\n@Injectable()\nexport class ListViewSelectorToggledEventHandler implements DomainEventHandler<ListViewId, ListViewSelectorToggledEvent> {\n\n\tconstructor(private listViewSelectorRepository: ListViewSelectorRepository) {\n\t}\n\n\thandle(event: ListViewSelectorToggledEvent): void {\n\n\t\tif (event.ofMessageType('ListViewSelectorToggledEvent')) {\n\t\t\tthis.listViewSelectorRepository.setMode(event.isEnabled(), event.getAggregateId());\n\t\t}\n\t}\n\n\tforEvent(): Type<ListViewSelectorToggledEvent> {\n\t\treturn ListViewSelectorToggledEvent;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewAggregateFactory } from '../domain/list-view.aggregate-factory';\nimport { CreateListViewCommandHandler } from '../domain/create/create-list-view.command-handler';\nimport { InMemoryListViewAggregateRepository } from '../infrastructure/in-memory/in-memory.list-view.aggregate-repository';\nimport { ListViewCommandDispatcher } from './list-view.command-dispatcher';\nimport { ListViewEventRepository } from './list-view.event-repository';\nimport { ListViewWarehouse } from './list-view.warehouse';\nimport { InMemoryListViewAggregateStore } from '../infrastructure/in-memory/in-memory.list-view.aggregate-store';\nimport { InMemoryListViewStore } from '../infrastructure/in-memory/in-memory.list-view.store';\nimport { ListViewDomainModule } from '../domain/list-view.domain-module';\nimport { ListViewModeRepository } from './mode/list-view.mode.repository';\nimport { ListViewModeSetEventHandler } from './mode/list-view-mode-set.event-handler';\nimport { ListViewSelectorToggledEventHandler } from './mode/selector/list-view-selector-toggled.event-handler';\nimport { ListViewSelectorRepository } from './mode/selector/list-view.selector.repository';\n\nexport const listViewKey = 'ListViewKey';\n\n@NgModule({\n\timports: [\n\n\t\tHermesModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tlistViewKey,\n\t\t\tListViewAggregateFactory,\n\t\t\tInMemoryListViewAggregateRepository,\n\t\t\tCreateListViewCommandHandler,\n\t\t\t[\n\t\t\t\t...ListViewDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewModeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewSelectorToggledEventHandler),\n\t\t\t]\n\t\t),\n\t\tListViewDomainModule\n\n\t],\n\tproviders: [\n\t\tListViewCommandDispatcher,\n\t\tListViewEventRepository,\n\t\tListViewWarehouse,\n\n\t\tListViewModeRepository,\n\t\tListViewSelectorRepository,\n\n\t\tInMemoryListViewAggregateStore,\n\t\tInMemoryListViewStore\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewApiModule {\n}\n","import { SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from './smart-component';\n\nexport abstract class Gate extends SmartComponent {\n\n\tprotected constructor() {\n\t\tsuper();\n\t}\n\n\tisDefined(propertyName: string, simpleChanges: SimpleChanges): boolean {\n\t\treturn simpleChanges[propertyName] !== undefined && simpleChanges[propertyName].currentValue !== undefined;\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { PagingConfig } from '../../../../paging/domain-api/paging-config';\nimport { PagingCommandDispatcher } from '../../../../paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../../paging/domain-api/paging.event-repository';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[paging]'\n})\nexport class ListViewPagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\t\t\tprivate readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('paging', simpleChanges)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\t// if (this.paging.displayMode !== undefined) {\n\t\t\t\t// \tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { ListViewMode } from '../../../domain/mode/list-view-mode';\nimport { ListViewCommandDispatcher } from '../../../domain-api/list-view.command-dispatcher';\nimport { ListViewReadModelRootId } from '../../../domain-api/read/list-view.read-model-root-id';\n\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewModeGate extends Gate implements OnChanges {\n\n\t@Input()\n\tmode: ListViewMode;\n\n\t@Input()\n\tmodeSelector: boolean;\n\n\tconstructor(public readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewCommandDispatcher: ListViewCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('mode', simpleChanges)) {\n\t\t\tthis.listViewCommandDispatcher.setMode(this.mode, this.listViewReadModelRootId);\n\t\t}\n\n\t\tif (this.isDefined('modeSelector', simpleChanges)) {\n\t\t\tthis.listViewCommandDispatcher.toggleSelector(this.modeSelector, this.listViewReadModelRootId);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { ListViewTemplateArchive } from '../../source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from '../../card/template/list-view.card-template.archive';\nimport { ListViewTemplate } from '../../source/template/list-view-template';\nimport { ListViewCardTemplate } from '../../card/template/list-view.card-template';\n\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewTemplateGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\t@Input()\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly containerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('template', simpleChanges)) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\tif (this.isDefined('cardTemplate', simpleChanges)) {\n\t\t\tthis.listCardTemplateArchive.next(this.cardTemplate);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { PagingConfig } from '../../../../paging/domain-api/paging-config';\nimport { PagingCommandDispatcher } from '../../../../paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../../paging/domain-api/paging.event-repository';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\nimport { FieldConfig } from '../../../../field/domain-api/field.config';\nimport { FieldCommandDispatcher } from '../../../../field/domain-api/field.command-dispatcher';\n\n\n@Directive({\n\tselector: 'gui-list-view[fields]'\n})\nexport class ListViewFieldGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfields: Array<FieldConfig>;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldCommandDispatcher: FieldCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('fields', simpleChanges)) {\n\n\t\t\tthis.fieldCommandDispatcher.initFields(this.fields, this.structureId);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { PagingConfig } from '../../../../paging/domain-api/paging-config';\nimport { PagingCommandDispatcher } from '../../../../paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../../paging/domain-api/paging.event-repository';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\nimport { SearchConfig } from '../../../../search/domain-api/search-config';\nimport { SearchCommandDispatcher } from '../../../../search/domain-api/search.command-dispatcher';\nimport { SearchEventRepository } from '../../../../search/domain-api/search.event-repository';\nimport { skip } from 'rxjs/operators';\n\n\n@Directive({\n\tselector: 'gui-list-view[searching]'\n})\nexport class ListViewSearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tprivate readonly searchEventRepository: SearchEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('searching', simpleChanges)) {\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(this.searching, this.structureId)\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\t}\n\n}\n","import { ListViewPagingGate } from './paging/list-view-paging.gate';\nimport { ListViewModeGate } from './mode/list-view-mode.gate';\nimport { ListViewTemplateGate } from './template/list-view-template.gate';\nimport { ListViewFieldGate } from './field/list-view-field.gate';\nimport { ListViewSearchingGate } from './searching/list-view-searching.gate';\n\nexport const listViewGatewayDeclarations = [\n\tListViewPagingGate,\n\tListViewModeGate,\n\tListViewTemplateGate,\n\tListViewFieldGate,\n\tListViewSearchingGate\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { ListViewComponent } from './list-view.component';\nimport { ListViewSourceComponent } from './source/list-view-source.component';\nimport { ListViewLayoutComponent } from './layout/list-view-layout.component';\nimport { ListViewItemComponent } from './source/list-item/list-view-item.component';\n\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { EmptySourceFeatureModule } from '../../empty-source/feature/empty-source.feature-module';\nimport { ListViewContainerCardComponent } from './card/list-view.container-card.component';\nimport { ListViewCardItemComponent } from './card/card-item/list-view.card-item.component';\nimport { ListViewContainerModeSelectComponent } from './container/select/list-view.container-mode-select.component';\nimport { ListViewApiModule } from '../domain-api/list-view.api-module';\nimport { listViewGatewayDeclarations } from './gateway/list-view-gateway.declarations';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\n\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewApiModule,\n\n\t\tFabricSelectModule,\n\t\tPagingFeatureModule,\n\t\tSearchFeatureModule,\n\t\tEmptySourceFeatureModule\n\t],\n\tdeclarations: [\n\t\tListViewComponent,\n\t\tListViewItemComponent,\n\t\tListViewLayoutComponent,\n\t\tListViewSourceComponent,\n\n\t\tListViewContainerCardComponent,\n\t\tListViewCardItemComponent,\n\t\tListViewContainerModeSelectComponent,\n\n\t\t...listViewGatewayDeclarations\n\t],\n\texports: [\n\t\tListViewComponent,\n\t\tlistViewGatewayDeclarations\n\t],\n\tproviders: []\n})\nexport class ListViewFeatureModule {\n\n\tconstructor(private readonly paging: PagingFeatureModule) {\n\t}\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.12.1\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<div *ngIf=\"infoPanelConfig.isSourceSizeEnabled()\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isColumnsManagerEnabled()\"\n\t\t\t\t\t  (click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isInfoDialogEnabled()\"\n\t\t\t\t\t  [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/domain/data-type/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/domain/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../../structure/field/domain/data-type/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../../structure/field/domain/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../domain-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../../structure/field/domain/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className;\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<Type<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t], [\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SortingCommandDispatcher } from '../../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from './read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './read/structure.quick-filter.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../domain-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterWarehouse } from '../../domain-api/filter/structure-filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../domain-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { StructureFormationDispatcher } from '../../domain-api/formation/structure-formation.dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureFormationWarehouse } from '../../domain-api/formation/structure-formation.warehouse';\nimport { SelectedRowsList } from '../../domain-api/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../domain-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { SearchPhraseRepository } from '../../../../structure/search/domain-api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../../structure/search/domain-api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: StructureFormationDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../domain-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureSourceWarehouse } from '../../domain-api/source/structure-source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { StructureFormationWarehouse } from '../../domain-api/formation/structure-formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: StructureFormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { StructureFilterWarehouse } from '../../domain-api/filter/structure-filter.warehouse';\nimport { SearchWarehouse } from '../../../../structure/search/domain-api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../domain-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Override } from '../../../../../common/cdk/decorators';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class FormationSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'FormationSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureFilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../../structure/paging/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../../structure/paging/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../../structure/paging/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../../structure/paging/domain/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../../structure/sorting/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../../structure/search/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './feature-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../domain-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './feature-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../../../../../structure/field/domain/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../../../../../structure/field/domain/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../../../../../structure/field/domain/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../../../../../structure/field/domain/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../domain-api/filter/filter-config';\nimport { SearchConfig } from '../../../../../structure/search/domain-api/search-config';\nimport { QuickFiltersConfig } from '../../../domain-api/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../../../../../structure/field/domain/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../../../structure/field/domain/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { AllFieldTypes } from '../../../../../../structure/field/domain/data-type/all-field-types';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/data-type/data-type';\nimport { Field } from '../../../../../../../structure/field/domain/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/data-type/data-type';\nimport { Field } from '../../../../../../../structure/field/domain/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/data-type/data-type';\nimport { Field } from '../../../../../../../structure/field/domain/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/data-type/data-type';\nimport { Field } from '../../../../../../../structure/field/domain/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/data-type/data-type';\nimport { Field } from '../../../../../../../structure/field/domain/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../../../../../structure/field/domain/data-type/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { TypeField } from '../../../../../structure/field/domain/data-type/type.field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler implements DomainEventHandler<StructureId, StructureConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t}\n\n\tforEvent(): Type<StructureConfigFilterSetEvent> {\n\t\treturn StructureConfigFilterSetEvent;\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, StructureConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tforEvent(): Type<StructureConfigQuickFilterSetEvent> {\n\t\treturn StructureConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldUiArchive } from './field.ui-archive';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldUiArchive: FieldUiArchive,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): Type<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldUiArchive.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.ofMessageType('StructureSummariesChangedEvent')),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../../../../structure/field/domain/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../../../structure/paging/domain/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from '../../../../structure/sorting/domain/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from '../../../../structure/field/domain/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { SortingConfig } from '../../../../structure/sorting/domain-api/sorting-config';\nimport { FieldId } from '../../../../structure/field/domain/data-type/field.id';\nimport { StructureSorter } from '../../../../structure/sorting/domain/structure.sorter';\nimport { FilterConfig } from '../../domain-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../domain-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../../structure/search/domain-api/search-config';\nimport { SearchManager } from '../../../../structure/search/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../../../structure/field/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../../../structure/field/domain-api/field.config';\nimport { Override } from '../../../../common/cdk/decorators';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { TypeField } from '../../field/domain/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../domain-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../../field/domain/data-type/field.id';\nimport { OriginItemEntity } from '../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { SortOrder } from '../../../lib/composition/domain/column/sort/sort-order';\nimport { TypeField } from '../../field/domain/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../../../structure/paging/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../../../structure/field/domain/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../../../structure/sorting/domain/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from '../../../../structure/search/domain/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from './read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from './read/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { StructureFormationDispatcher } from './structure-formation.dispatcher';\nimport { StructureFormationWarehouse } from './structure-formation.warehouse';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tStructureFormationDispatcher,\n\tStructureFormationWarehouse\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): Type<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): Type<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceDomainEventHandlers = [\n\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../domain-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): Type<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): Type<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FilterManagerFactory } from '../domain/structure/filter/filter.manager-factory';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { StructureConfigFilterSetEventHandler } from './filter/read/structure.config-filter-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from './filter/read/structure.config-quick-filter-set.event-handler';\nimport { FieldsInitedEventHandler } from '../../../structure/field/domain-api/read/fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureFilterWarehouse } from './filter/structure-filter.warehouse';\nimport { StructureFilterRepository } from './filter/read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './filter/read/structure.quick-filter.repository';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { formationProviders } from './formation/formation.providers';\nimport { sourceProviders } from './source/source.providers';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFilterManagerFactory,\n\tStructureFilterCommandDispatcher,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureDomainEventHandlers = [\n\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler),\n\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructureConfigQuickFilterSetEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructureConfigFilterSetEventHandler),\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher,\n\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-search-bar></gui-search-bar>\n<!--\t\t<gui-structure-filter-menu-trigger></gui-structure-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-filter-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureFilterIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-filter-menu',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-column-selector\n\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">\n\t\t</gui-structure-column-selector>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-filter-menu]': 'true'\n\t}\n})\nexport class StructureFilterMenuComponent {\n\n\tselectedColumnId: string;\n\n\tonColumnSelect(value: string): void {\n\t\tthis.selectedColumnId = value;\n\t}\n}\n","import { Component, Inject, Injector } from '@angular/core';\nimport { FabricDrawerService } from '@generic-ui/fabric';\nimport { structureComponentToken } from '../structure-component-token';\nimport { StructureComponent } from '../structure.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\n\n@Component({\n\tselector: 'gui-structure-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-structure-filter-icon-wrapper\">\n\t\t\t<gui-structure-filter-icon></gui-structure-filter-icon>\n\t\t</div>\n\t`\n})\nexport class StructureFilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(structureComponentToken) private readonly structureComponent: StructureComponent) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst structureElement = this.structureComponent.getElementRef();\n\n\t\tthis.drawerService.open(structureElement, StructureFilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-structure-column-selector',\n\ttemplate: `\n\n\t\t<gui-select\n\t\t\t\t[options]=\"options\"\n\t\t\t\t(optionChanged)=\"onSelectChange($event)\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnSelectorComponent extends SmartComponent {\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<string>();\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\toptions: Array<string> = [];\n\n\tconstructor(private readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.options = columns.map((column: CellTemplateWithContext) => column.getColumnDefinitionId().toString());\n\t\t\t});\n\t}\n\n\tonSelectChange(columnId: string): void {\n\t\tthis.columnSelected.emit(columnId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureFilterIconComponent } from './icon/structure.filter-icon.component';\nimport { StructureFilterMenuTriggerComponent } from './structure.filter-menu-trigger.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\nimport { StructureColumnSelectorComponent } from './column-selector/structure.column-selector.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureFilterIconComponent,\n\t\tStructureFilterMenuComponent,\n\t\tStructureFilterMenuTriggerComponent,\n\t\tStructureColumnSelectorComponent\n\t],\n\texports: [\n\t\tStructureFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tStructureFilterMenuComponent\n\t]\n})\nexport class StructureFilterMenuModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureFilterMenuModule } from '../../filter/structure.filter-menu.module';\n\nimport { SearchFeatureModule } from '../../../../../structure/search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tStructureFilterMenuModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../composition/domain-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\nimport { SortingCommandDispatcher } from '../../../../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { CompositionId } from '../../../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../../../domain/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/domain-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/domain-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../domain-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../domain-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n\tforEvents(): Array<Type<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler implements DomainEventHandler<SchemaId, SchemaThemeSetEvent> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t}\n\n\tforEvent(): Type<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.themeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaHorizontalGridRepository } from './schema.horizontal-grid.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaHorizontalGridSetEvent> {\n\n\tconstructor(private horizontalGridRepository: SchemaHorizontalGridRepository) {\n\t}\n\n\tforEvent(): Type<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n\thandle(event: SchemaHorizontalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGridRepository.next(event.getAggregateId(), event.getHorizontalGrid());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaRowColoringRepository } from './schema.row-coloring.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\n\n\n@Injectable()\nexport class SchemaRowColoringSetEventHandler implements DomainEventHandler<SchemaId, RowColoringSetEvent> {\n\n\tconstructor(private schemaRowColoringRepository: SchemaRowColoringRepository) {\n\t}\n\n\tforEvent(): Type<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n\thandle(event: RowColoringSetEvent): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.schemaRowColoringRepository.next(event.getAggregateId(), event.getRowColoring());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaHorizontalGridSetEventHandler } from './horizontal-grid/schema.horizontal-grid-set.event-handler';\nimport { SchemaRowColoringSetEventHandler } from './row-coloring/schema.row-coloring-set.event-handler';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t],\n\t\t\t[\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository,\n\t\tSchemaHorizontalGridRepository,\n\t\tSchemaRowColoringRepository,\n\t\tSchemaVerticalGridRepository,\n\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../domain-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TitlePanelConfig } from './title-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FooterPanelConfig } from './footer-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../../schema/domain-api/schema.command-dispatcher';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandDispatcher) {}\n\n\tngOnChanges(simpleChanges: SimpleChanges): void {\n\n\t\tif (simpleChanges.theme2 !== undefined && simpleChanges.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/domain-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { StructureSourceWarehouse } from './source/structure-source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { sourceCommandHandlers, sourceDomainEventHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../../schema/domain-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/panel/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/panel/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../structure/paging/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../structure/empty-source/feature/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../structure/sorting/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../structure/sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../structure/field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../structure/field/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../structure/search/feature/search.feature-module';\nimport { SearchApiModule } from '../../../structure/search/domain-api/search.api-module';\nimport { SearchDomainModule } from '../../../structure/search/domain/search.domain-module';\nimport { StructureThemeGateway } from '../feature/gateway/schema/structure-theme.gateway';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...sourceDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tSearchApiModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../feature/gui.list.component';\n\nimport { ListViewFeatureModule } from '../../../structure/list/feature/list-view.feature-module';\nimport { StructureModule } from '../../../lib/structure/domain-api/structure.module';\nimport { GuiListItemComponent } from '../feature/item/gui.list-item.component';\nimport { GuiListCardComponent } from '../feature/card/gui.list-card.component';\n\nconst imports = [\n\tCommonModule,\n\tListViewFeatureModule,\n\tStructureModule.withConfig({\n\t\tcssClassName: 'list',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiListComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewFeatureModule,\n\t\tStructureModule.withConfig({\n\t\t\tcssClassName: 'list',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n\t]\n\t// declarations,\n\t// exports: exportDeclarations,\n\t// entryComponents\n})\nexport class GuiListWithGridModule {\n}\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n"]}