import { FieldCollectionFactory } from './field-collection.factory';
import { DataFieldFactory } from '../domain/field/data/data-field.factory';
import { FieldEntityIdGenerator } from '../domain/field/field-entity-id.generator';
import { InitFieldsCommandHandler } from './init/init-fields.command-handler';
import { FieldEntityFactory } from '../domain/field/field.entity-factory';
import { structureKey } from '../../structure-core/api/global/structre.key';
import { FieldsInitedEventHandler } from '../core-read/init/fields-inited.event-handler';
import { FieldDispatcher } from './field.dispatcher';
export class FieldDomainModule {
    defineAggregate() {
        return null;
    }
    registerKey() {
        return structureKey;
    }
    registerProviders(container) {
        container.provide(FieldCollectionFactory);
        container.provide(FieldEntityFactory);
        container.provide(FieldEntityIdGenerator);
        container.provide(DataFieldFactory);
        container.provide(FieldDispatcher);
    }
    registerCommandHandlers() {
        return [
            InitFieldsCommandHandler
        ];
    }
    registerDomainEventHandler() {
        return [
            FieldsInitedEventHandler
        ];
    }
    registerMultiDomainEventHandler() {
        return [];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQuZG9tYWluLW1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2J1aWxkLWNsaS9wcm9qZWN0cy9uZ3gtbGlzdC9zcmMvY29yZS9zdHJ1Y3R1cmUvZmllbGQvY29yZS9maWVsZC5kb21haW4tbW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUM1RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUN6RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHckQsTUFBTSxPQUFPLGlCQUFpQjtJQUU3QixlQUFlO1FBQ2QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsV0FBVztRQUNWLE9BQU8sWUFBWSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxpQkFBaUIsQ0FBQyxTQUFvQjtRQUNyQyxTQUFTLENBQUMsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDMUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3RDLFNBQVMsQ0FBQyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUMxQyxTQUFTLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDcEMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQsdUJBQXVCO1FBQ3RCLE9BQU87WUFDTix3QkFBd0I7U0FDeEIsQ0FBQztJQUNILENBQUM7SUFFRCwwQkFBMEI7UUFDekIsT0FBTztZQUNOLHdCQUF3QjtTQUN4QixDQUFDO0lBQ0gsQ0FBQztJQUVELCtCQUErQjtRQUM5QixPQUFPLEVBQUUsQ0FBQztJQUNYLENBQUM7Q0FFRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFnZ3JlZ2F0ZURlZmluaXRpb24sIEFnZ3JlZ2F0ZUlkLCBBZ2dyZWdhdGVSb290LCBDb21tYW5kLCBDb250YWluZXIsIERvbWFpbkV2ZW50LCBEb21haW5Qcm92aWRlcnMgfSBmcm9tICdAZ2VuZXJpYy11aS9oZXJtZXMnO1xuXG5pbXBvcnQgeyBGaWVsZENvbGxlY3Rpb25GYWN0b3J5IH0gZnJvbSAnLi9maWVsZC1jb2xsZWN0aW9uLmZhY3RvcnknO1xuaW1wb3J0IHsgRGF0YUZpZWxkRmFjdG9yeSB9IGZyb20gJy4uL2RvbWFpbi9maWVsZC9kYXRhL2RhdGEtZmllbGQuZmFjdG9yeSc7XG5pbXBvcnQgeyBGaWVsZEVudGl0eUlkR2VuZXJhdG9yIH0gZnJvbSAnLi4vZG9tYWluL2ZpZWxkL2ZpZWxkLWVudGl0eS1pZC5nZW5lcmF0b3InO1xuaW1wb3J0IHsgSW5pdEZpZWxkc0NvbW1hbmRIYW5kbGVyIH0gZnJvbSAnLi9pbml0L2luaXQtZmllbGRzLmNvbW1hbmQtaGFuZGxlcic7XG5pbXBvcnQgeyBGaWVsZEVudGl0eUZhY3RvcnkgfSBmcm9tICcuLi9kb21haW4vZmllbGQvZmllbGQuZW50aXR5LWZhY3RvcnknO1xuaW1wb3J0IHsgc3RydWN0dXJlS2V5IH0gZnJvbSAnLi4vLi4vc3RydWN0dXJlLWNvcmUvYXBpL2dsb2JhbC9zdHJ1Y3RyZS5rZXknO1xuaW1wb3J0IHsgRmllbGRzSW5pdGVkRXZlbnRIYW5kbGVyIH0gZnJvbSAnLi4vY29yZS1yZWFkL2luaXQvZmllbGRzLWluaXRlZC5ldmVudC1oYW5kbGVyJztcbmltcG9ydCB7IEZpZWxkRGlzcGF0Y2hlciB9IGZyb20gJy4vZmllbGQuZGlzcGF0Y2hlcic7XG5cblxuZXhwb3J0IGNsYXNzIEZpZWxkRG9tYWluTW9kdWxlIGltcGxlbWVudHMgRG9tYWluUHJvdmlkZXJzIHtcblxuXHRkZWZpbmVBZ2dyZWdhdGUoKTogQWdncmVnYXRlRGVmaW5pdGlvbjxhbnksIGFueSwgYW55PiB8IG51bGwge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cmVnaXN0ZXJLZXkoKTogc3RyaW5nIHtcblx0XHRyZXR1cm4gc3RydWN0dXJlS2V5O1xuXHR9XG5cblx0cmVnaXN0ZXJQcm92aWRlcnMoY29udGFpbmVyOiBDb250YWluZXIpOiB2b2lkIHtcblx0XHRjb250YWluZXIucHJvdmlkZShGaWVsZENvbGxlY3Rpb25GYWN0b3J5KTtcblx0XHRjb250YWluZXIucHJvdmlkZShGaWVsZEVudGl0eUZhY3RvcnkpO1xuXHRcdGNvbnRhaW5lci5wcm92aWRlKEZpZWxkRW50aXR5SWRHZW5lcmF0b3IpO1xuXHRcdGNvbnRhaW5lci5wcm92aWRlKERhdGFGaWVsZEZhY3RvcnkpO1xuXHRcdGNvbnRhaW5lci5wcm92aWRlKEZpZWxkRGlzcGF0Y2hlcik7XG5cdH1cblxuXHRyZWdpc3RlckNvbW1hbmRIYW5kbGVyczxJIGV4dGVuZHMgQWdncmVnYXRlSWQsIEEgZXh0ZW5kcyBBZ2dyZWdhdGVSb290PEk+LCBDIGV4dGVuZHMgQ29tbWFuZDxJPj4oKTogQXJyYXk8YW55PiB7XG5cdFx0cmV0dXJuIFtcblx0XHRcdEluaXRGaWVsZHNDb21tYW5kSGFuZGxlclxuXHRcdF07XG5cdH1cblxuXHRyZWdpc3RlckRvbWFpbkV2ZW50SGFuZGxlcjxJIGV4dGVuZHMgQWdncmVnYXRlSWQsIEUgZXh0ZW5kcyBEb21haW5FdmVudDxJPj4oKTogQXJyYXk8YW55PiB7XG5cdFx0cmV0dXJuIFtcblx0XHRcdEZpZWxkc0luaXRlZEV2ZW50SGFuZGxlclxuXHRcdF07XG5cdH1cblxuXHRyZWdpc3Rlck11bHRpRG9tYWluRXZlbnRIYW5kbGVyPEkgZXh0ZW5kcyBBZ2dyZWdhdGVJZCwgRSBleHRlbmRzIERvbWFpbkV2ZW50PEk+PigpOiBBcnJheTxhbnk+IHtcblx0XHRyZXR1cm4gW107XG5cdH1cblxufVxuXG4iXX0=