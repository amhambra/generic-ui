import { hermesFilter, hermesMap, HermesReplaySubject } from '@generic-ui/hermes';
import { StructureReadModelRepository } from '../../api/read/structure.read-model-repository';
import { InMemoryStructureReadStore } from './in-memory-structure.read-store';
import { StructureCreatedEvent } from '../../core/create/structure-created.event';
import { SetSourceLoadingEvent } from '../../../source/core/loading/set-source-loading.event';
import { PagingSetEvent } from '../../../paging/core/set/paging-set.event';
import { PrevPageEvent } from '../../../paging/core/prev-page/prev-page.event';
import { NextPageEvent } from '../../../paging/core/next-page/next-page.event';
import { PagesizeChangedEvent } from '../../../paging/core/change-pagesize/pagesize-changed.event';
import { SelectionEnabledSetEvent } from '../../../formation/core/set-enabled/selection-enabled-set.event';
import { VerticalScrollEnabledSetEvent } from '../../../vertical-formation/core/set-enabled/vertical-scroll-enabled-set.event';
import { ScrollPositionSetEvent } from '../../../vertical-formation/core/scroll-position/scroll-position-set.event';
import { SortToggledEvent } from '../../../sorting/core/toggle/sort-toggled.event';
import { OriginSetEvent } from '../../../source/core/origin/set/origin-set.event';
import { FilterToggledEvent } from '../../../filter/core/toggle/filter-toggled.event';
import { SearchPhraseSetDomainEvent } from '../../../search/core/phrase/set-phrase/search-phrase-set.domain-event';
import { SortOrderSetEvent } from '../../../sorting/core/order/sort-order-set.event';
import { RowHeightSetEvent } from '../../../vertical-formation/core/set-row-height/row-height-set.event';
import { StructureHeightSetEvent } from '../../../vertical-formation/core/container/set-height/structure-height-set.event';
import { RowHeightSetBasedOnThemeEvent } from '../../../vertical-formation/core/set-row-height-theme/row-height-set-based-on-theme.event';
import { FilterAddedEvent } from '../../../filter/core/add/filter-added.event';
import { ActiveFiltersSetEvent } from '../../../filter/core/active-filters-set.event';
import { UniqueFilterSelectedEvent } from '../../../filter/core/unique/select/unique-filter-selected.event';
import { AllUniqueFilterSelectedEvent } from '../../../filter/core/unique/select-all/all-unique-filter-selected.event';
import { UniqueFilterUnselectedEvent } from '../../../filter/core/unique/unselect/unique-filter-unselected.event';
import { AllUniqueFilterUnselectedEvent } from '../../../filter/core/unique/unselect-all/all-unique-filter-unselected.event';
export class InMemoryStructureRepository extends StructureReadModelRepository {
    constructor(inMemoryStructureReadStore) {
        super();
        this.inMemoryStructureReadStore = inMemoryStructureReadStore;
        this.structureIdToStructure = new Map();
        this.hermesStructure$ = new HermesReplaySubject(1);
    }
    getStructure(structureId) {
        return this.structureIdToStructure.get(structureId.getId());
    }
    on(structureId) {
        return this.hermesStructure$
            .toObservable()
            .pipe(hermesFilter((structureIdToStructure) => {
            const key = structureId.getId();
            return structureIdToStructure.has(key);
        }), hermesMap((structureIdToStructure) => {
            return structureIdToStructure.get(structureId.getId());
        }));
    }
    forEvents() {
        return [
            StructureCreatedEvent,
            SetSourceLoadingEvent,
            PagingSetEvent,
            PrevPageEvent,
            NextPageEvent,
            PagesizeChangedEvent,
            SelectionEnabledSetEvent,
            VerticalScrollEnabledSetEvent,
            ScrollPositionSetEvent,
            SortToggledEvent,
            FilterToggledEvent,
            SearchPhraseSetDomainEvent,
            SortOrderSetEvent,
            OriginSetEvent,
            RowHeightSetEvent,
            StructureHeightSetEvent,
            RowHeightSetBasedOnThemeEvent,
            FilterAddedEvent,
            ActiveFiltersSetEvent,
            UniqueFilterSelectedEvent,
            AllUniqueFilterSelectedEvent,
            UniqueFilterUnselectedEvent,
            AllUniqueFilterUnselectedEvent
        ];
    }
    subs(event) {
        const aggregateId = event.getAggregateId();
        const optStructure = this.inMemoryStructureReadStore.getById(aggregateId);
        optStructure.ifPresent((structureReadModelRoot) => {
            const key = structureReadModelRoot.getId().toString();
            this.structureIdToStructure.set(key, structureReadModelRoot);
            this.hermesStructure$.next(this.structureIdToStructure);
        });
    }
}
InMemoryStructureRepository.services = [InMemoryStructureReadStore];
//# sourceMappingURL=data:application/json;base64,