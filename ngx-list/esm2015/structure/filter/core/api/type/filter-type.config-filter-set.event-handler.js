import { Injectable } from '@angular/core';
import { FilterTypeArchive } from './filter-type.archive';
import { FilterTypeMap } from './filter-type-map';
import { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';
export class FilterTypeConfigFilterSetEventHandler {
    constructor(filterTypeArchive) {
        this.filterTypeArchive = filterTypeArchive;
    }
    forEvent() {
        return FilterTypesInitedEvent;
    }
    handle(filterTypesInitedEvent) {
        if (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {
            const map = filterTypesInitedEvent.getMap();
            this.filterTypeArchive.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));
        }
    }
}
FilterTypeConfigFilterSetEventHandler.decorators = [
    { type: Injectable }
];
FilterTypeConfigFilterSetEventHandler.ctorParameters = () => [
    { type: FilterTypeArchive }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLXR5cGUuY29uZmlnLWZpbHRlci1zZXQuZXZlbnQtaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2J1aWxkLWNsaS9wcm9qZWN0cy9uZ3gtbGlzdC9zcmMvc3RydWN0dXJlL2ZpbHRlci9jb3JlL2FwaS90eXBlL2ZpbHRlci10eXBlLmNvbmZpZy1maWx0ZXItc2V0LmV2ZW50LWhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUszQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFLMUYsTUFBTSxPQUFPLHFDQUFxQztJQUVqRCxZQUE2QixpQkFBb0M7UUFBcEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtJQUNqRSxDQUFDO0lBRUQsUUFBUTtRQUNQLE9BQU8sc0JBQXNCLENBQUM7SUFDL0IsQ0FBQztJQUVELE1BQU0sQ0FBQyxzQkFBOEM7UUFFcEQsSUFBSSxzQkFBc0IsQ0FBQyxhQUFhLENBQUMsd0JBQXdCLENBQUMsRUFBRTtZQUVuRSxNQUFNLEdBQUcsR0FBNEMsc0JBQXNCLENBQUMsTUFBTSxFQUFFLENBQUM7WUFFckYsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLEVBQUUsRUFBRSxJQUFJLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQzdGO0lBQ0YsQ0FBQzs7O1lBbEJELFVBQVU7OztZQU5GLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgRG9tYWluRXZlbnRIYW5kbGVyLCBEb21haW5FdmVudFR5cGUgfSBmcm9tICdAZ2VuZXJpYy11aS9oZXJtZXMnO1xuXG5pbXBvcnQgeyBTdHJ1Y3R1cmVJZCB9IGZyb20gJy4uLy4uLy4uLy4uL2NvcmUvYXBpL3N0cnVjdHVyZS5pZCc7XG5pbXBvcnQgeyBGaWx0ZXJUeXBlQXJjaGl2ZSB9IGZyb20gJy4vZmlsdGVyLXR5cGUuYXJjaGl2ZSc7XG5pbXBvcnQgeyBGaWx0ZXJUeXBlTWFwIH0gZnJvbSAnLi9maWx0ZXItdHlwZS1tYXAnO1xuaW1wb3J0IHsgRmlsdGVyVHlwZXNJbml0ZWRFdmVudCB9IGZyb20gJy4uLy4uL2RvbWFpbi90eXBlL2luaXQvZmlsdGVyLXR5cGVzLWluaXRlZC5ldmVudCc7XG5pbXBvcnQgeyBGaWx0ZXJUeXBlUmVhZE1vZGVsIH0gZnJvbSAnLi9maWx0ZXItdHlwZS5yZWFkLW1vZGVsJztcblxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRmlsdGVyVHlwZUNvbmZpZ0ZpbHRlclNldEV2ZW50SGFuZGxlciBpbXBsZW1lbnRzIERvbWFpbkV2ZW50SGFuZGxlcjxTdHJ1Y3R1cmVJZCwgRmlsdGVyVHlwZXNJbml0ZWRFdmVudD4ge1xuXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgZmlsdGVyVHlwZUFyY2hpdmU6IEZpbHRlclR5cGVBcmNoaXZlKSB7XG5cdH1cblxuXHRmb3JFdmVudCgpOiBEb21haW5FdmVudFR5cGU8RmlsdGVyVHlwZXNJbml0ZWRFdmVudD4ge1xuXHRcdHJldHVybiBGaWx0ZXJUeXBlc0luaXRlZEV2ZW50O1xuXHR9XG5cblx0aGFuZGxlKGZpbHRlclR5cGVzSW5pdGVkRXZlbnQ6IEZpbHRlclR5cGVzSW5pdGVkRXZlbnQpOiB2b2lkIHtcblxuXHRcdGlmIChmaWx0ZXJUeXBlc0luaXRlZEV2ZW50Lm9mTWVzc2FnZVR5cGUoJ0ZpbHRlclR5cGVzSW5pdGVkRXZlbnQnKSkge1xuXG5cdFx0XHRjb25zdCBtYXA6IE1hcDxzdHJpbmcsIEFycmF5PEZpbHRlclR5cGVSZWFkTW9kZWw+PiA9IGZpbHRlclR5cGVzSW5pdGVkRXZlbnQuZ2V0TWFwKCk7XG5cblx0XHRcdHRoaXMuZmlsdGVyVHlwZUFyY2hpdmUubmV4dChmaWx0ZXJUeXBlc0luaXRlZEV2ZW50LmdldEFnZ3JlZ2F0ZUlkKCksIG5ldyBGaWx0ZXJUeXBlTWFwKG1hcCkpO1xuXHRcdH1cblx0fVxuXG59XG4iXX0=