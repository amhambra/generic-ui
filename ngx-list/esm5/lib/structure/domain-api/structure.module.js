/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Inject, NgModule, PLATFORM_ID } from '@angular/core';
import { CommonModule, isPlatformBrowser } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { FabricModule } from '@generic-ui/fabric';
import { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';
import { fabricImports } from '../feature/structure-fabric.imports';
import { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';
import { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';
import { CompositionModule } from '../../composition/domain-api/composition.module';
import { StructureComponent } from '../feature/structure.component';
import { StructureHeaderComponent } from '../feature/header/structure-header.component';
import { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';
import { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';
import { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';
import { StructureContentComponent } from '../feature/content/structure-content.component';
import { StructureRowComponent } from '../feature/content/row/structure-row.component';
import { StructureCellComponent } from '../feature/content/cell/structure.cell.component';
import { StructureContainerComponent } from '../feature/content/structure-container.component';
import { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';
import { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';
import { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';
import { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';
import { StructureDefinition } from '../feature/structure-definition';
import { StructureSourceWarehouse } from './source/structure-source.warehouse';
import { StructureIdGenerator } from '../feature/structure-id.generator';
import { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';
import { LoggerModule } from '../../../common/cdk/logger/logger.module';
import { ItemEntityFactory } from '../domain/source/item.entity-factory';
import { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';
import { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';
import { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';
import { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';
import { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';
import { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';
import { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';
import { formationCommandHandlers } from './formation/formation.providers';
import { sourceCommandHandlers, sourceDomainEventHandlers } from './source/source.providers';
import { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';
import { StructureThemeConverter } from '../feature/schema/structure.theme.converter';
import { SchemaModule } from '../../../schema/domain-api/schema.module';
import { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';
import { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';
import { StructureTitlePanelComponent } from '../feature/panel/title-panel/structure.title-panel.component';
import { StructureFooterPanelComponent } from '../feature/panel/footer-panel/structure.footer-panel.component';
import { PagingDomainModule } from '../../../structure/paging/domain/paging.domain-module';
import { EmptySourceFeatureModule } from '../../../structure/empty-source/feature/empty-source.feature-module';
import { SortingDomainModule } from '../../../structure/sorting/domain/sorting.domain-module';
import { SortingFeatureModule } from '../../../structure/sorting/feature/sorting.feature-module';
import { FieldFeatureModule } from '../../../structure/field/feature/field.feature-module';
import { FieldDomainModule } from '../../../structure/field/domain/field.domain-module';
import { SearchFeatureModule } from '../../../structure/search/feature/search.feature-module';
import { SearchApiModule } from '../../../structure/search/domain-api/search.api-module';
import { SearchDomainModule } from '../../../structure/search/domain/search.domain-module';
import { StructureThemeGateway } from '../feature/gateway/schema/structure-theme.gateway';
/**
 * @return {?}
 */
export function createStructureDefinition() {
    return new StructureDefinition.DefaultBuilder().build();
}
/** @type {?} */
export var structureKey = 'StructureAggregate';
/** @type {?} */
var imports = tslib_1.__spread([
    CommonModule,
    ReactiveFormsModule,
    HermesModule,
    HermesModule.defineAggregate(structureKey, StructureAggregateFactory, InMemoryStructureAggregateRepository, CreateStructureCommandHandler, tslib_1.__spread(formationCommandHandlers, PagingDomainModule.commandHandlers(), SortingDomainModule.commandHandlers(), FieldDomainModule.commandHandlers(), SearchDomainModule.commandHandlers(), sourceCommandHandlers, structureCommandHandlers), tslib_1.__spread(structureDomainEventHandlers, sourceDomainEventHandlers, SearchDomainModule.domainEventHandlers()))
], fabricImports, [
    PagingFeatureModule,
    SortingFeatureModule,
    FieldFeatureModule,
    SearchFeatureModule,
    SearchApiModule,
    StructureInfoPanelModule,
    StructureSummariesPanelModule,
    StructureTopPanelModule,
    StructureColumnMenuModule,
    StructureColumnManagerModule,
    EmptySourceFeatureModule,
    CompositionModule,
    SchemaModule,
    LoggerModule
]);
/** @type {?} */
var declarations = [
    StructureComponent,
    StructureHeaderComponent,
    StructureHeaderColumnsComponent,
    StructureHeaderFiltersComponent,
    StructureHeaderFilterComponent,
    StructureContentComponent,
    StructureRowComponent,
    StructureCellComponent,
    StructureCellEditComponent,
    StructureCellEditBooleanComponent,
    StructureContainerComponent,
    StructureQuickFiltersComponent,
    StructureBlueprintComponent,
    StructureRowDetailViewComponent,
    StructureTitlePanelComponent,
    StructureFooterPanelComponent,
    StructureThemeGateway
];
/** @type {?} */
var entryComponents = [
    StructureColumnConfigComponent,
    StructureRowDetailViewComponent
];
/** @type {?} */
var providers = tslib_1.__spread([
    {
        provide: STRUCTURE_CSS_CLASS_NAME,
        useValue: 'structure'
    },
    {
        provide: StructureDefinition,
        useFactory: createStructureDefinition
    },
    ItemEntityFactory,
    StructureThemeConverter,
    StructureSourceWarehouse,
    StructureIdGenerator
], structureProviders);
/** @type {?} */
var exportDeclarations = tslib_1.__spread([
    FabricModule,
    StructureComponent,
    StructureThemeGateway,
    StructureHeaderComponent,
    StructureContentComponent,
    StructureRowComponent,
    StructureContainerComponent
], fabricImports, [
    PagingFeatureModule
]);
var StructureModule = /** @class */ (function () {
    function StructureModule(platformId) {
        this.platformId = platformId;
        if (isPlatformBrowser(this.platformId)) {
            window['hermesApi'].loggers = false;
        }
    }
    /**
     * @param {?=} structureConfig
     * @return {?}
     */
    StructureModule.withConfig = /**
     * @param {?=} structureConfig
     * @return {?}
     */
    function (structureConfig) {
        if (structureConfig === void 0) { structureConfig = {
            cssClassName: '',
            hermesModuleConfig: { loggers: false }
        }; }
        return {
            ngModule: StructureModule,
            providers: tslib_1.__spread([
                {
                    provide: STRUCTURE_CSS_CLASS_NAME,
                    useValue: structureConfig.cssClassName
                },
                { provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },
                { provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers }
            ], providers)
        };
    };
    StructureModule.exportDeclarations = tslib_1.__spread(exportDeclarations);
    StructureModule.decorators = [
        { type: NgModule, args: [{
                    imports: imports,
                    declarations: declarations,
                    exports: exportDeclarations,
                    entryComponents: entryComponents
                },] }
    ];
    /** @nocollapse */
    StructureModule.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    return StructureModule;
}());
export { StructureModule };
if (false) {
    /** @type {?} */
    StructureModule.exportDeclarations;
    /**
     * @type {?}
     * @private
     */
    StructureModule.prototype.platformId;
}
//# sourceMappingURL=data:application/json;base64,