import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
import { monthsPerQuarters } from '../../../data/months-per-quarters';
import { FabricCalendarView } from '../../../models/fabric-calendar-view';
import { FabricDateUtils } from '../../../../../common/date-utils/fabric-date-utils';
import { FabricDatePickerDefaultActiveYear } from '../../fabric-date-picker-default-values';
import * as i0 from "@angular/core";
import * as i1 from "../../fabric-date-picker-calendar.service";
import * as i2 from "../../fabric-date-picker-calendar-view.service";
import * as i3 from "@angular/common";
export class FabricDatePickerMonthsViewComponent {
    constructor(calendarService, calendarViewService) {
        this.calendarService = calendarService;
        this.calendarViewService = calendarViewService;
        this.activeYear = FabricDatePickerDefaultActiveYear;
        this.currentDay = new Date();
        this.monthsPerQuarters = monthsPerQuarters;
    }
    isMonth(date, month) {
        return FabricDateUtils.isMonth(date, month, this.activeYear);
    }
    selectMonth(month) {
        this.calendarService.selectMonth(month);
        this.calendarViewService.switchView(FabricCalendarView.DAYS);
    }
}
FabricDatePickerMonthsViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: FabricDatePickerMonthsViewComponent, deps: [{ token: i1.FabricDatePickerCalendarService }, { token: i2.FabricDatePickerCalendarViewService }], target: i0.ɵɵFactoryTarget.Component });
FabricDatePickerMonthsViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: FabricDatePickerMonthsViewComponent, selector: "gui-date-picker-months-view", inputs: { selectedDate: "selectedDate", activeYear: "activeYear" }, ngImport: i0, template: "<div class=\"gui-display-grid gui-grid-rows-gap-8 gui-py-6 gui-date-picker-view-border-top\">\n\t<div *ngFor=\"let quarter of monthsPerQuarters\"\n\t\t class=\"gui-display-grid gui-grid-cols-3\">\n\t\t<div (click)=\"selectMonth(month.nr)\"\n\t\t\t *ngFor=\"let month of quarter\"\n\t\t\t [class.gui-date-picker-current-month]=\"isMonth(currentDay, month.nr)\"\n\t\t\t [class.gui-date-picker-selected-month]=\"isMonth(selectedDate, month.nr)\"\n\t\t\t class=\"gui-date-picker-cell gui-date-picker-month\">\n\t\t\t{{month.name}}\n\t\t</div>\n\t</div>\n</div>\n", directives: [{ type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: FabricDatePickerMonthsViewComponent, decorators: [{
            type: Component,
            args: [{ selector: 'gui-date-picker-months-view', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"gui-display-grid gui-grid-rows-gap-8 gui-py-6 gui-date-picker-view-border-top\">\n\t<div *ngFor=\"let quarter of monthsPerQuarters\"\n\t\t class=\"gui-display-grid gui-grid-cols-3\">\n\t\t<div (click)=\"selectMonth(month.nr)\"\n\t\t\t *ngFor=\"let month of quarter\"\n\t\t\t [class.gui-date-picker-current-month]=\"isMonth(currentDay, month.nr)\"\n\t\t\t [class.gui-date-picker-selected-month]=\"isMonth(selectedDate, month.nr)\"\n\t\t\t class=\"gui-date-picker-cell gui-date-picker-month\">\n\t\t\t{{month.name}}\n\t\t</div>\n\t</div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.FabricDatePickerCalendarService }, { type: i2.FabricDatePickerCalendarViewService }]; }, propDecorators: { selectedDate: [{
                type: Input
            }], activeYear: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFicmljLWRhdGUtcGlja2VyLW1vbnRocy12aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2J1aWxkLWNsaS9wcm9qZWN0cy9ndWktZmFicmljL3NyYy9mb3JtL2RhdGUtcGlja2VyL2NhbGVuZGFyL3ZpZXcvbW9udGhzL2ZhYnJpYy1kYXRlLXBpY2tlci1tb250aHMtdmlldy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvZ3VpLWZhYnJpYy9zcmMvZm9ybS9kYXRlLXBpY2tlci9jYWxlbmRhci92aWV3L21vbnRocy9mYWJyaWMtZGF0ZS1waWNrZXItbW9udGhzLXZpZXcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFdEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFFMUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9EQUFvRCxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHlDQUF5QyxDQUFDOzs7OztBQVE1RixNQUFNLE9BQU8sbUNBQW1DO0lBWS9DLFlBQTZCLGVBQWdELEVBQ3pELG1CQUF3RDtRQUQvQyxvQkFBZSxHQUFmLGVBQWUsQ0FBaUM7UUFDekQsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQztRQVA1RSxlQUFVLEdBQVcsaUNBQWlDLENBQUM7UUFFdkQsZUFBVSxHQUFTLElBQUksSUFBSSxFQUFFLENBQUM7UUFFckIsc0JBQWlCLEdBQUcsaUJBQWlCLENBQUM7SUFJL0MsQ0FBQztJQUVELE9BQU8sQ0FBQyxJQUFVLEVBQUUsS0FBYTtRQUNoQyxPQUFPLGVBQWUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUVELFdBQVcsQ0FBQyxLQUFhO1FBQ3hCLElBQUksQ0FBQyxlQUFlLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxVQUFVLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUQsQ0FBQzs7aUlBdkJXLG1DQUFtQztxSEFBbkMsbUNBQW1DLHVJQ2RoRCxnakJBWUE7NEZERWEsbUNBQW1DO2tCQU4vQyxTQUFTOytCQUNDLDZCQUE2QixpQkFFeEIsaUJBQWlCLENBQUMsSUFBSSxtQkFDcEIsdUJBQXVCLENBQUMsTUFBTTt3S0FLL0MsWUFBWTtzQkFEWCxLQUFLO2dCQUlOLFVBQVU7c0JBRFQsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgbW9udGhzUGVyUXVhcnRlcnMgfSBmcm9tICcuLi8uLi8uLi9kYXRhL21vbnRocy1wZXItcXVhcnRlcnMnO1xuaW1wb3J0IHsgRmFicmljRGF0ZVBpY2tlckNhbGVuZGFyVmlld1NlcnZpY2UgfSBmcm9tICcuLi8uLi9mYWJyaWMtZGF0ZS1waWNrZXItY2FsZW5kYXItdmlldy5zZXJ2aWNlJztcbmltcG9ydCB7IEZhYnJpY0NhbGVuZGFyVmlldyB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9mYWJyaWMtY2FsZW5kYXItdmlldyc7XG5pbXBvcnQgeyBGYWJyaWNEYXRlUGlja2VyQ2FsZW5kYXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vZmFicmljLWRhdGUtcGlja2VyLWNhbGVuZGFyLnNlcnZpY2UnO1xuaW1wb3J0IHsgRmFicmljRGF0ZVV0aWxzIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29tbW9uL2RhdGUtdXRpbHMvZmFicmljLWRhdGUtdXRpbHMnO1xuaW1wb3J0IHsgRmFicmljRGF0ZVBpY2tlckRlZmF1bHRBY3RpdmVZZWFyIH0gZnJvbSAnLi4vLi4vZmFicmljLWRhdGUtcGlja2VyLWRlZmF1bHQtdmFsdWVzJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnZ3VpLWRhdGUtcGlja2VyLW1vbnRocy12aWV3Jyxcblx0dGVtcGxhdGVVcmw6ICdmYWJyaWMtZGF0ZS1waWNrZXItbW9udGhzLXZpZXcuY29tcG9uZW50Lmh0bWwnLFxuXHRlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuXHRjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBGYWJyaWNEYXRlUGlja2VyTW9udGhzVmlld0NvbXBvbmVudCB7XG5cblx0QElucHV0KClcblx0c2VsZWN0ZWREYXRlPzogRGF0ZTtcblxuXHRASW5wdXQoKVxuXHRhY3RpdmVZZWFyOiBudW1iZXIgPSBGYWJyaWNEYXRlUGlja2VyRGVmYXVsdEFjdGl2ZVllYXI7XG5cblx0Y3VycmVudERheTogRGF0ZSA9IG5ldyBEYXRlKCk7XG5cblx0cmVhZG9ubHkgbW9udGhzUGVyUXVhcnRlcnMgPSBtb250aHNQZXJRdWFydGVycztcblxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGNhbGVuZGFyU2VydmljZTogRmFicmljRGF0ZVBpY2tlckNhbGVuZGFyU2VydmljZSxcblx0XHRcdFx0cHJpdmF0ZSByZWFkb25seSBjYWxlbmRhclZpZXdTZXJ2aWNlOiBGYWJyaWNEYXRlUGlja2VyQ2FsZW5kYXJWaWV3U2VydmljZSkge1xuXHR9XG5cblx0aXNNb250aChkYXRlOiBEYXRlLCBtb250aDogbnVtYmVyKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIEZhYnJpY0RhdGVVdGlscy5pc01vbnRoKGRhdGUsIG1vbnRoLCB0aGlzLmFjdGl2ZVllYXIpO1xuXHR9XG5cblx0c2VsZWN0TW9udGgobW9udGg6IG51bWJlcik6IHZvaWQge1xuXHRcdHRoaXMuY2FsZW5kYXJTZXJ2aWNlLnNlbGVjdE1vbnRoKG1vbnRoKTtcblx0XHR0aGlzLmNhbGVuZGFyVmlld1NlcnZpY2Uuc3dpdGNoVmlldyhGYWJyaWNDYWxlbmRhclZpZXcuREFZUyk7XG5cdH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJndWktZGlzcGxheS1ncmlkIGd1aS1ncmlkLXJvd3MtZ2FwLTggZ3VpLXB5LTYgZ3VpLWRhdGUtcGlja2VyLXZpZXctYm9yZGVyLXRvcFwiPlxuXHQ8ZGl2ICpuZ0Zvcj1cImxldCBxdWFydGVyIG9mIG1vbnRoc1BlclF1YXJ0ZXJzXCJcblx0XHQgY2xhc3M9XCJndWktZGlzcGxheS1ncmlkIGd1aS1ncmlkLWNvbHMtM1wiPlxuXHRcdDxkaXYgKGNsaWNrKT1cInNlbGVjdE1vbnRoKG1vbnRoLm5yKVwiXG5cdFx0XHQgKm5nRm9yPVwibGV0IG1vbnRoIG9mIHF1YXJ0ZXJcIlxuXHRcdFx0IFtjbGFzcy5ndWktZGF0ZS1waWNrZXItY3VycmVudC1tb250aF09XCJpc01vbnRoKGN1cnJlbnREYXksIG1vbnRoLm5yKVwiXG5cdFx0XHQgW2NsYXNzLmd1aS1kYXRlLXBpY2tlci1zZWxlY3RlZC1tb250aF09XCJpc01vbnRoKHNlbGVjdGVkRGF0ZSwgbW9udGgubnIpXCJcblx0XHRcdCBjbGFzcz1cImd1aS1kYXRlLXBpY2tlci1jZWxsIGd1aS1kYXRlLXBpY2tlci1tb250aFwiPlxuXHRcdFx0e3ttb250aC5uYW1lfX1cblx0XHQ8L2Rpdj5cblx0PC9kaXY+XG48L2Rpdj5cbiJdfQ==