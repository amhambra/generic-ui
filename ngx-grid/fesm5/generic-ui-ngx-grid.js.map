{"version":3,"file":"generic-ui-ngx-grid.js","sources":["ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/aggregation/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/cell-editing/grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/align/grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/global-structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-read-model.service.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-column-header.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/global-composition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition-event.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.event-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/search/local-structure-search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/schema-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/schema-top-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/schema-bottom-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/base.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/type.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/column-header.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"sourcesContent":["export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\taggregation?: GuiColumnAggregation;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/command/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../../lib/composition/domain/column-aggregation.config';\nimport { AggregationType } from '../../../../../../lib/structure/domain/structure/command/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column-cell-editing.config';\n\nexport class GridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../ui-api/grid.api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column-align';\n\nexport class GridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './aggregation/grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\nimport { GridColumnCellEditingConverter } from './cell-editing/grid.column-cell-editing.converter';\nimport { GridColumnAlignConverter } from './align/grid.column-align.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/structure/domain/schema/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/structure/ui-api/schema/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/ui/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../ui-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable, Subject } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\nimport { Structure } from './structure';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport abstract class StructureRepository {\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<Structure>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent): void;\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Paging } from './paging';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { StructureId } from './structure-id';\n\nexport const globalStructureId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Paging } from '../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class PagingReadModelService {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { PagingConfig } from '../../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { PagingConfig } from '../paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class PagingCommandService {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class SourceReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = globalStructureId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = globalStructureId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate pagingCommandService: PagingCommandService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","export class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.10.1\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureAggregate> {\n}\n","import { ItemEntity } from '../../../source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { SelectedRowsList } from './selected-rows/selected-rows-list';\n\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './command/formation-aggregate';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaColumnHeader } from './schema-column-header';\nimport { SchemaCssClass } from './schema-css-class';\n\nexport class Schema {\n\n\tconstructor(private readonly width: number,\n\t\t\t\tprivate readonly height: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly theme: SchemaTheme,\n\t\t\t\tprivate readonly columnHeader: SchemaColumnHeader,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGridEnabled;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGridEnabled;\n\t}\n\n\tgetColumnHeader(): SchemaColumnHeader {\n\t\treturn this.columnHeader;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.isVerticalGridEnabled(),\n\t\t\tthis.isHorizontalGridEnabled(),\n\t\t\tthis.getTheme(),\n\t\t\tthis.getRowColoring()\n\t\t);\n\t}\n\n}\n","export class SchemaColumnHeader {\n\n\tconstructor(private readonly top: boolean,\n\t\t\t\tprivate readonly bottom: boolean) {\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaAggregate } from './command/schema-aggregate';\nimport { Schema } from './read/schema';\nimport { ColumnHeaderEntity } from './command/column-header/column-header.entity';\nimport { SchemaColumnHeader } from './read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaConverter {\n\n\tconvert(aggregate: SchemaAggregate): Schema {\n\n\t\tconst columnHeader = aggregate.getColumnHeader();\n\n\t\treturn new Schema(\n\t\t\taggregate.getWidth(),\n\t\t\taggregate.getHeight(),\n\t\t\taggregate.getContainerHeight(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getTheme(),\n\t\t\tthis.convertColumnHeader(columnHeader),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n\tprivate convertColumnHeader(columnHeader: ColumnHeaderEntity): SchemaColumnHeader {\n\t\treturn new SchemaColumnHeader(columnHeader.isHeaderOnTop(), columnHeader.isHeaderOnBottom());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregate } from './command/paging.aggregate';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingAggregate): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","export class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from './command/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","export class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../command/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tcontainerHeight = verticalFormation.calcFullHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, containerHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { Formation } from '../../formation/read/formation';\nimport { Schema } from '../../schema/read/schema';\nimport { Paging } from '../../paging/read/paging';\nimport { Source } from '../../source/read/source';\nimport { ItemEntity } from '../../source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\n\n\nexport class Structure extends ReadModel {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly schema: Schema;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tformation: Formation,\n\t\t\t\tschema: Schema,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.schema = schema;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetSchema(): Schema {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.verticalFormation.getContainerHeight();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\tif (this.getSchema().getHeight() > 150) {\n\t\t\treturn this.getSource().isLoading();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isTopHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.topHeader to presentation\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isBottomHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.bottomHeader to presentation\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { Entity, RandomStringGenerator } from '@generic-ui/hermes';\n\n\n@Entity\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { SchemaConverter } from '../schema/schema.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './read/vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from './command/structure.aggregate';\nimport { Structure } from './read/structure';\nimport { OriginItemEntity } from '../source/command/origin/origin-item-entity';\nimport { ItemEntity } from '../source/item.entity';\n\n\n@Injectable()\nexport class StructureConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate schemaConverter: SchemaConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): Structure {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tschemaAggregate = aggregate.getSchema(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\tsourceQuery = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new Structure(\n\t\t\taggregate.getId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.schemaConverter.convert(schemaAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(sourceQuery),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.id, originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureConverter } from '../../../../domain/structure/structure.converter';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<Structure, StructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): Structure {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowHeightSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../structure-id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../command/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../../infrastructure/in-memory/structure/read/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../command/vertical-formation/set-row-height/row-height-set.event';\nimport { Structure } from '../structure';\nimport { SchemaThemeSetEvent } from '../../../schema/command/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureQueryStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structure: Structure) => {\n\t\t\t\t\tconst verticalFormation = structure.getVerticalFormation(),\n\t\t\t\t\t\tstructureId = structure.getId();\n\n\t\t\t\t\tthis.next(structureId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled())\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = globalStructureId): Observable<Structure> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(aggregateId: AggregateId = globalStructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(aggregateId);\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from './schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SchemaRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Schema } from '../../domain/schema/read/schema';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\n\n\n@Injectable()\nexport class SchemaReadModelService {\n\n\tconstructor(private schemaRepository: SchemaRepository) {\n\t}\n\n\tonSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.schemaRepository.on(structureId);\n\t}\n\n\tonSingleSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.onSchema(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getContainerHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(structureId: StructureId = globalStructureId): Observable<SchemaCssClass> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleTheme(structureId: StructureId = globalStructureId): Observable<SchemaTheme> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1),\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getColumnHeader();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, structureId: StructureId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelService\n\t\t\t.onSingleTheme(structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\n\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t</ng-container>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span\n\t\t\t\t\t\t(click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate dialog: FabricDialogService,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.structureId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../composition-id';\nimport { Composition } from './composition';\nimport { DomainEventBus, ReadModelRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionRepository extends ReadModelRepository {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<Composition>>;\n}\n","import { CompositionId } from './composition-id';\n\nexport const globalCompositionId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionRepository } from '../domain/read/composition.repository';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { Composition } from '../domain/read/composition';\nimport { CellTemplateWithContext } from '../domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain/read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/command/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/command/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelService {\n\n\tconstructor(private compositionRepository: CompositionRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = globalCompositionId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = globalCompositionId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = globalCompositionId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { CreateCompositionCommand } from './create-composition/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { ColumnParams } from '../domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../domain/command/column/column.id';\n\n\n@Injectable()\nexport class CompositionCommandService {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, true);\n\t}\n\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, false);\n\t}\n\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, columnId);\n\t}\n\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, columnId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../composition/domain/composition-id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-bold\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-italic\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element | date: 'dd/MM/yyyy' }}</span> \n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\t\t\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template> \n\t\t\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from '../../cell-view';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { ColumnAlign } from '../../column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity {\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from '../../column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign();\n\t\t}\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { SortOrder } from '../../command/column/sort/sort-order';\nimport { ColumnId } from '../../command/column/column.id';\nimport { ColumnAlign } from '../../column-align';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../command/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\nimport { CellView } from '../../cell-view';\nimport { ColumnAlign } from '../../column-align';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\n\t\treturn this.templateFun(this.findValue(entity, searchPhrase));\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn txt;\n\t\t} else {\n\t\t\treturn this.accessor(entity);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnField } from '../../command/column/field/column-field';\nimport { SortOrder } from '../../command/column/sort/sort-order';\nimport { HeaderTemplate } from '../../column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { ColumnId } from '../../command/column/column.id';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\nimport { ColumnAlign } from '../../column-align';\n\n\nexport class ColumnDefinition {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnId: ColumnId,\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tthis.field = field;\n\t\tthis.columnId = columnId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../command/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../cell-view';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tcolumn.getColumnId(),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tactiveColumn.getColumnId(),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\n\n\nexport class Composition extends ReadModel {\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: Composition): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionAggregate } from './command/composition.aggregate';\nimport { Composition } from './read/composition';\nimport { ColumnEntity } from './command/column/column.entity';\nimport { ColumnDefinition } from './read/definition/column-definition';\nimport { ActiveColumnEntity } from './command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): Composition {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\tid = aggregate.getId();\n\n\t\treturn new Composition(id, ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Composition } from '../../../domain/read/composition';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionConverter } from '../../../domain/composition.converter';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<Composition, CompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): Composition {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionRepository } from '../../../domain/read/composition.repository';\nimport { Composition } from '../../../domain/read/composition';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/command/create-composition/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/command/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/command/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/command/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/command/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/command/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/command/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/command/column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, Composition>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, Composition>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionQueryStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Readonly<Composition>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, Composition>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, Composition>) => compositionIdToComposition.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionQueryStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: Composition) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './command/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './command/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionRepository } from '../../domain/read/composition.repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionQueryProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","export class ColumnId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(columnId: ColumnId): boolean {\n\t\treturn this.id === columnId.getId();\n\t}\n\n}\n","import { CellView } from '../../../cell-view';\nimport { ColumnAlign } from '../../../column-align';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(): ColumnAlign;\n}\n","import { ValueObject } from '@generic-ui/hermes';\n\nimport { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../../../column-align';\nimport { CellView } from '../../../../cell-view';\n\n\n@ValueObject\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ValueObject } from '@generic-ui/hermes';\n\nimport { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../../../column-align';\nimport { CellView } from '../../../../cell-view';\n\n\n@ValueObject\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.CHECKBOX;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.CENTER;\n\t}\n}\n","import { ValueObject } from '@generic-ui/hermes';\n\nimport { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../../../column-align';\nimport { CellView } from '../../../../cell-view';\n\n\n@ValueObject\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ValueObject } from '@generic-ui/hermes';\n\nimport { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../../../column-align';\nimport { CellView } from '../../../../cell-view';\n\n\n@ValueObject\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ValueObject } from '@generic-ui/hermes';\n\nimport { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../../../column-align';\nimport { CellView } from '../../../../cell-view';\n\n\n@ValueObject\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent): DomainEvent;\n\tconvert(events: Array<AggregateEvent>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent | Array<AggregateEvent>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../../structure/domain/source/command/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition-id';\nimport { CompositionColumnsSetEvent } from '../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/command/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\t// onWidthChanged(compositionId: CompositionId): Observable<number> {\n\t// \treturn this.domainEventBus\n\t// \t\t\t   .ofEvent(\n\t// \t\t\t\t   CompositionColumnsSetEvent\n\t// \t\t\t   )\n\t// \t\t\t   .pipe(\n\t// \t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t// \t\t\t   );\n\t// }\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/domain/structure/command/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/domain/structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../../../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../../structure/domain/structure/command/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../../../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../../structure/domain/structure/command/field/data-type/type.field';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionQueryProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/command/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/command/composition-event.converter';\nimport { ColumnFieldFactory } from '../domain/command/column/field/colum-field.factory';\nimport { CompositionEventService } from './composition.event-service';\nimport { CompositionReadModelService } from './composition-read-model.service';\nimport { CompositionCommandService } from './composition.command-service';\nimport { CompositionConverter } from '../domain/composition.converter';\nimport { EditTemplateRepository } from '../domain/read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../domain/read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../domain/read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../domain/read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../domain/read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/command/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/command/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/command/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionQueryProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionConverter,\n\n\tCompositionCommandService,\n\tCompositionReadModelService,\n\tCompositionEventService\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../composition-id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId());\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getColumnId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../../../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getColumnId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { Aggregate, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\n\n\n@RootAggregate\nexport class CompositionAggregate extends Aggregate {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getColumnId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getColumnId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateCommandHandler, AggregateRepository, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements AggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from '../domain/read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../domain/read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../domain/read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../domain/read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../domain/read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../ui/column-query.component';\nimport { FunctionViewComponent } from '../domain/read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/command/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/command/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/command/create-composition/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/command/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/command/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/command/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/command/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/command/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/command/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/command/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/command/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from '../domain/read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from '../domain/read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../domain/read/view/percentage/percentage-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { PagingConfigWithId } from '../paging-config-with-id';\nimport { PagingConfig } from '../paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../structure-id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\n// Aggregate\nexport class PagingAggregate {\n\n\tprivate readonly events: Array<AggregateEvent> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingAggregate(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingAggregate {\n\n\t\tconst defaultPagingDefinition = PagingAggregate.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingAggregate(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { PagingAggregate } from './paging.aggregate';\nimport { PagingConfigWithId } from '../paging-config-with-id';\n\n\n@Injectable()\nexport class PagingAggregateFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingAggregate {\n\t\treturn PagingAggregate.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingAggregate {\n\t\treturn PagingAggregate.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandService } from '../../../ui-api/paging/paging-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingAggregateFactory } from '../../../domain/paging/command/paging.aggregate-factory';\nimport { PagingDispatcher } from '../../../domain/paging/command/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandService extends PagingCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingAggregateFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingReadModelService } from '../../../ui-api/paging/paging-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingRepository } from '../../../domain/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class LocalPagingReadModelService extends PagingReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetSchemaCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'SetSchemaCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\nimport { SchemaTheme } from '../../schema-theme';\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SchemaRowColoring } from '../../../schema-row-coloring';\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(structureId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaTopHeaderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaTopHeaderCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaBottomHeaderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaBottomHeaderCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SetSchemaCommand } from './set/set-schema.command';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\nimport { SchemaTheme } from '../schema-theme';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { globalStructureId } from '../../global-structure-id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SetRowColoringCommand } from './coloring/set/set-row-coloring.command';\nimport { ChangeSchemaTopHeaderCommand } from './column-header/top/change-schema-top-header.command';\nimport { ChangeSchemaBottomHeaderCommand } from './column-header/bottom/change-schema-bottom-header.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSchema(structureId: StructureId, height: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaCommand(structureId, height));\n\t}\n\n\tchangeVerticalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(structureId, enabled));\n\t}\n\n\tchangeHorizontalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(structureId, enabled));\n\t}\n\n\tsetTheme(structureId: StructureId, theme: SchemaTheme): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(structureId, theme));\n\t}\n\n\tsetRowColoring(structureId: StructureId = globalStructureId, coloring: SchemaRowColoring): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(structureId, coloring));\n\t}\n\n\tchangeTopHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaTopHeaderCommand(structureId, enabled));\n\t}\n\n\tchangeBottomHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaBottomHeaderCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaCommandService implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject<void>();\n\n\tconstructor(private schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tsetHeight(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tchangeVerticalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeVerticalGrid(structureId, enabled);\n\t}\n\n\tchangeHorizontalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeHorizontalGrid(structureId, enabled);\n\t}\n\n\tsetTheme(theme: SchemaTheme, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setTheme(structureId, theme);\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setRowColoring(structureId, coloring);\n\t}\n\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeTopHeader(structureId, enabled);\n\t}\n\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeBottomHeader(structureId, enabled);\n\t}\n\n\ttoggleVerticalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.verticalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeVerticalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleHorizontalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.horizontalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeHorizontalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleTopHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isTopHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeTopHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n\ttoggleBottomHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isBottomHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeBottomHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCommandService } from '../../../ui-api/schema/schema-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaDispatcher } from '../../../domain/schema/command/schema.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandService extends SchemaCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaQueryService: SchemaReadModelService,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, schemaQueryService);\n\t}\n\n\tsetDefaultSchema(): void {\n\t\tsuper.setSchema(Number.MAX_SAFE_INTEGER, this.structureId);\n\t}\n\n\t@Override\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSchema(height, this.structureId);\n\t}\n\n\t@Override\n\tsetHeight(height: number): void {\n\t\tsuper.setHeight(height, this.structureId);\n\t}\n\n\t@Override\n\tchangeVerticalGrid(enabled: boolean): void {\n\t\tsuper.changeVerticalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeHorizontalGrid(enabled: boolean): void {\n\t\tsuper.changeHorizontalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setRowColoring(coloring, this.structureId);\n\t}\n\n\t@Override\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeTopHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeBottomHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleVerticalGrid(): void {\n\t\tsuper.toggleVerticalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleHorizontalGrid(): void {\n\t\tsuper.toggleHorizontalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleTopHeader(): void {\n\t\tsuper.toggleTopHeader(this.structureId);\n\t}\n\n\t@Override\n\ttoggleBottomHeader(): void {\n\t\tsuper.toggleBottomHeader(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaRepository } from '../../../domain/schema/read/schema-repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Schema } from '../../../domain/schema/read/schema';\nimport { SchemaCssClass } from '../../../domain/schema/read/schema-css-class';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaColumnHeader } from '../../../domain/schema/read/schema-column-header';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\n\n\n@Injectable()\nexport class LocalSchemaReadModelService extends SchemaReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaRepository: SchemaRepository) {\n\t\tsuper(schemaRepository);\n\t}\n\n\t@Override\n\tonSchema(): Observable<Schema> {\n\t\treturn super.onSchema(this.structureId);\n\t}\n\n\t@Override\n\tonSingleSchema(): Observable<Schema> {\n\t\treturn super.onSingleSchema(this.structureId);\n\t}\n\n\t@Override\n\tonHeight(): Observable<number> {\n\t\treturn super.onHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.structureId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme>  {\n\t\treturn super.onSingleTheme(this.structureId);\n\t}\n\n\t@Override\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn super.onColumnHeader(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure-id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationDispatcher } from '../../../domain/formation/command/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandService extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Formation } from './formation';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { Formation } from '../../domain/formation/read/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = globalStructureId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../domain/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelService extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FilterConfig } from '../../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/command/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/command/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortingConfig } from '../../../../../ui-api/structure/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { QuickFiltersConfig } from '../../../../../ui-api/structure/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortOrder } from '../../../../../../composition/domain/command/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SearchConfig } from '../../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { globalStructureId } from '../../../../global-structure-id';\nimport { StructureId } from '../../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../structure-id';\nimport { globalStructureId } from '../../../../global-structure-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = globalStructureId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { StructureId } from '../../../structure-id';\nimport { globalStructureId } from '../../../global-structure-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../read/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { CreateStructureCommand } from '../../domain/structure/command/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/command/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { ToggleSortCommand } from '../../domain/structure/command/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/command/field/init/init-fields.command';\nimport { SortOrder } from '../../../composition/domain/command/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../../domain/structure/command/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\n\n\n@Injectable()\nexport class StructureCommandService {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/command/search/structure.search.dispatcher';\n\n\n@Injectable()\nexport class LocalStructureCommandService extends StructureCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureReadModelService extends StructureReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<Structure> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/domain/command/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandService extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = globalStructureId): void {\n\n\t\tconst itemId$ = this.sourceQueryService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandService extends SourceCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceQueryService: SourceReadModelService) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceQueryService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../../domain/source/read/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelService extends SourceReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandService } from '../../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionDispatcher } from '../../../../composition/domain/command/composition.dispatcher';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { ColumnParams } from '../../../../composition/domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../../../../composition/domain/command/column/column.id';\n\n\n@Injectable()\nexport class LocalCompositionCommandService extends CompositionCommandService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.enableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.disableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveLeft(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveRight(columnId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionRepository } from '../../../../composition/domain/read/composition.repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionReadModelService extends CompositionReadModelService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/command/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { LocalPagingCommandService } from './paging/local-paging-command.service';\nimport { LocalPagingReadModelService } from './paging/local-paging-read-model.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { LocalSchemaCommandService } from './schema/local-schema-command.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { LocalSchemaReadModelService } from './schema/local-schema-read-model.service';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandService } from './formation/local-formation-command.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelService } from './formation/local-formation-read-model.service';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { LocalStructureCommandService } from './structure/local-structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { LocalStructureReadModelService } from './structure/local-structure-read-model.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { LocalSourceCommandService } from './source/local-source-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { LocalSourceReadModelService } from './source/local-source-read-model.service';\nimport { LocalCompositionCommandService } from './composition/local-composition-command.service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { LocalCompositionReadModelService } from './composition/local-composition-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\nimport { LocalStructureSearchDispatcher } from './search/local-structure-search.dispatcher';\n\nexport const localProviders = [\n\t{ provide: PagingCommandService, useClass: LocalPagingCommandService },\n\t{ provide: PagingReadModelService, useClass: LocalPagingReadModelService },\n\t{ provide: SchemaCommandService, useClass: LocalSchemaCommandService },\n\t{ provide: SchemaReadModelService, useClass: LocalSchemaReadModelService },\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandService },\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelService },\n\t{ provide: StructureCommandService, useClass: LocalStructureCommandService },\n\t{ provide: StructureReadModelService, useClass: LocalStructureReadModelService },\n\t{ provide: SourceCommandService, useClass: LocalSourceCommandService },\n\t{ provide: SourceReadModelService, useClass: LocalSourceReadModelService },\n\n\t{ provide: CompositionCommandService, useClass: LocalCompositionCommandService },\n\t{ provide: CompositionReadModelService, useClass: LocalCompositionReadModelService },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchDispatcher }\n];\n","import { ElementRef, Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaCssClassManager implements OnDestroy {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(private rendererFactory2: RendererFactory2,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tinit(elementRef: ElementRef, structureId: StructureId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n@Injectable()\nexport class StructureAggregationCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandService } from '../../../ui-api/structure/aggregation/structure.aggregation.command-service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","export class ColumnMenuConfig {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure-id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../ui-api/structure/search/structure-search-event.service';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandService,\n\t\tprotected pagingCommandService: PagingCommandService,\n\t\tprotected pagingEventService: PagingEventService,\n\t\tprotected sourceCommandService: SourceCommandService,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandService: SchemaCommandService,\n\t\tprotected compositionCommandService: CompositionCommandService,\n\t\tprotected compositionEventService: CompositionEventService,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeTopHeader(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeBottomHeader(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.schemaCommandService.setHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { NextPageEvent } from '../../domain/paging/command/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/command/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/command/page/page-changed.event';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/command/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingQueryService: PagingReadModelService) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/command/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelService } from '../structure/structure-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureQueryService: StructureReadModelService) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureQueryService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: Structure) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from '../../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure-id';\nimport { CompositionId } from '../../composition/domain/composition-id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { SchemaColumnHeader } from '../domain/schema/read/schema-column-header';\nimport { Structure } from '../domain/structure/read/structure';\nimport { PagingCommandService } from '../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../ui-api/source/source-command.service';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandService } from '../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../ui-api/structure/structure-read-model.service';\nimport { CompositionReadModelService } from '../../composition/ui-api/composition-read-model.service';\nimport { SchemaReadModelService } from '../ui-api/schema/schema-read-model.service';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../ui-api/structure/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-aggregation.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'../../composition/ui/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t// '[style.min-height.px]': 'structureHeight',\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tstructureHeight: number;\n\n\tprivate columnHeader: SchemaColumnHeader;\n\n\tprivate structure: Structure;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandService,\n\t\t\t\tpagingEventService: PagingEventService,\n\t\t\t\tsourceCommandService: SourceCommandService,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandService: SchemaCommandService,\n\t\t\t\tcompositionCommandService: CompositionCommandService,\n\t\t\t\tcompositionEventService: CompositionEventService,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandService,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate schemaStylesManager: SchemaCssClassManager) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandService,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService\n\t\t);\n\n\t\tthis.structureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHeight()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((height: number) => {\n\t\t\t\tthis.structureHeight = height;\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onColumnHeader()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columnHeader: SchemaColumnHeader) => {\n\t\t\t\tthis.columnHeader = columnHeader;\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\n\t\t\t\tthis.loaderEnabled = structure.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structure.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.structureId);\n\n\t\tthis.compositionQueryService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureFilterReadModelRepository {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate structureId: StructureId, // REfactor\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationQueryService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\t\t\tfocus: forceCheck\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('container', { static: false })\n\tcontainerRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\t/**\n\t\t * TODO One source of truth\n\t\t *\n\t\t * There should only one sub here.\n\t\t */\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\trowHeight = combine[1];\n\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.setHeight(source.length * rowHeight);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.schemaQueryService.onContainerHeight(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\theight: number = combine[1],\n\t\t\t\t\trowHeight = combine[2];\n\n\t\t\t\tconst sourceSizeHeight = source.length * rowHeight;\n\n\t\t\t\tif (sourceSizeHeight > height) {\n\t\t\t\t\tthis.setHeight(height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setHeight(sourceSizeHeight);\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t// never runs ??\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: Structure) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: Structure) => {\n\n\t\t\t\tconst containerHeight = structure.getContainerHeight(),\n\t\t\t\t\ttopMargin = structure.getTopMargin();\n\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', containerHeight + 'px');\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\t\n\t\tQuickFilters\n\t\t\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../structure-id';\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure-id';\nimport { globalStructureId } from '../../../domain/global-structure-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: Structure;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isTopHeaderEnabled();\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isBottomHeaderEnabled();\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateId, AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureAggregate> {\n\n\tabstract getById(aggregateId: AggregateId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../domain/structure/command/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaTopHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaTopHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaBottomHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaBottomHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowColoringSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../../domain/structure/command/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../domain/source/command/loading/set-source-loading.event';\nimport { SchemaSetEvent } from '../../../../domain/schema/command/set/schema-set.event';\nimport { SchemaThemeSetEvent } from '../../../../domain/schema/command/theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../../../domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../../domain/schema/command/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaTopHeaderChangedEvent } from '../../../../domain/schema/command/column-header/top/schema-top-header-changed.event';\nimport { SchemaBottomHeaderChangedEvent } from '../../../../domain/schema/command/column-header/bottom/schema-bottom-header-changed.event';\nimport { RowColoringSetEvent } from '../../../../domain/schema/command/coloring/set/row-coloring-set.event';\nimport { PagingSetEvent } from '../../../../domain/paging/command/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../domain/paging/command/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../domain/paging/command/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../domain/paging/command/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../../domain/formation/command/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../domain/structure/command/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../domain/source/command/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../../domain/structure/command/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../domain/structure/command/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../domain/structure/command/vertical-formation/set-row-height/row-height-set.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, Structure>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, Structure>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<Structure> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, Structure>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, Structure>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tSchemaSetEvent,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureQueryStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structure: Structure) => {\n\t\t\tconst key = structure.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structure);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './commad/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './commad/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../../domain/structure/command/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../../structure/command/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../../structure/command/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetAggregationEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetAggregationEnabledCommand> {\n\t\treturn StructureSetAggregationEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setAggregationEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\n\n@Entity\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate viewportHeight: number;\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.viewportHeight = viewportHeight;\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.viewportHeight > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.viewportHeight) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.viewportHeight / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.viewportHeight / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && this.viewportHeight === 0) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.viewportHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(height: number): void {\n\t\tthis.rowHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = 0,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column-aggregation.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../../structure-id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../command/filter/config/structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../command/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../command/filter/quick/structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/command/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../../domain/structure/command/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/command/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","export class OriginItemEntity {\n\n\tid: string;\n\n\trawData: any;\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: string,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tthis.id = id;\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.id, rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../../structure-id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../../structure/command/field/data-type/type.field';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(RandomStringGenerator.generate(), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { SortOrder } from '../../../../../composition/domain/command/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","export class ColumnHeaderEntity {\n\n\tconstructor(private top: boolean,\n\t\t\t\tprivate bottom: boolean) {\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.top = enabled;\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.bottom = enabled;\n\t}\n\n\tisHeaderOnTop(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisHeaderOnBottom(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { ColumnHeaderEntity } from './column-header/column-header.entity';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { RootAggregate } from '@generic-ui/hermes';\n\n@RootAggregate\nexport class SchemaAggregate {\n\n\tprivate headerHeight = 28; // ?\n\n\tprivate pagerHeight = 35; // ?\n\n\tprivate containerHeight: number;\n\n\tprivate active: boolean = false;\n\n\tprivate horizontalGrid: boolean = true;\n\n\tprivate verticalGrid: boolean = true;\n\n\tprivate columnHeader: ColumnHeaderEntity = new ColumnHeaderEntity(true, false);\n\n\tprivate theme: SchemaTheme = SchemaTheme.GENERIC;\n\n\tprivate rowColoring: SchemaRowColoring = SchemaRowColoring.ODD;\n\n\tconstructor(private width?: number,\n\t\t\t\tprivate height?: number) {\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.rowColoring = SchemaRowColoring.NONE;\n\t\t\tthis.verticalGrid = false;\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.rowColoring = SchemaRowColoring.NONE;\n\t\t\tthis.verticalGrid = false;\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.rowColoring = SchemaRowColoring.NONE;\n\t\t\tthis.verticalGrid = false;\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.rowColoring = SchemaRowColoring.ODD;\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.height;\n\t\t// return this.containerHeight;\n\t}\n\n\tgetColumnHeader(): ColumnHeaderEntity {\n\t\treturn this.columnHeader;\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderTop(enabled);\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderBottom(enabled);\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tprivate getHeaderHeight(): number {\n\t\treturn this.headerHeight;\n\t}\n\n\tprivate getPagerHeight(): number {\n\t\treturn this.pagerHeight;\n\t}\n\n\tprivate calculateContainerHeight(): void {\n\n\t\tif (!this.height) {\n\t\t\tthis.active = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tthis.containerHeight = this.height - this.getHeaderHeight() - this.getPagerHeight();\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { StructureId } from '../../../../structure-id';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { Aggregate, AggregateEvent, RootAggregate } from '@generic-ui/hermes';\n\nimport { PagingAggregate } from '../../paging/command/paging.aggregate';\nimport { SourceManager } from '../../source/command/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../../formation/command/formation-aggregate';\nimport { SchemaAggregate } from '../../schema/command/schema-aggregate';\nimport { StructureId } from '../../structure-id';\nimport { StructureEditSourceItemParams } from '../../source/command/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/paging-config';\nimport { OriginItemEntity } from '../../source/command/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/command/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../schema/schema-theme';\n\n@RootAggregate\nexport class StructureAggregate extends Aggregate {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate schema: SchemaAggregate;\n\n\tprivate pagingAggregate: PagingAggregate;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingAggregate,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection,\n\t\t\t\tschema: SchemaAggregate) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingAggregate = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t\tthis.schema = schema;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.getSchema().setHeight(height);\n\n\t\tconst viewportHeight = this.getSchema().getContainerHeight();\n\n\t\tthis.verticalFormation.setViewportHeight(viewportHeight);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.getSchema().setTheme(theme);\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tsetSchema(schema: SchemaAggregate): void {\n\t\tthis.schema = schema;\n\t}\n\n\tgetSchema(): SchemaAggregate {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): PagingAggregate {\n\t\treturn this.pagingAggregate;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingAggregate.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingAggregate): void {\n\t\tthis.pagingAggregate = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingAggregate.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingAggregate.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tconst pagingEvents = this.pagingAggregate.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingAggregate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingAggregate.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingAggregate.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\t\tconst theme = this.getSchema().getTheme();\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from './schema-aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory {\n\n\tcreate(): SchemaAggregate {\n\t\treturn new SchemaAggregate();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregateFactory } from '../../paging/command/paging.aggregate-factory';\nimport { SourceManagerFactory } from '../../source/command/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../../structure-id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { SchemaAggregateFactory } from '../../schema/command/schema.aggregate-factory';\nimport { FormationAggregateFactory } from '../../formation/command/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\nimport { AggregateFactory } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingAggregateFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory,\n\t\t\t\tprivate readonly schemaAggregateFactory: SchemaAggregateFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tschema = this.schemaAggregateFactory.create(),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer,\n\t\t\tschema\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';\nimport { PagingConverter } from '../../domain/paging/paging.converter';\nimport { PagingCommandService } from './paging-command.service';\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { PagingEventService } from './paging-event.service';\n\n\nconst commandProviders = [\n\tPagingDispatcher\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingAggregateFactory,\n\tPagingConverter,\n\n\tPagingCommandService,\n\tPagingReadModelService,\n\tPagingEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<StructureAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaVerticalGridSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tschema = aggregate.getSchema();\n\n\t\tschema.setVerticalGrid(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<StructureAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaHorizontalGridSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst schema = aggregate.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<StructureAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaThemeSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangeSchemaBottomHeaderCommand } from './change-schema-bottom-header.command';\nimport { SchemaBottomHeaderChangedEvent } from './schema-bottom-header-changed.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangeSchemaBottomHeaderCommandHandler implements CommandHandler<StructureAggregate, ChangeSchemaBottomHeaderCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangeSchemaBottomHeaderCommand> {\n\t\treturn ChangeSchemaBottomHeaderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangeSchemaBottomHeaderCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaBottomHeaderChangedEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ChangeSchemaBottomHeaderCommand): void {\n\n\t\tconst schema = structure.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHeaderBottom(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaTopHeaderCommand } from './change-schema-top-header.command';\nimport { SchemaTopHeaderChangedEvent } from './schema-top-header-changed.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangeSchemaTopHeaderCommandHandler implements CommandHandler<StructureAggregate, ChangeSchemaTopHeaderCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangeSchemaTopHeaderCommand> {\n\t\treturn ChangeSchemaTopHeaderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangeSchemaTopHeaderCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaTopHeaderChangedEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ChangeSchemaTopHeaderCommand): void {\n\n\t\tconst schema = aggregate.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHeaderTop(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<StructureAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new RowColoringSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowColoringCommand): void {\n\n\t\t// missing implementation\n\t\tconst schema = structure.getSchema(),\n\t\t\tcoloring = command.getColoring();\n\n\t\tschema.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaCommand } from './set-schema.command';\nimport { SchemaSetEvent } from './schema-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaCommandHandler implements CommandHandler<StructureAggregate, SetSchemaCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaCommand> {\n\t\treturn SetSchemaCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSchemaCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SetSchemaVerticalGridCommandHandler } from '../../domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../../domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../../domain/schema/command/theme/set-schema-theme.command-handler';\nimport { ChangeSchemaBottomHeaderCommandHandler } from '../../domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler';\nimport { ChangeSchemaTopHeaderCommandHandler } from '../../domain/schema/command/column-header/top/change-schema-top-header.command-handler';\nimport { SetRowColoringCommandHandler } from '../../domain/schema/command/coloring/set/set-row-coloring.command-handler';\nimport { SetSchemaCommandHandler } from '../../domain/schema/command/set/set-schema.command-handler';\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { SchemaConverter } from '../../domain/schema/schema.converter';\nimport { SchemaCommandService } from './schema-command.service';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { SchemaAggregateFactory } from '../../domain/schema/command/schema.aggregate-factory';\n\n\nconst commandProviders = [\n\tSchemaDispatcher,\n\tSchemaAggregateFactory\n];\n\nconst readProviders = [\n\tSchemaRepository\n];\n\nexport const schemaCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetSchemaCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangeSchemaBottomHeaderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangeSchemaTopHeaderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, 'StructureAggregate')\n];\n\nexport const schemaProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSchemaConverter,\n\n\tSchemaCommandService,\n\tSchemaReadModelService\n\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';\nimport { FormationConverter } from '../../domain/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../command/origin/set-origin/origin-set.event';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from '../../schema/read/schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SourceRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../command/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/command/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/command/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/command/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/command/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../domain/source/read/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../domain/source/source.converter';\nimport { SourceCommandService } from './source-command.service';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceRepository } from '../../domain/source/read/source.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/command/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../domain/source/read/prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tSourceRepository,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandService,\n\tSourceReadModelService,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../command/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/structure/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/command/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/command/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/command/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/command/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/command/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/command/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/command/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/command/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/command/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/command/field/field-id.generator';\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { FieldFactory } from '../../domain/structure/command/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/command/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../domain/structure/read/searching/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../domain/structure/read/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelRepository } from './filter/structure.filter.read-model.repository';\nimport { StructureFilterRepository } from '../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandService } from './aggregation/structure.aggregation.command-service';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure.aggregation.ui-events-repository';\nimport { StructureCommandService } from './structure-command.service';\nimport { StructureConverter } from '../../domain/structure/structure.converter';\nimport { StructureAggregateFactory } from '../../domain/structure/command/structure.aggregate-factory';\nimport { StructureReadModelService } from './structure-read-model.service';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { schemaProviders } from '../schema/schema.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/command/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/command/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from '../../domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from '../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandService,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterReadModelRepository,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetAggregationEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureAggregationCommandService,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureConverter,\n\n\tStructureReadModelService,\n\tStructureCommandService,\n\n\t...pagingProviders,\n\t...schemaProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './command/origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(item: OriginItemEntity | any): ItemEntity {\n\n\t\tif (item instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(item.rawData, item.getPosition(), item.id, item.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(item, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandService } from '../../../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../../../ui-api/structure/structure-read-model.service';\nimport { StructureSearchPlaceholderArchive } from '../../../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\" \n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/command/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../../../ui-api/structure/structure-command.service';\nimport { CompositionReadModelService } from '../../../../../../composition/ui-api/composition-read-model.service';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure.aggregation.ui-events-repository';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Count</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-aggregation-panel]': 'true'\n\t}\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './structure.aggregation-config.service';\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationPanelComponent } from './structure.aggregation-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureAggregationPanelComponent\n\t],\n\texports: [\n\t\tStructureAggregationPanelComponent\n\t],\n\tproviders: [\n\t\tStructureAggregationArchive,\n\t\tStructureAggregationConfigService,\n\t\tStructureAggregationPanelConfigConverter\n\t]\n})\nexport class StructureAggregationPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateCommandHandler, AggregateRepository, Command, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements AggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, Input, SimpleChanges } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandService } from '../../../../ui-api/source/source-command.service';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../ui/structure-fabric.imports';\nimport { StructurePagingModule } from '../ui/paging/structure-paging.module';\nimport { StructureInfoPanelModule } from '../ui/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/ui-api/composition.module';\nimport { StructureComponent } from '../ui/structure.component';\nimport { StructureHeaderComponent } from '../ui/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../ui/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../ui/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../ui/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../ui/content/structure-content.component';\nimport { StructureRowComponent } from '../ui/content/row/structure-row.component';\nimport { StructureCellComponent } from '../ui/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../ui/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../ui/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../ui/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../ui/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure/structure-tokens';\nimport { StructureDefinition } from '../ui/structure-definition';\nimport { SourceReadModelService } from './source/source-read-model.service';\nimport { StructureIdGenerator } from '../ui/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure/structure.providers';\nimport { StructureModuleConfig } from '../ui/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../ui/panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from '../ui/content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from '../ui/header/menu/structure.column-menu.module';\nimport { StructureAggregationPanelModule } from '../ui/panel/aggregation/structure.aggregation-panel.module';\nimport { StructureColumnManagerModule } from '../ui/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/command/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/command/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { pagingCommandHandlers } from './paging/paging.providers';\nimport { schemaCommandHandlers } from './schema/schema.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../ui/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../ui/schema/structure.theme.converter';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...pagingCommandHandlers,\n\t\t\t...schemaCommandHandlers,\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureAggregationPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceReadModelService,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = { cssClassName: '', hermesModuleConfig: { loggers: false } }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui-api/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"],"names":["tslib_1.__extends","selector","tslib_1.__decorate","tslib_1.__values","Optional","commandProviders","readProviders","declarations","exportDeclarations","imports","providers","entryComponents"],"mappings":"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"}