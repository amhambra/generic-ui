import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { SmartComponent } from '../../../../common/cdk/smart-component';
import { ColumnConfig } from '../../../composition/domain/column/column.config';
import { PagingConfig } from '../../domain/paging/paging-config';
import { SchemaTheme } from '../../../schema/domain/schema-theme';
import { SchemaRowColoring } from '../../../schema/domain/schema-row-coloring';
import { SortingConfig } from '../../ui-api/sorting-config';
import { FilterConfig } from '../../ui-api/filter/filter-config';
import { QuickFiltersConfig } from '../../ui-api/filter/quick-filters.config';
import { SearchConfig } from '../../ui-api/search/search-config';
import { SummariesConfig } from '../../ui-api/summaries/summaries-config';
import { EditemItemValues } from '../../ui-api/source/event/editem-item.values';
import { StructureId } from '../../domain/structure.id';
import { CompositionId } from '../../../composition/domain/composition.id';
import { StructureCommandDispatcher } from '../../ui-api/structure.command-dispatcher';
import { StructurePagingCommandDispatcher } from '../../ui-api/paging/structure-paging.command-dispatcher';
import { StructurePagingEventRepository } from '../../ui-api/paging/structure-paging.event-repository';
import { SourceCommandDispatcher } from '../../ui-api/source/source.command-dispatcher';
import { SourceEventService } from '../../ui-api/source/event/source-event.service';
import { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';
import { CompositionEventRepository } from '../../../composition/ui-api/composition.event-repository';
import { FormationEventService } from '../../ui-api/formation/formation-event.service';
import { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';
import { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';
import { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';
import { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';
import { StructureCellEditStore } from '../edit/structure.cell-edit.store';
import { ColumnMenuConfig } from '../../ui-api/column-menu-config';
import { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';
import { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';
import { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';
import { StructureSearchEventService } from '../../ui-api/search/structure-search-event.service';
import { SchemaCommandDispatcher } from '../../../schema/ui-api/schema.command-dispatcher';
import { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';
import { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';
/** @internal */
export declare abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {
    structureId: StructureId;
    protected compositionId: CompositionId;
    protected structureCommandService: StructureCommandDispatcher;
    protected pagingCommandService: StructurePagingCommandDispatcher;
    protected pagingEventService: StructurePagingEventRepository;
    protected sourceCommandService: SourceCommandDispatcher;
    protected sourceEventService: SourceEventService;
    protected schemaCommandDispatcher: SchemaCommandDispatcher;
    protected compositionCommandService: CompositionCommandDispatcher;
    protected compositionEventService: CompositionEventRepository;
    protected formationEventService: FormationEventService;
    protected structureEditModeArchive: StructureEditModeArchive;
    protected structureCellEditArchive: StructureCellEditArchive;
    protected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive;
    protected structureSummariesConfigService: StructureSummariesConfigService;
    protected structureCellEditStore: StructureCellEditStore;
    protected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive;
    protected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive;
    protected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive;
    protected structureSearchEventService: StructureSearchEventService;
    protected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive;
    protected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive;
    /***********************
     * INPUTS
     ***********************/
    columnHeaderTop: boolean;
    columnHeaderBottom: boolean;
    maxHeight: number;
    width: number;
    rowHeight: number;
    autoResizeWidth: boolean;
    source: Array<any>;
    columns: Array<ColumnConfig>;
    paging: boolean | PagingConfig;
    verticalGrid: boolean;
    horizontalGrid: boolean;
    theme: SchemaTheme;
    rowColoring: SchemaRowColoring;
    rowSelecting: boolean;
    loading: boolean;
    virtualScroll: boolean;
    sorting: boolean | SortingConfig;
    filtering: boolean | FilterConfig;
    quickFilters: boolean | QuickFiltersConfig;
    searching: boolean | SearchConfig;
    editMode: boolean;
    cellEditing: boolean;
    infoPanel: boolean;
    summaries: SummariesConfig;
    columnMenu: ColumnMenuConfig;
    /***********************
     * OUTPUTS
     ***********************/
    pageChanged: EventEmitter<number>;
    pageSizeChanged: EventEmitter<number>;
    itemsSelected: EventEmitter<any>;
    columnsChanged: EventEmitter<void>;
    containerWidthChanged: EventEmitter<number>;
    sourceEdited: EventEmitter<EditemItemValues>;
    cellEditEntered: EventEmitter<void>;
    cellEditCanceled: EventEmitter<void>;
    cellEditSubmitted: EventEmitter<void>;
    searchPhraseChanged: EventEmitter<string>;
    protected constructor(structureId: StructureId, compositionId: CompositionId, structureCommandService: StructureCommandDispatcher, pagingCommandService: StructurePagingCommandDispatcher, pagingEventService: StructurePagingEventRepository, sourceCommandService: SourceCommandDispatcher, sourceEventService: SourceEventService, schemaCommandDispatcher: SchemaCommandDispatcher, compositionCommandService: CompositionCommandDispatcher, compositionEventService: CompositionEventRepository, formationEventService: FormationEventService, structureEditModeArchive: StructureEditModeArchive, structureCellEditArchive: StructureCellEditArchive, structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive, structureSummariesConfigService: StructureSummariesConfigService, structureCellEditStore: StructureCellEditStore, structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive, structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive, structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive, structureSearchEventService: StructureSearchEventService, structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive, structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive);
    ngOnChanges(simpleChanges: SimpleChanges): void;
    ngOnInit(): void;
    onPageChange(page: number): void;
}
