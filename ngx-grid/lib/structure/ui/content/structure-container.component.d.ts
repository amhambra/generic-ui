import { ElementRef, Renderer2, OnDestroy, AfterViewInit, ChangeDetectorRef, OnInit, NgZone } from '@angular/core';
import { ResizeDetector } from '@generic-ui/fabric';
import { SmartComponent } from '../../../../common/cdk/smart-component';
import { CellTemplateWithAccessor } from '../../domain/composition/query/definition/cell-template-with-accessor';
import { Entity } from '../../domain/source/entity';
import { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';
import { StructureId } from '../../domain/structure-id';
import { StructureCommandService } from '../../app/structure/structure-command.service';
import { StructureQueryService } from '../../app/structure/structure-query.service';
import { SourceQueryService } from '../../app/source/source-query.service';
import { SchemaQueryService } from '../../app/schema/schema-query.service';
import { CompositionCommandService } from '../api/composition/composition.command-service';
import { CompositionQueryService } from '../api/composition/composition.query-service';
import { FormationQueryService } from '../../app/formation/formation-query.service';
export declare class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {
    private elementRef;
    private renderer;
    private changeDetectorRef;
    private ngZone;
    private structureId;
    private structureCommandService;
    private structureQueryService;
    private sourceQueryService;
    private schemaQueryService;
    private compositionCommandService;
    private compositionQueryService;
    private formationQueryService;
    private resizeDetector;
    private structureParent;
    containerRef: ElementRef;
    columns: Array<CellTemplateWithAccessor>;
    source: Array<Entity>;
    height: number;
    rowColoring: SchemaRowColoring;
    private autoResizeWidthEnabled;
    private scrollObservation$;
    constructor(elementRef: ElementRef, renderer: Renderer2, changeDetectorRef: ChangeDetectorRef, ngZone: NgZone, structureId: StructureId, structureCommandService: StructureCommandService, structureQueryService: StructureQueryService, sourceQueryService: SourceQueryService, schemaQueryService: SchemaQueryService, compositionCommandService: CompositionCommandService, compositionQueryService: CompositionQueryService, formationQueryService: FormationQueryService, resizeDetector: ResizeDetector, structureParent: any);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    setHeight(height: number): void;
    private recalculateContainer;
    private enableScrollObservation;
    private disableScrollObservation;
}
