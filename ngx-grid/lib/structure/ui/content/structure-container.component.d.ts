import { AfterViewInit, ChangeDetectorRef, ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { ResizeDetector } from '@generic-ui/fabric';
import { SmartComponent } from '../../../../common/cdk/smart-component';
import { CellTemplateWithAccessor } from '../../../composition/read/definition/cell-template-with-accessor';
import { SchemaRowColoring } from '../../../schema/domain/schema-row-coloring';
import { StructureId } from '../../domain/structure.id';
import { StructureCommandDispatcher } from '../../ui-api/structure/structure.command-dispatcher';
import { StructureReadModelWarehouse } from '../../ui-api/structure/structure.read-model-warehouse';
import { StructureSourceReadModelWarehouse } from '../../ui-api/source/structure-source.read-model-warehouse';
import { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';
import { CompositionReadModelWarehouse } from '../../../composition/ui-api/composition.read-model-warehouse';
import { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';
import { ItemEntity } from '../../domain/source/item.entity';
export declare class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {
    private elementRef;
    private renderer;
    private changeDetectorRef;
    private ngZone;
    private structureId;
    private structureCommandService;
    private structureReadModelService;
    private sourceReadModelService;
    private compositionCommandService;
    private compositionReadModelService;
    private formationReadModelService;
    private resizeDetector;
    private structureParent;
    sourceCollectionRef: ElementRef;
    columns: Array<CellTemplateWithAccessor>;
    source: Array<ItemEntity>;
    height: number;
    rowColoring: SchemaRowColoring;
    private autoResizeWidthEnabled;
    private scrollObservation$;
    constructor(elementRef: ElementRef, renderer: Renderer2, changeDetectorRef: ChangeDetectorRef, ngZone: NgZone, structureId: StructureId, structureCommandService: StructureCommandDispatcher, structureReadModelService: StructureReadModelWarehouse, sourceReadModelService: StructureSourceReadModelWarehouse, compositionCommandService: CompositionCommandDispatcher, compositionReadModelService: CompositionReadModelWarehouse, formationReadModelService: FormationReadModelService, resizeDetector: ResizeDetector, structureParent: any);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private setContainerHeight;
    private setSourceHeight;
    private recalculateContainer;
    private enableScrollObservation;
    private disableScrollObservation;
}
