/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { COMMAND_HANDLERS } from '@generic-ui/hermes';
import { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';
import { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';
import { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';
import { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';
import { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';
import { PagingRepository } from '../../domain/paging/query/paging.repository';
import { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';
import { PagingConverter } from '../../domain/paging/paging.converter';
import { PagingCommandService } from './paging-command.service';
import { PagingQueryService } from './paging-query.service';
import { PagingEventService } from './paging-event.service';
/** @type {?} */
var commandProviders = [
    PagingDispatcher,
    {
        provide: COMMAND_HANDLERS,
        useClass: SetPagingCommandHandler,
        multi: true
    },
    {
        provide: COMMAND_HANDLERS,
        useClass: NextPageCommandHandler,
        multi: true
    },
    {
        provide: COMMAND_HANDLERS,
        useClass: PrevPageCommandHandler,
        multi: true
    },
    {
        provide: COMMAND_HANDLERS,
        useClass: ChangePagesizeCommandHandler,
        multi: true
    }
];
/** @type {?} */
var queryProviders = [
    PagingRepository
];
/** @type {?} */
export var pagingProviders = tslib_1.__spread(commandProviders, queryProviders, [
    PagingAggregateFactory,
    PagingConverter,
    PagingCommandService,
    PagingQueryService,
    PagingEventService
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnaW5nLnByb3ZpZGVycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BnZW5lcmljLXVpL25neC1ncmlkLyIsInNvdXJjZXMiOlsibGliL3N0cnVjdHVyZS9hcHAvcGFnaW5nL3BhZ2luZy5wcm92aWRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUV0RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUNqRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUNyRyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxpRUFBaUUsQ0FBQztBQUN6RyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxpRUFBaUUsQ0FBQztBQUN6RyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw2RUFBNkUsQ0FBQztBQUMzSCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUM5RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdkUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7O0lBR3RELGdCQUFnQixHQUFHO0lBQ3hCLGdCQUFnQjtJQUNoQjtRQUNDLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsUUFBUSxFQUFFLHVCQUF1QjtRQUNqQyxLQUFLLEVBQUUsSUFBSTtLQUNYO0lBQ0Q7UUFDQyxPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLFFBQVEsRUFBRSxzQkFBc0I7UUFDaEMsS0FBSyxFQUFFLElBQUk7S0FDWDtJQUNEO1FBQ0MsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixRQUFRLEVBQUUsc0JBQXNCO1FBQ2hDLEtBQUssRUFBRSxJQUFJO0tBQ1g7SUFDRDtRQUNDLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsUUFBUSxFQUFFLDRCQUE0QjtRQUN0QyxLQUFLLEVBQUUsSUFBSTtLQUNYO0NBQ0Q7O0lBRUssY0FBYyxHQUFHO0lBQ3RCLGdCQUFnQjtDQUNoQjs7QUFFRCxNQUFNLEtBQU8sZUFBZSxvQkFDeEIsZ0JBQWdCLEVBQ2hCLGNBQWM7SUFFakIsc0JBQXNCO0lBQ3RCLGVBQWU7SUFFZixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtFQUNsQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPTU1BTkRfSEFORExFUlMgfSBmcm9tICdAZ2VuZXJpYy11aS9oZXJtZXMnO1xuXG5pbXBvcnQgeyBQYWdpbmdEaXNwYXRjaGVyIH0gZnJvbSAnLi4vLi4vZG9tYWluL3BhZ2luZy9jb21tYW5kL3BhZ2luZy5kaXNwYXRjaGVyJztcbmltcG9ydCB7IFNldFBhZ2luZ0NvbW1hbmRIYW5kbGVyIH0gZnJvbSAnLi4vLi4vZG9tYWluL3BhZ2luZy9jb21tYW5kL3NldC9zZXQtcGFnaW5nLmNvbW1hbmQtaGFuZGxlcic7XG5pbXBvcnQgeyBOZXh0UGFnZUNvbW1hbmRIYW5kbGVyIH0gZnJvbSAnLi4vLi4vZG9tYWluL3BhZ2luZy9jb21tYW5kL25leHQtcGFnZS9uZXh0LXBhZ2UuY29tbWFuZC1oYW5kbGVyJztcbmltcG9ydCB7IFByZXZQYWdlQ29tbWFuZEhhbmRsZXIgfSBmcm9tICcuLi8uLi9kb21haW4vcGFnaW5nL2NvbW1hbmQvcHJldi1wYWdlL3ByZXYtcGFnZS5jb21tYW5kLWhhbmRsZXInO1xuaW1wb3J0IHsgQ2hhbmdlUGFnZXNpemVDb21tYW5kSGFuZGxlciB9IGZyb20gJy4uLy4uL2RvbWFpbi9wYWdpbmcvY29tbWFuZC9jaGFuZ2UtcGFnZXNpemUvY2hhbmdlLXBhZ2VzaXplLmNvbW1hbmQtaGFuZGxlcic7XG5pbXBvcnQgeyBQYWdpbmdSZXBvc2l0b3J5IH0gZnJvbSAnLi4vLi4vZG9tYWluL3BhZ2luZy9xdWVyeS9wYWdpbmcucmVwb3NpdG9yeSc7XG5pbXBvcnQgeyBQYWdpbmdBZ2dyZWdhdGVGYWN0b3J5IH0gZnJvbSAnLi4vLi4vZG9tYWluL3BhZ2luZy9jb21tYW5kL3BhZ2luZy5hZ2dyZWdhdGUtZmFjdG9yeSc7XG5pbXBvcnQgeyBQYWdpbmdDb252ZXJ0ZXIgfSBmcm9tICcuLi8uLi9kb21haW4vcGFnaW5nL3BhZ2luZy5jb252ZXJ0ZXInO1xuaW1wb3J0IHsgUGFnaW5nQ29tbWFuZFNlcnZpY2UgfSBmcm9tICcuL3BhZ2luZy1jb21tYW5kLnNlcnZpY2UnO1xuaW1wb3J0IHsgUGFnaW5nUXVlcnlTZXJ2aWNlIH0gZnJvbSAnLi9wYWdpbmctcXVlcnkuc2VydmljZSc7XG5pbXBvcnQgeyBQYWdpbmdFdmVudFNlcnZpY2UgfSBmcm9tICcuL3BhZ2luZy1ldmVudC5zZXJ2aWNlJztcblxuXG5jb25zdCBjb21tYW5kUHJvdmlkZXJzID0gW1xuXHRQYWdpbmdEaXNwYXRjaGVyLFxuXHR7XG5cdFx0cHJvdmlkZTogQ09NTUFORF9IQU5ETEVSUyxcblx0XHR1c2VDbGFzczogU2V0UGFnaW5nQ29tbWFuZEhhbmRsZXIsXG5cdFx0bXVsdGk6IHRydWVcblx0fSxcblx0e1xuXHRcdHByb3ZpZGU6IENPTU1BTkRfSEFORExFUlMsXG5cdFx0dXNlQ2xhc3M6IE5leHRQYWdlQ29tbWFuZEhhbmRsZXIsXG5cdFx0bXVsdGk6IHRydWVcblx0fSxcblx0e1xuXHRcdHByb3ZpZGU6IENPTU1BTkRfSEFORExFUlMsXG5cdFx0dXNlQ2xhc3M6IFByZXZQYWdlQ29tbWFuZEhhbmRsZXIsXG5cdFx0bXVsdGk6IHRydWVcblx0fSxcblx0e1xuXHRcdHByb3ZpZGU6IENPTU1BTkRfSEFORExFUlMsXG5cdFx0dXNlQ2xhc3M6IENoYW5nZVBhZ2VzaXplQ29tbWFuZEhhbmRsZXIsXG5cdFx0bXVsdGk6IHRydWVcblx0fVxuXTtcblxuY29uc3QgcXVlcnlQcm92aWRlcnMgPSBbXG5cdFBhZ2luZ1JlcG9zaXRvcnlcbl07XG5cbmV4cG9ydCBjb25zdCBwYWdpbmdQcm92aWRlcnMgPSBbXG5cdC4uLmNvbW1hbmRQcm92aWRlcnMsXG5cdC4uLnF1ZXJ5UHJvdmlkZXJzLFxuXG5cdFBhZ2luZ0FnZ3JlZ2F0ZUZhY3RvcnksXG5cdFBhZ2luZ0NvbnZlcnRlcixcblxuXHRQYWdpbmdDb21tYW5kU2VydmljZSxcblx0UGFnaW5nUXVlcnlTZXJ2aWNlLFxuXHRQYWdpbmdFdmVudFNlcnZpY2Vcbl07XG4iXX0=