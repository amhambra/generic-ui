/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';
import { inMemoryCompositionCommandProviders, inMemoryCompositionProviders, inMemoryCompositionQueryProviders } from '../../infrastructure/in-memory/composition/in-memory.composition.providers';
import { CompositionAggregateFactory } from '../../domain/composition/command/composition.aggregate-factory';
import { CompositionDispatcher } from '../../domain/composition/command/composition.dispatcher';
import { InitCompositionCommandHandler } from '../../domain/composition/command/init/init-composition.command-handler';
import { SetColumnsCommandHandler } from '../../domain/composition/command/column/set-columns/set-columns.command-handler';
import { SetCompositionWidthCommandHandler } from '../../domain/composition/command/width/set-width/set-composition-width.command-handler';
import { SetCompositionResizeWidthCommandHandler } from '../../domain/composition/command/width/resize-width/set-composition-resize-width.command-handler';
import { SetCompositionContainerWidthCommandHandler } from '../../domain/composition/command/width/set-container-width/set-composition-container-width.command-handler';
import { CompositionChangeSortStatusCommandHandler } from '../../domain/composition/command/sort/composition-change-sort-status.command-handler';
import { ColumnEntityFactory } from '../../domain/composition/command/column/column-entity.factory';
import { CompositionEventConverter } from '../../domain/composition/command/composition-event.converter';
import { ColumnFieldFactory } from '../../domain/composition/command/column/field/colum-field.factory';
import { CompositionEventService } from './composition.event-service';
import { CompositionReadModelService } from './composition-read-model.service';
import { CompositionCommandService } from './composition.command-service';
import { CompositionConverter } from '../../domain/composition/composition.converter';
import { EditTemplateRepository } from '../../domain/composition/read/edit/edit-template.repository';
import { EditTemplateFactory } from '../../domain/composition/read/edit/edit-template.factory';
import { ViewTemplateFactory } from '../../domain/composition/read/view/view-template.factory';
import { ViewTemplateRepository } from '../../domain/composition/read/view/view-template.repository';
import { ColumnDefinitionFactory } from '../../domain/composition/read/definition/column-definition.factory';
import { CompositionChangeSortStatusEventHandler } from '../../domain/composition/command/sort/composition-change-sort-status.event-handler';
import { CompositionFieldsInitedEventHandler } from '../../domain/composition/command/column/set-columns/composition-fields-inited.event-handler';
/** @type {?} */
var commandProviders = tslib_1.__spread(inMemoryCompositionCommandProviders, [
    CompositionDispatcher,
    CompositionAggregateFactory,
    {
        provide: COMMAND_HANDLERS,
        useClass: InitCompositionCommandHandler,
        multi: true
    },
    {
        provide: COMMAND_HANDLERS,
        useClass: SetColumnsCommandHandler,
        multi: true
    }, {
        provide: COMMAND_HANDLERS,
        useClass: SetCompositionWidthCommandHandler,
        multi: true
    }, {
        provide: COMMAND_HANDLERS,
        useClass: SetCompositionResizeWidthCommandHandler,
        multi: true
    }, {
        provide: COMMAND_HANDLERS,
        useClass: SetCompositionContainerWidthCommandHandler,
        multi: true
    }, {
        provide: COMMAND_HANDLERS,
        useClass: CompositionChangeSortStatusCommandHandler,
        multi: true
    },
    ColumnEntityFactory,
    CompositionEventConverter,
    ColumnFieldFactory
]);
/** @type {?} */
var readProviders = tslib_1.__spread(inMemoryCompositionQueryProviders, [
    {
        provide: DOMAIN_EVENT_HANDLERS,
        useClass: CompositionFieldsInitedEventHandler,
        multi: true
    }, {
        provide: DOMAIN_EVENT_HANDLERS,
        useClass: CompositionChangeSortStatusEventHandler,
        multi: true
    },
    ColumnDefinitionFactory,
    ViewTemplateRepository,
    ViewTemplateFactory,
    EditTemplateFactory,
    EditTemplateRepository
]);
/** @type {?} */
export var compositionProviders = tslib_1.__spread(inMemoryCompositionProviders, commandProviders, readProviders, [
    CompositionConverter,
    CompositionCommandService,
    CompositionReadModelService,
    CompositionEventService
]);
//# sourceMappingURL=data:application/json;base64,