/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { HermesModule } from '@generic-ui/hermes';
import { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';
import { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';
import { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';
import { FormationRepository } from '../../domain/formation/read/formation-repository';
import { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';
import { FormationConverter } from '../../domain/formation/formation.converter';
import { FormationEventService } from './formation-event.service';
import { FormationCommandService } from './formation-command.service';
import { FormationReadModelService } from './formation-read-model.service';
/** @type {?} */
var commandProviders = [
    FormationDispatcher,
    FormationAggregateFactory
];
/** @type {?} */
var readProviders = [
    FormationRepository
];
/** @type {?} */
export var formationCommandHandlers = tslib_1.__spread(HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'), HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate'));
/** @type {?} */
export var formationProviders = tslib_1.__spread(commandProviders, readProviders, [
    FormationEventService,
    FormationConverter,
    FormationCommandService,
    FormationReadModelService
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0aW9uLnByb3ZpZGVycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BnZW5lcmljLXVpL25neC1ncmlkLyIsInNvdXJjZXMiOlsibGliL3N0cnVjdHVyZS91aS1hcGkvZm9ybWF0aW9uL2Zvcm1hdGlvbi5wcm92aWRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFbEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scURBQXFELENBQUM7QUFDMUYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0VBQWtFLENBQUM7QUFDOUcsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sMkVBQTJFLENBQUM7QUFDNUgsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDdkYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNERBQTRELENBQUM7QUFDdkcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDaEYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdEUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7O0lBRXJFLGdCQUFnQixHQUFHO0lBQ3hCLG1CQUFtQjtJQUNuQix5QkFBeUI7Q0FDekI7O0lBRUssYUFBYSxHQUFHO0lBQ3JCLG1CQUFtQjtDQUNuQjs7QUFFRCxNQUFNLEtBQU8sd0JBQXdCLG9CQUNqQyxZQUFZLENBQUMsc0JBQXNCLENBQUMsMEJBQTBCLEVBQUUsb0JBQW9CLENBQUMsRUFDckYsWUFBWSxDQUFDLHNCQUFzQixDQUFDLCtCQUErQixFQUFFLG9CQUFvQixDQUFDLENBQzdGOztBQUVELE1BQU0sS0FBTyxrQkFBa0Isb0JBQzNCLGdCQUFnQixFQUNoQixhQUFhO0lBRWhCLHFCQUFxQjtJQUVyQixrQkFBa0I7SUFFbEIsdUJBQXVCO0lBQ3ZCLHlCQUF5QjtFQUN6QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhlcm1lc01vZHVsZSB9IGZyb20gJ0BnZW5lcmljLXVpL2hlcm1lcyc7XG5cbmltcG9ydCB7IEZvcm1hdGlvbkRpc3BhdGNoZXIgfSBmcm9tICcuLi8uLi9kb21haW4vZm9ybWF0aW9uL2NvbW1hbmQvZm9ybWF0aW9uLmRpc3BhdGNoZXInO1xuaW1wb3J0IHsgU2V0Rm9ybWF0aW9uQ29tbWFuZEhhbmRsZXIgfSBmcm9tICcuLi8uLi9kb21haW4vZm9ybWF0aW9uL2NvbW1hbmQvc2V0L3NldC1mb3JtYXRpb24uY29tbWFuZC1oYW5kbGVyJztcbmltcG9ydCB7IFRvZ2dsZVNlbGVjdGVkUm93Q29tbWFuZEhhbmRsZXIgfSBmcm9tICcuLi8uLi9kb21haW4vZm9ybWF0aW9uL2NvbW1hbmQvdG9nZ2xlL3RvZ2dsZS1zZWxlY3RlZC1yb3cuY29tbWFuZC1oYW5kbGVyJztcbmltcG9ydCB7IEZvcm1hdGlvblJlcG9zaXRvcnkgfSBmcm9tICcuLi8uLi9kb21haW4vZm9ybWF0aW9uL3JlYWQvZm9ybWF0aW9uLXJlcG9zaXRvcnknO1xuaW1wb3J0IHsgRm9ybWF0aW9uQWdncmVnYXRlRmFjdG9yeSB9IGZyb20gJy4uLy4uL2RvbWFpbi9mb3JtYXRpb24vY29tbWFuZC9mb3JtYXRpb24uYWdncmVnYXRlLWZhY3RvcnknO1xuaW1wb3J0IHsgRm9ybWF0aW9uQ29udmVydGVyIH0gZnJvbSAnLi4vLi4vZG9tYWluL2Zvcm1hdGlvbi9mb3JtYXRpb24uY29udmVydGVyJztcbmltcG9ydCB7IEZvcm1hdGlvbkV2ZW50U2VydmljZSB9IGZyb20gJy4vZm9ybWF0aW9uLWV2ZW50LnNlcnZpY2UnO1xuaW1wb3J0IHsgRm9ybWF0aW9uQ29tbWFuZFNlcnZpY2UgfSBmcm9tICcuL2Zvcm1hdGlvbi1jb21tYW5kLnNlcnZpY2UnO1xuaW1wb3J0IHsgRm9ybWF0aW9uUmVhZE1vZGVsU2VydmljZSB9IGZyb20gJy4vZm9ybWF0aW9uLXJlYWQtbW9kZWwuc2VydmljZSc7XG5cbmNvbnN0IGNvbW1hbmRQcm92aWRlcnMgPSBbXG5cdEZvcm1hdGlvbkRpc3BhdGNoZXIsXG5cdEZvcm1hdGlvbkFnZ3JlZ2F0ZUZhY3Rvcnlcbl07XG5cbmNvbnN0IHJlYWRQcm92aWRlcnMgPSBbXG5cdEZvcm1hdGlvblJlcG9zaXRvcnlcbl07XG5cbmV4cG9ydCBjb25zdCBmb3JtYXRpb25Db21tYW5kSGFuZGxlcnMgPSBbXG5cdC4uLkhlcm1lc01vZHVsZS5yZWdpc3RlckNvbW1hbmRIYW5kbGVyKFNldEZvcm1hdGlvbkNvbW1hbmRIYW5kbGVyLCAnU3RydWN0dXJlQWdncmVnYXRlJyksXG5cdC4uLkhlcm1lc01vZHVsZS5yZWdpc3RlckNvbW1hbmRIYW5kbGVyKFRvZ2dsZVNlbGVjdGVkUm93Q29tbWFuZEhhbmRsZXIsICdTdHJ1Y3R1cmVBZ2dyZWdhdGUnKVxuXTtcblxuZXhwb3J0IGNvbnN0IGZvcm1hdGlvblByb3ZpZGVycyA9IFtcblx0Li4uY29tbWFuZFByb3ZpZGVycyxcblx0Li4ucmVhZFByb3ZpZGVycyxcblxuXHRGb3JtYXRpb25FdmVudFNlcnZpY2UsXG5cblx0Rm9ybWF0aW9uQ29udmVydGVyLFxuXG5cdEZvcm1hdGlvbkNvbW1hbmRTZXJ2aWNlLFxuXHRGb3JtYXRpb25SZWFkTW9kZWxTZXJ2aWNlXG5dO1xuIl19