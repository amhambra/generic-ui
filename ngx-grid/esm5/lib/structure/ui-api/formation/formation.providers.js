/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { HermesModule } from '@generic-ui/hermes';
import { FormationDispatcher } from '../../domain/formation/formation.dispatcher';
import { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';
import { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';
import { FormationRepository } from '../../read/formation/formation-repository';
import { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';
import { FormationConverter } from '../../read/formation/formation.converter';
import { FormationEventService } from './formation-event.service';
import { FormationCommandService } from './formation-command.service';
import { FormationReadModelService } from './formation-read-model.service';
/** @type {?} */
var commandProviders = [
    FormationDispatcher,
    FormationAggregateFactory
];
/** @type {?} */
var readProviders = [
    FormationRepository
];
/** @type {?} */
export var formationCommandHandlers = tslib_1.__spread(HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'), HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate'));
/** @type {?} */
export var formationProviders = tslib_1.__spread(commandProviders, readProviders, [
    FormationEventService,
    FormationConverter,
    FormationCommandService,
    FormationReadModelService
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0aW9uLnByb3ZpZGVycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BnZW5lcmljLXVpL25neC1ncmlkLyIsInNvdXJjZXMiOlsibGliL3N0cnVjdHVyZS91aS1hcGkvZm9ybWF0aW9uL2Zvcm1hdGlvbi5wcm92aWRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFbEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDbEYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDdEcsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sbUVBQW1FLENBQUM7QUFDcEgsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDaEYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFDL0YsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDOUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdEUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7O0lBRXJFLGdCQUFnQixHQUFHO0lBQ3hCLG1CQUFtQjtJQUNuQix5QkFBeUI7Q0FDekI7O0lBRUssYUFBYSxHQUFHO0lBQ3JCLG1CQUFtQjtDQUNuQjs7QUFFRCxNQUFNLEtBQU8sd0JBQXdCLG9CQUNqQyxZQUFZLENBQUMsc0JBQXNCLENBQUMsMEJBQTBCLEVBQUUsb0JBQW9CLENBQUMsRUFDckYsWUFBWSxDQUFDLHNCQUFzQixDQUFDLCtCQUErQixFQUFFLG9CQUFvQixDQUFDLENBQzdGOztBQUVELE1BQU0sS0FBTyxrQkFBa0Isb0JBQzNCLGdCQUFnQixFQUNoQixhQUFhO0lBRWhCLHFCQUFxQjtJQUVyQixrQkFBa0I7SUFFbEIsdUJBQXVCO0lBQ3ZCLHlCQUF5QjtFQUN6QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhlcm1lc01vZHVsZSB9IGZyb20gJ0BnZW5lcmljLXVpL2hlcm1lcyc7XG5cbmltcG9ydCB7IEZvcm1hdGlvbkRpc3BhdGNoZXIgfSBmcm9tICcuLi8uLi9kb21haW4vZm9ybWF0aW9uL2Zvcm1hdGlvbi5kaXNwYXRjaGVyJztcbmltcG9ydCB7IFNldEZvcm1hdGlvbkNvbW1hbmRIYW5kbGVyIH0gZnJvbSAnLi4vLi4vZG9tYWluL2Zvcm1hdGlvbi9zZXQvc2V0LWZvcm1hdGlvbi5jb21tYW5kLWhhbmRsZXInO1xuaW1wb3J0IHsgVG9nZ2xlU2VsZWN0ZWRSb3dDb21tYW5kSGFuZGxlciB9IGZyb20gJy4uLy4uL2RvbWFpbi9mb3JtYXRpb24vdG9nZ2xlL3RvZ2dsZS1zZWxlY3RlZC1yb3cuY29tbWFuZC1oYW5kbGVyJztcbmltcG9ydCB7IEZvcm1hdGlvblJlcG9zaXRvcnkgfSBmcm9tICcuLi8uLi9yZWFkL2Zvcm1hdGlvbi9mb3JtYXRpb24tcmVwb3NpdG9yeSc7XG5pbXBvcnQgeyBGb3JtYXRpb25BZ2dyZWdhdGVGYWN0b3J5IH0gZnJvbSAnLi4vLi4vZG9tYWluL2Zvcm1hdGlvbi9mb3JtYXRpb24uYWdncmVnYXRlLWZhY3RvcnknO1xuaW1wb3J0IHsgRm9ybWF0aW9uQ29udmVydGVyIH0gZnJvbSAnLi4vLi4vcmVhZC9mb3JtYXRpb24vZm9ybWF0aW9uLmNvbnZlcnRlcic7XG5pbXBvcnQgeyBGb3JtYXRpb25FdmVudFNlcnZpY2UgfSBmcm9tICcuL2Zvcm1hdGlvbi1ldmVudC5zZXJ2aWNlJztcbmltcG9ydCB7IEZvcm1hdGlvbkNvbW1hbmRTZXJ2aWNlIH0gZnJvbSAnLi9mb3JtYXRpb24tY29tbWFuZC5zZXJ2aWNlJztcbmltcG9ydCB7IEZvcm1hdGlvblJlYWRNb2RlbFNlcnZpY2UgfSBmcm9tICcuL2Zvcm1hdGlvbi1yZWFkLW1vZGVsLnNlcnZpY2UnO1xuXG5jb25zdCBjb21tYW5kUHJvdmlkZXJzID0gW1xuXHRGb3JtYXRpb25EaXNwYXRjaGVyLFxuXHRGb3JtYXRpb25BZ2dyZWdhdGVGYWN0b3J5XG5dO1xuXG5jb25zdCByZWFkUHJvdmlkZXJzID0gW1xuXHRGb3JtYXRpb25SZXBvc2l0b3J5XG5dO1xuXG5leHBvcnQgY29uc3QgZm9ybWF0aW9uQ29tbWFuZEhhbmRsZXJzID0gW1xuXHQuLi5IZXJtZXNNb2R1bGUucmVnaXN0ZXJDb21tYW5kSGFuZGxlcihTZXRGb3JtYXRpb25Db21tYW5kSGFuZGxlciwgJ1N0cnVjdHVyZUFnZ3JlZ2F0ZScpLFxuXHQuLi5IZXJtZXNNb2R1bGUucmVnaXN0ZXJDb21tYW5kSGFuZGxlcihUb2dnbGVTZWxlY3RlZFJvd0NvbW1hbmRIYW5kbGVyLCAnU3RydWN0dXJlQWdncmVnYXRlJylcbl07XG5cbmV4cG9ydCBjb25zdCBmb3JtYXRpb25Qcm92aWRlcnMgPSBbXG5cdC4uLmNvbW1hbmRQcm92aWRlcnMsXG5cdC4uLnJlYWRQcm92aWRlcnMsXG5cblx0Rm9ybWF0aW9uRXZlbnRTZXJ2aWNlLFxuXG5cdEZvcm1hdGlvbkNvbnZlcnRlcixcblxuXHRGb3JtYXRpb25Db21tYW5kU2VydmljZSxcblx0Rm9ybWF0aW9uUmVhZE1vZGVsU2VydmljZVxuXTtcbiJdfQ==