import { FormationDispatcher } from './formation.dispatcher';
import { FormationPublisher } from '../api/formation.publisher';
export class FormationDomainPublisher extends FormationPublisher {
    constructor(formationDispatcher) {
        super();
        this.formationDispatcher = formationDispatcher;
    }
    toggleSelectedRow(selectedRow, type, structureId) {
        this.formationDispatcher.toggleSelectedRow(selectedRow, type, structureId);
    }
    changeMode(mode, structureId) {
        this.formationDispatcher.changeMode(mode, structureId);
    }
    setSelection(enabled, structureId) {
        this.formationDispatcher.setSelection(enabled, structureId);
    }
    selectAll(structureId) {
        this.formationDispatcher.selectAll(structureId);
    }
    unselectAll(structureId) {
        this.formationDispatcher.unselectAll(structureId);
    }
}
FormationDomainPublisher.services = [FormationDispatcher];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0aW9uLmRvbWFpbi1wdWJsaXNoZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWdyaWQvc3JjL2NvcmUvc3RydWN0dXJlL2Zvcm1hdGlvbi9jb3JlL2Zvcm1hdGlvbi5kb21haW4tcHVibGlzaGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRzdELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBSWhFLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxrQkFBa0I7SUFFL0QsWUFBNkIsbUJBQXdDO1FBQ3BFLEtBQUssRUFBRSxDQUFDO1FBRG9CLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7SUFFckUsQ0FBQztJQUlELGlCQUFpQixDQUFDLFdBQW1CLEVBQUUsSUFBeUIsRUFBRSxXQUF3QjtRQUN6RixJQUFJLENBQUMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsV0FBVyxFQUFFLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUM1RSxDQUFDO0lBRUQsVUFBVSxDQUFDLElBQXNCLEVBQUUsV0FBd0I7UUFDMUQsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELFlBQVksQ0FBQyxPQUFnQixFQUFFLFdBQXdCO1FBQ3RELElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFRCxTQUFTLENBQUMsV0FBd0I7UUFDakMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRUQsV0FBVyxDQUFDLFdBQXdCO1FBQ25DLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDbkQsQ0FBQzs7QUFwQmUsaUNBQVEsR0FBRyxDQUFDLG1CQUFtQixDQUFVLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb3JtYXRpb25EaXNwYXRjaGVyIH0gZnJvbSAnLi9mb3JtYXRpb24uZGlzcGF0Y2hlcic7XG5pbXBvcnQgeyBTdHJ1Y3R1cmVJZCB9IGZyb20gJy4uLy4uL3N0cnVjdHVyZS1jb3JlL2FwaS9nbG9iYWwvc3RydWN0dXJlLmlkJztcbmltcG9ydCB7IFJvd1NlbGVjdFRvZ2dsZVR5cGUgfSBmcm9tICcuLi9kb21haW4vcm93LXNlbGVjdC10b2dnbGUtdHlwZSc7XG5pbXBvcnQgeyBGb3JtYXRpb25QdWJsaXNoZXIgfSBmcm9tICcuLi9hcGkvZm9ybWF0aW9uLnB1Ymxpc2hlcic7XG5pbXBvcnQgeyBSb3dTZWxlY3Rpb25Nb2RlIH0gZnJvbSAnLi4vYXBpL3Jvdy1zZWxlY3RlZC9yb3ctc2VsZWN0aW9uJztcblxuXG5leHBvcnQgY2xhc3MgRm9ybWF0aW9uRG9tYWluUHVibGlzaGVyIGV4dGVuZHMgRm9ybWF0aW9uUHVibGlzaGVyIHtcblxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGZvcm1hdGlvbkRpc3BhdGNoZXI6IEZvcm1hdGlvbkRpc3BhdGNoZXIpIHtcblx0XHRzdXBlcigpO1xuXHR9XG5cblx0c3RhdGljIHJlYWRvbmx5IHNlcnZpY2VzID0gW0Zvcm1hdGlvbkRpc3BhdGNoZXJdIGFzIGNvbnN0O1xuXG5cdHRvZ2dsZVNlbGVjdGVkUm93KHNlbGVjdGVkUm93OiBzdHJpbmcsIHR5cGU6IFJvd1NlbGVjdFRvZ2dsZVR5cGUsIHN0cnVjdHVyZUlkOiBTdHJ1Y3R1cmVJZCk6IHZvaWQge1xuXHRcdHRoaXMuZm9ybWF0aW9uRGlzcGF0Y2hlci50b2dnbGVTZWxlY3RlZFJvdyhzZWxlY3RlZFJvdywgdHlwZSwgc3RydWN0dXJlSWQpO1xuXHR9XG5cblx0Y2hhbmdlTW9kZShtb2RlOiBSb3dTZWxlY3Rpb25Nb2RlLCBzdHJ1Y3R1cmVJZDogU3RydWN0dXJlSWQpOiB2b2lkIHtcblx0XHR0aGlzLmZvcm1hdGlvbkRpc3BhdGNoZXIuY2hhbmdlTW9kZShtb2RlLCBzdHJ1Y3R1cmVJZCk7XG5cdH1cblxuXHRzZXRTZWxlY3Rpb24oZW5hYmxlZDogYm9vbGVhbiwgc3RydWN0dXJlSWQ6IFN0cnVjdHVyZUlkKTogdm9pZCB7XG5cdFx0dGhpcy5mb3JtYXRpb25EaXNwYXRjaGVyLnNldFNlbGVjdGlvbihlbmFibGVkLCBzdHJ1Y3R1cmVJZCk7XG5cdH1cblxuXHRzZWxlY3RBbGwoc3RydWN0dXJlSWQ6IFN0cnVjdHVyZUlkKTogdm9pZCB7XG5cdFx0dGhpcy5mb3JtYXRpb25EaXNwYXRjaGVyLnNlbGVjdEFsbChzdHJ1Y3R1cmVJZCk7XG5cdH1cblxuXHR1bnNlbGVjdEFsbChzdHJ1Y3R1cmVJZDogU3RydWN0dXJlSWQpOiB2b2lkIHtcblx0XHR0aGlzLmZvcm1hdGlvbkRpc3BhdGNoZXIudW5zZWxlY3RBbGwoc3RydWN0dXJlSWQpO1xuXHR9XG5cbn1cbiJdfQ==