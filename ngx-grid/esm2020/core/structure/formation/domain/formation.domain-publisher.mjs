import { FormationDispatcher } from './formation.dispatcher';
import { FormationPublisher } from '../api/formation.publisher';
export class FormationDomainPublisher extends FormationPublisher {
    constructor(formationDispatcher) {
        super();
        this.formationDispatcher = formationDispatcher;
    }
    toggleSelectedRow(selectedRow, type, structureId) {
        this.formationDispatcher.toggleSelectedRow(selectedRow, type, structureId);
    }
    changeMode(mode, structureId) {
        this.formationDispatcher.changeMode(mode, structureId);
    }
    setSelection(enabled, structureId) {
        this.formationDispatcher.setSelection(enabled, structureId);
    }
    selectAll(structureId) {
        this.formationDispatcher.selectAll(structureId);
    }
    unselectAll(structureId) {
        this.formationDispatcher.unselectAll(structureId);
    }
}
FormationDomainPublisher.services = [FormationDispatcher];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0aW9uLmRvbWFpbi1wdWJsaXNoZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWdyaWQvc3JjL2NvcmUvc3RydWN0dXJlL2Zvcm1hdGlvbi9kb21haW4vZm9ybWF0aW9uLmRvbWFpbi1wdWJsaXNoZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFHN0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFJaEUsTUFBTSxPQUFPLHdCQUF5QixTQUFRLGtCQUFrQjtJQUUvRCxZQUE2QixtQkFBd0M7UUFDcEUsS0FBSyxFQUFFLENBQUM7UUFEb0Isd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtJQUVyRSxDQUFDO0lBSUQsaUJBQWlCLENBQUMsV0FBbUIsRUFBRSxJQUF5QixFQUFFLFdBQXdCO1FBQ3pGLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFRCxVQUFVLENBQUMsSUFBc0IsRUFBRSxXQUF3QjtRQUMxRCxJQUFJLENBQUMsbUJBQW1CLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQsWUFBWSxDQUFDLE9BQWdCLEVBQUUsV0FBd0I7UUFDdEQsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUVELFNBQVMsQ0FBQyxXQUF3QjtRQUNqQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFRCxXQUFXLENBQUMsV0FBd0I7UUFDbkMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNuRCxDQUFDOztBQXBCZSxpQ0FBUSxHQUFHLENBQUMsbUJBQW1CLENBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvcm1hdGlvbkRpc3BhdGNoZXIgfSBmcm9tICcuL2Zvcm1hdGlvbi5kaXNwYXRjaGVyJztcbmltcG9ydCB7IFN0cnVjdHVyZUlkIH0gZnJvbSAnLi4vLi4vY29yZS9hcGkvZ2xvYmFsL3N0cnVjdHVyZS5pZCc7XG5pbXBvcnQgeyBSb3dTZWxlY3RUb2dnbGVUeXBlIH0gZnJvbSAnLi9jb3JlL3Jvdy1zZWxlY3QtdG9nZ2xlLXR5cGUnO1xuaW1wb3J0IHsgRm9ybWF0aW9uUHVibGlzaGVyIH0gZnJvbSAnLi4vYXBpL2Zvcm1hdGlvbi5wdWJsaXNoZXInO1xuaW1wb3J0IHsgUm93U2VsZWN0aW9uTW9kZSB9IGZyb20gJy4uL2FwaS9yb3ctc2VsZWN0ZWQvcm93LXNlbGVjdGlvbic7XG5cblxuZXhwb3J0IGNsYXNzIEZvcm1hdGlvbkRvbWFpblB1Ymxpc2hlciBleHRlbmRzIEZvcm1hdGlvblB1Ymxpc2hlciB7XG5cblx0Y29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBmb3JtYXRpb25EaXNwYXRjaGVyOiBGb3JtYXRpb25EaXNwYXRjaGVyKSB7XG5cdFx0c3VwZXIoKTtcblx0fVxuXG5cdHN0YXRpYyByZWFkb25seSBzZXJ2aWNlcyA9IFtGb3JtYXRpb25EaXNwYXRjaGVyXSBhcyBjb25zdDtcblxuXHR0b2dnbGVTZWxlY3RlZFJvdyhzZWxlY3RlZFJvdzogc3RyaW5nLCB0eXBlOiBSb3dTZWxlY3RUb2dnbGVUeXBlLCBzdHJ1Y3R1cmVJZDogU3RydWN0dXJlSWQpOiB2b2lkIHtcblx0XHR0aGlzLmZvcm1hdGlvbkRpc3BhdGNoZXIudG9nZ2xlU2VsZWN0ZWRSb3coc2VsZWN0ZWRSb3csIHR5cGUsIHN0cnVjdHVyZUlkKTtcblx0fVxuXG5cdGNoYW5nZU1vZGUobW9kZTogUm93U2VsZWN0aW9uTW9kZSwgc3RydWN0dXJlSWQ6IFN0cnVjdHVyZUlkKTogdm9pZCB7XG5cdFx0dGhpcy5mb3JtYXRpb25EaXNwYXRjaGVyLmNoYW5nZU1vZGUobW9kZSwgc3RydWN0dXJlSWQpO1xuXHR9XG5cblx0c2V0U2VsZWN0aW9uKGVuYWJsZWQ6IGJvb2xlYW4sIHN0cnVjdHVyZUlkOiBTdHJ1Y3R1cmVJZCk6IHZvaWQge1xuXHRcdHRoaXMuZm9ybWF0aW9uRGlzcGF0Y2hlci5zZXRTZWxlY3Rpb24oZW5hYmxlZCwgc3RydWN0dXJlSWQpO1xuXHR9XG5cblx0c2VsZWN0QWxsKHN0cnVjdHVyZUlkOiBTdHJ1Y3R1cmVJZCk6IHZvaWQge1xuXHRcdHRoaXMuZm9ybWF0aW9uRGlzcGF0Y2hlci5zZWxlY3RBbGwoc3RydWN0dXJlSWQpO1xuXHR9XG5cblx0dW5zZWxlY3RBbGwoc3RydWN0dXJlSWQ6IFN0cnVjdHVyZUlkKTogdm9pZCB7XG5cdFx0dGhpcy5mb3JtYXRpb25EaXNwYXRjaGVyLnVuc2VsZWN0QWxsKHN0cnVjdHVyZUlkKTtcblx0fVxuXG59XG4iXX0=