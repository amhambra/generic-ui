import { DataType } from './data-type';
import { UnknownDataField } from './type/unknown-data-field';
import { NumberDataField } from './type/number-data-field';
import { StringDataField } from './type/string-data-field';
import { BooleanDataField } from './type/boolean-data-field';
import { DateDataField } from './type/date-data-field';
import { FieldMatchers } from '../../matcher/field.matchers';
export class DataFieldFactory {
    create(fieldConfig) {
        const fieldMatchers = this.createMatchers(fieldConfig);
        let columnType = fieldConfig.type;
        if (columnType === undefined) {
            columnType = DataType.STRING;
        }
        if (columnType === DataType.UNKNOWN) {
            return new UnknownDataField(fieldConfig.field, fieldMatchers, fieldConfig.summaries);
        }
        if (columnType === DataType.NUMBER) {
            return new NumberDataField(fieldConfig.field, fieldMatchers, fieldConfig.summaries);
        }
        if (columnType === DataType.STRING) {
            return new StringDataField(fieldConfig.field, fieldMatchers);
        }
        if (columnType === DataType.BOOLEAN) {
            return new BooleanDataField(fieldConfig.field, fieldMatchers);
        }
        if (columnType === DataType.DATE) {
            return new DateDataField(fieldConfig.field, fieldMatchers);
        }
        return new UnknownDataField(fieldConfig.field, fieldMatchers, fieldConfig.summaries);
    }
    createMatchers(fieldConfig) {
        const matcher = fieldConfig.matcher;
        let sortMatcher;
        if (fieldConfig.sorting) {
            sortMatcher = fieldConfig.sorting.matcher;
        }
        return new FieldMatchers(matcher, sortMatcher);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1maWVsZC5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vYnVpbGQtY2xpL3Byb2plY3RzL25neC1ncmlkL3NyYy9jb3JlL3N0cnVjdHVyZS9maWVsZC9kb21haW4vZmllbGQvZGF0YS9kYXRhLWZpZWxkLmZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN2QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzNELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzdELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFLN0QsTUFBTSxPQUFPLGdCQUFnQjtJQUU1QixNQUFNLENBQUMsV0FBd0I7UUFFOUIsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUV2RCxJQUFJLFVBQVUsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDO1FBRWxDLElBQUksVUFBVSxLQUFLLFNBQVMsRUFBRTtZQUM3QixVQUFVLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQztTQUM3QjtRQUVELElBQUksVUFBVSxLQUFLLFFBQVEsQ0FBQyxPQUFPLEVBQUU7WUFDcEMsT0FBTyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxLQUFlLEVBQUUsYUFBYSxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUMvRjtRQUVELElBQUksVUFBVSxLQUFLLFFBQVEsQ0FBQyxNQUFNLEVBQUU7WUFDbkMsT0FBTyxJQUFJLGVBQWUsQ0FBQyxXQUFXLENBQUMsS0FBZSxFQUFFLGFBQWEsRUFBRSxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDOUY7UUFFRCxJQUFJLFVBQVUsS0FBSyxRQUFRLENBQUMsTUFBTSxFQUFFO1lBQ25DLE9BQU8sSUFBSSxlQUFlLENBQUMsV0FBVyxDQUFDLEtBQWUsRUFBRSxhQUFhLENBQUMsQ0FBQztTQUN2RTtRQUVELElBQUksVUFBVSxLQUFLLFFBQVEsQ0FBQyxPQUFPLEVBQUU7WUFDcEMsT0FBTyxJQUFJLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxLQUFlLEVBQUUsYUFBYSxDQUFDLENBQUM7U0FDeEU7UUFFRCxJQUFJLFVBQVUsS0FBSyxRQUFRLENBQUMsSUFBSSxFQUFFO1lBQ2pDLE9BQU8sSUFBSSxhQUFhLENBQUMsV0FBVyxDQUFDLEtBQWUsRUFBRSxhQUFhLENBQUMsQ0FBQztTQUNyRTtRQUVELE9BQU8sSUFBSSxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsS0FBZSxFQUFFLGFBQWEsRUFBRSxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDaEcsQ0FBQztJQUVPLGNBQWMsQ0FBQyxXQUF3QjtRQUU5QyxNQUFNLE9BQU8sR0FBRyxXQUFXLENBQUMsT0FBTyxDQUFDO1FBQ3BDLElBQUksV0FBVyxDQUFDO1FBRWhCLElBQUksV0FBVyxDQUFDLE9BQU8sRUFBRTtZQUN4QixXQUFXLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7U0FDMUM7UUFFRCxPQUFPLElBQUksYUFBYSxDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNoRCxDQUFDO0NBRUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhVHlwZSB9IGZyb20gJy4vZGF0YS10eXBlJztcbmltcG9ydCB7IFVua25vd25EYXRhRmllbGQgfSBmcm9tICcuL3R5cGUvdW5rbm93bi1kYXRhLWZpZWxkJztcbmltcG9ydCB7IE51bWJlckRhdGFGaWVsZCB9IGZyb20gJy4vdHlwZS9udW1iZXItZGF0YS1maWVsZCc7XG5pbXBvcnQgeyBTdHJpbmdEYXRhRmllbGQgfSBmcm9tICcuL3R5cGUvc3RyaW5nLWRhdGEtZmllbGQnO1xuaW1wb3J0IHsgQm9vbGVhbkRhdGFGaWVsZCB9IGZyb20gJy4vdHlwZS9ib29sZWFuLWRhdGEtZmllbGQnO1xuaW1wb3J0IHsgRGF0ZURhdGFGaWVsZCB9IGZyb20gJy4vdHlwZS9kYXRlLWRhdGEtZmllbGQnO1xuaW1wb3J0IHsgRmllbGRNYXRjaGVycyB9IGZyb20gJy4uLy4uL21hdGNoZXIvZmllbGQubWF0Y2hlcnMnO1xuaW1wb3J0IHsgRGF0YUZpZWxkVHlwZXMgfSBmcm9tICcuL2RhdGEtZmllbGQtdHlwZXMnO1xuaW1wb3J0IHsgRmllbGRDb25maWcgfSBmcm9tICcuLi8uLi8uLi9hcGkvY29uZmlnL2ZpZWxkLmNvbmZpZyc7XG5cblxuZXhwb3J0IGNsYXNzIERhdGFGaWVsZEZhY3Rvcnkge1xuXG5cdGNyZWF0ZShmaWVsZENvbmZpZzogRmllbGRDb25maWcpOiBEYXRhRmllbGRUeXBlcyB7XG5cblx0XHRjb25zdCBmaWVsZE1hdGNoZXJzID0gdGhpcy5jcmVhdGVNYXRjaGVycyhmaWVsZENvbmZpZyk7XG5cblx0XHRsZXQgY29sdW1uVHlwZSA9IGZpZWxkQ29uZmlnLnR5cGU7XG5cblx0XHRpZiAoY29sdW1uVHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRjb2x1bW5UeXBlID0gRGF0YVR5cGUuU1RSSU5HO1xuXHRcdH1cblxuXHRcdGlmIChjb2x1bW5UeXBlID09PSBEYXRhVHlwZS5VTktOT1dOKSB7XG5cdFx0XHRyZXR1cm4gbmV3IFVua25vd25EYXRhRmllbGQoZmllbGRDb25maWcuZmllbGQgYXMgc3RyaW5nLCBmaWVsZE1hdGNoZXJzLCBmaWVsZENvbmZpZy5zdW1tYXJpZXMpO1xuXHRcdH1cblxuXHRcdGlmIChjb2x1bW5UeXBlID09PSBEYXRhVHlwZS5OVU1CRVIpIHtcblx0XHRcdHJldHVybiBuZXcgTnVtYmVyRGF0YUZpZWxkKGZpZWxkQ29uZmlnLmZpZWxkIGFzIHN0cmluZywgZmllbGRNYXRjaGVycywgZmllbGRDb25maWcuc3VtbWFyaWVzKTtcblx0XHR9XG5cblx0XHRpZiAoY29sdW1uVHlwZSA9PT0gRGF0YVR5cGUuU1RSSU5HKSB7XG5cdFx0XHRyZXR1cm4gbmV3IFN0cmluZ0RhdGFGaWVsZChmaWVsZENvbmZpZy5maWVsZCBhcyBzdHJpbmcsIGZpZWxkTWF0Y2hlcnMpO1xuXHRcdH1cblxuXHRcdGlmIChjb2x1bW5UeXBlID09PSBEYXRhVHlwZS5CT09MRUFOKSB7XG5cdFx0XHRyZXR1cm4gbmV3IEJvb2xlYW5EYXRhRmllbGQoZmllbGRDb25maWcuZmllbGQgYXMgc3RyaW5nLCBmaWVsZE1hdGNoZXJzKTtcblx0XHR9XG5cblx0XHRpZiAoY29sdW1uVHlwZSA9PT0gRGF0YVR5cGUuREFURSkge1xuXHRcdFx0cmV0dXJuIG5ldyBEYXRlRGF0YUZpZWxkKGZpZWxkQ29uZmlnLmZpZWxkIGFzIHN0cmluZywgZmllbGRNYXRjaGVycyk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG5ldyBVbmtub3duRGF0YUZpZWxkKGZpZWxkQ29uZmlnLmZpZWxkIGFzIHN0cmluZywgZmllbGRNYXRjaGVycywgZmllbGRDb25maWcuc3VtbWFyaWVzKTtcblx0fVxuXG5cdHByaXZhdGUgY3JlYXRlTWF0Y2hlcnMoZmllbGRDb25maWc6IEZpZWxkQ29uZmlnKTogRmllbGRNYXRjaGVycyB7XG5cblx0XHRjb25zdCBtYXRjaGVyID0gZmllbGRDb25maWcubWF0Y2hlcjtcblx0XHRsZXQgc29ydE1hdGNoZXI7XG5cblx0XHRpZiAoZmllbGRDb25maWcuc29ydGluZykge1xuXHRcdFx0c29ydE1hdGNoZXIgPSBmaWVsZENvbmZpZy5zb3J0aW5nLm1hdGNoZXI7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG5ldyBGaWVsZE1hdGNoZXJzKG1hdGNoZXIsIHNvcnRNYXRjaGVyKTtcblx0fVxuXG59XG4iXX0=