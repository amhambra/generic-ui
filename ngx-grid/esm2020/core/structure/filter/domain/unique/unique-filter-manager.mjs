import { KeyMap } from '@generic-ui/hermes';
import { UniqueValueCollection } from './unique-value-collection';
export class UniqueFilterManager {
    constructor() {
        this.uniqueValueMap = new KeyMap();
    }
    calculate(entities, field) {
        const fieldId = field.getId();
        const optUVM = this.uniqueValueMap.find(fieldId);
        optUVM.ifEmpty(() => {
            const set = new Set();
            for (const entity of entities) {
                set.add(field.getValue(entity));
            }
            // sort
            const sortedValues = Array.from(set.values()).sort((a, b) => {
                return field.getField().sort(a, b);
            });
            const uvc = new UniqueValueCollection(sortedValues, field);
            this.uniqueValueMap.set(field.getId(), uvc);
        });
    }
    calculateAll(entities, fields) {
        for (const field of fields) {
            this.calculate(entities, field);
        }
    }
    filterAll(entities, fields) {
        let values = entities;
        for (const field of fields) {
            values = this.filter(values, field);
        }
        return values;
    }
    filter(entities, field) {
        let values = [];
        this.uniqueValueMap
            .find(field.getId())
            .ifPresent((uvc) => {
            if (uvc.isAllSelected()) {
                values = entities;
            }
            else if (uvc.isAllDisabled()) {
                values = [];
            }
            else {
                values = entities.filter((itemEntity) => {
                    for (const notSelectedValue of uvc.getNotSelected()) {
                        if (field.getField().equals(itemEntity, notSelectedValue.getValue())) {
                            return false;
                        }
                    }
                    return true;
                });
            }
        });
        return values;
    }
    selectAll(fieldId) {
        this.uniqueValueMap
            .find(fieldId)
            .ifPresent((uvc) => {
            uvc.selectAll();
        });
    }
    select(fieldId, uniqueValueId) {
        this.uniqueValueMap
            .find(fieldId)
            .ifPresent((uvc) => {
            uvc.select(uniqueValueId);
        });
    }
    unselectAll(fieldId) {
        this.uniqueValueMap
            .find(fieldId)
            .ifPresent((uvc) => {
            uvc.unselectAll();
        });
    }
    unselect(fieldId, uniqueValueId) {
        this.uniqueValueMap
            .find(fieldId)
            .ifPresent((uvc) => {
            uvc.unselect(uniqueValueId);
        });
    }
    getAll(fields) {
        const map = new Map();
        for (const field of fields) {
            this.getValues(field)
                .ifPresent((v) => {
                map.set(field.getId().toString(), v);
            });
        }
        return map;
    }
    getValues(field) {
        return this.uniqueValueMap
            .find(field.getId())
            .map((uvc) => {
            return uvc.getAll();
        });
    }
}
//# sourceMappingURL=data:application/json;base64,