import { DomainInitializer } from '@generic-ui/hermes';
import { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';
import { SchemaDomainModule } from '../domain/schema.domain-module';
import { SchemaDispatcher } from '../domain/schema.dispatcher';
import { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';
import { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';
import { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';
import { SchemaPublisher } from './schema.publisher';
import { SchemaWarehouse } from './schema.warehouse';
import { SchemaEventRepository } from './schema.event-repository';
import { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';
import { SchemaDomainPublisher } from '../domain/schema.domain-publisher';
import { SchemaDomainWarehouse } from '../domain-read/schema.domain-warehouse';
import { SchemaDomainEventRepository } from '../domain/schema.domain-event-repository';
export class SchemaApiModule {
    registerProviders(container) {
        container.provide(SchemaDispatcher);
        container.provide(SchemaAggregateRepository, InMemorySchemaAggregateRepository);
        container.provide(InMemorySchemaAggregateStore);
        container.provide(InMemorySchemaStore);
        container.provide(SchemaPublisher, SchemaDomainPublisher);
        container.provide(SchemaWarehouse, SchemaDomainWarehouse);
        container.provide(SchemaEventRepository, SchemaDomainEventRepository);
        container.provide(SchemaCssClassesRepository);
    }
}
export const schemaInitializer = new DomainInitializer(new SchemaApiModule(), new SchemaDomainModule());
export const initSchema = () => {
    schemaInitializer.init();
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLmFwaS1tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWdyaWQvc3JjL2NvcmUvc2NoZW1hL2FwaS9zY2hlbWEuYXBpLW1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQTJCLGlCQUFpQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDaEYsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sbUVBQW1FLENBQUM7QUFDdEgsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDcEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDL0QsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDbEYsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sOERBQThELENBQUM7QUFDNUcsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFDekYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUN0RyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUMxRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMvRSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUd2RixNQUFNLE9BQU8sZUFBZTtJQUUzQixpQkFBaUIsQ0FBQyxTQUFvQjtRQUNyQyxTQUFTLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDcEMsU0FBUyxDQUFDLE9BQU8sQ0FBQyx5QkFBeUIsRUFBRSxpQ0FBaUMsQ0FBQyxDQUFDO1FBQ2hGLFNBQVMsQ0FBQyxPQUFPLENBQUMsNEJBQTRCLENBQUMsQ0FBQztRQUNoRCxTQUFTLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDdkMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxlQUFlLEVBQUUscUJBQXFCLENBQUMsQ0FBQztRQUMxRCxTQUFTLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO1FBQzFELFNBQVMsQ0FBQyxPQUFPLENBQUMscUJBQXFCLEVBQUUsMkJBQTJCLENBQUMsQ0FBQztRQUN0RSxTQUFTLENBQUMsT0FBTyxDQUFDLDBCQUEwQixDQUFDLENBQUM7SUFDL0MsQ0FBQztDQUNEO0FBRUQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsSUFBSSxpQkFBaUIsQ0FDckQsSUFBSSxlQUFlLEVBQUUsRUFDckIsSUFBSSxrQkFBa0IsRUFBRSxDQUN4QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLEdBQUcsRUFBRTtJQUM5QixpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMxQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcGlQcm92aWRlcnMsIENvbnRhaW5lciwgRG9tYWluSW5pdGlhbGl6ZXIgfSBmcm9tICdAZ2VuZXJpYy11aS9oZXJtZXMnO1xuaW1wb3J0IHsgSW5NZW1vcnlTY2hlbWFBZ2dyZWdhdGVSZXBvc2l0b3J5IH0gZnJvbSAnLi4vaW5mcmFzdHJ1Y3R1cmUvaW4tbWVtb3J5L2luLW1lbW9yeS5zY2hlbWEuYWdncmVnYXRlLXJlcG9zaXRvcnknO1xuaW1wb3J0IHsgU2NoZW1hRG9tYWluTW9kdWxlIH0gZnJvbSAnLi4vZG9tYWluL3NjaGVtYS5kb21haW4tbW9kdWxlJztcbmltcG9ydCB7IFNjaGVtYURpc3BhdGNoZXIgfSBmcm9tICcuLi9kb21haW4vc2NoZW1hLmRpc3BhdGNoZXInO1xuaW1wb3J0IHsgU2NoZW1hQWdncmVnYXRlUmVwb3NpdG9yeSB9IGZyb20gJy4uL2RvbWFpbi9zY2hlbWEuYWdncmVnYXRlLXJlcG9zaXRvcnknO1xuaW1wb3J0IHsgSW5NZW1vcnlTY2hlbWFBZ2dyZWdhdGVTdG9yZSB9IGZyb20gJy4uL2luZnJhc3RydWN0dXJlL2luLW1lbW9yeS9pbi1tZW1vcnkuc2NoZW1hLmFnZ3JlZ2F0ZS1zdG9yZSc7XG5pbXBvcnQgeyBJbk1lbW9yeVNjaGVtYVN0b3JlIH0gZnJvbSAnLi4vaW5mcmFzdHJ1Y3R1cmUvaW4tbWVtb3J5L2luLW1lbW9yeS5zY2hlbWEuc3RvcmUnO1xuaW1wb3J0IHsgU2NoZW1hUHVibGlzaGVyIH0gZnJvbSAnLi9zY2hlbWEucHVibGlzaGVyJztcbmltcG9ydCB7IFNjaGVtYVdhcmVob3VzZSB9IGZyb20gJy4vc2NoZW1hLndhcmVob3VzZSc7XG5pbXBvcnQgeyBTY2hlbWFFdmVudFJlcG9zaXRvcnkgfSBmcm9tICcuL3NjaGVtYS5ldmVudC1yZXBvc2l0b3J5JztcbmltcG9ydCB7IFNjaGVtYUNzc0NsYXNzZXNSZXBvc2l0b3J5IH0gZnJvbSAnLi4vZG9tYWluLXJlYWQvY3NzLWNsYXNzZXMvc2NoZW1hLmNzcy1jbGFzc2VzLnJlcG9zaXRvcnknO1xuaW1wb3J0IHsgU2NoZW1hRG9tYWluUHVibGlzaGVyIH0gZnJvbSAnLi4vZG9tYWluL3NjaGVtYS5kb21haW4tcHVibGlzaGVyJztcbmltcG9ydCB7IFNjaGVtYURvbWFpbldhcmVob3VzZSB9IGZyb20gJy4uL2RvbWFpbi1yZWFkL3NjaGVtYS5kb21haW4td2FyZWhvdXNlJztcbmltcG9ydCB7IFNjaGVtYURvbWFpbkV2ZW50UmVwb3NpdG9yeSB9IGZyb20gJy4uL2RvbWFpbi9zY2hlbWEuZG9tYWluLWV2ZW50LXJlcG9zaXRvcnknO1xuXG5cbmV4cG9ydCBjbGFzcyBTY2hlbWFBcGlNb2R1bGUgaW1wbGVtZW50cyBBcGlQcm92aWRlcnMge1xuXG5cdHJlZ2lzdGVyUHJvdmlkZXJzKGNvbnRhaW5lcjogQ29udGFpbmVyKTogdm9pZCB7XG5cdFx0Y29udGFpbmVyLnByb3ZpZGUoU2NoZW1hRGlzcGF0Y2hlcik7XG5cdFx0Y29udGFpbmVyLnByb3ZpZGUoU2NoZW1hQWdncmVnYXRlUmVwb3NpdG9yeSwgSW5NZW1vcnlTY2hlbWFBZ2dyZWdhdGVSZXBvc2l0b3J5KTtcblx0XHRjb250YWluZXIucHJvdmlkZShJbk1lbW9yeVNjaGVtYUFnZ3JlZ2F0ZVN0b3JlKTtcblx0XHRjb250YWluZXIucHJvdmlkZShJbk1lbW9yeVNjaGVtYVN0b3JlKTtcblx0XHRjb250YWluZXIucHJvdmlkZShTY2hlbWFQdWJsaXNoZXIsIFNjaGVtYURvbWFpblB1Ymxpc2hlcik7XG5cdFx0Y29udGFpbmVyLnByb3ZpZGUoU2NoZW1hV2FyZWhvdXNlLCBTY2hlbWFEb21haW5XYXJlaG91c2UpO1xuXHRcdGNvbnRhaW5lci5wcm92aWRlKFNjaGVtYUV2ZW50UmVwb3NpdG9yeSwgU2NoZW1hRG9tYWluRXZlbnRSZXBvc2l0b3J5KTtcblx0XHRjb250YWluZXIucHJvdmlkZShTY2hlbWFDc3NDbGFzc2VzUmVwb3NpdG9yeSk7XG5cdH1cbn1cblxuZXhwb3J0IGNvbnN0IHNjaGVtYUluaXRpYWxpemVyID0gbmV3IERvbWFpbkluaXRpYWxpemVyKFxuXHRuZXcgU2NoZW1hQXBpTW9kdWxlKCksXG5cdG5ldyBTY2hlbWFEb21haW5Nb2R1bGUoKVxuKTtcblxuZXhwb3J0IGNvbnN0IGluaXRTY2hlbWEgPSAoKSA9PiB7XG5cdHNjaGVtYUluaXRpYWxpemVyLmluaXQoKTtcbn07XG4iXX0=