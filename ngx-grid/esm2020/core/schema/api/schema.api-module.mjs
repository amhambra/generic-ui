import { DomainInitializer } from '@generic-ui/hermes';
import { InMemorySchemaAggregateRepository } from '../persist/in-memory.schema.aggregate-repository';
import { SchemaDomainModule } from '../core/schema.domain-module';
import { SchemaDispatcher } from '../core/schema.dispatcher';
import { SchemaAggregateRepository } from '../core/schema.aggregate-repository';
import { InMemorySchemaAggregateStore } from '../persist/in-memory.schema.aggregate-store';
import { InMemorySchemaStore } from '../persist/in-memory.schema.store';
import { SchemaPublisher } from './schema.publisher';
import { SchemaWarehouse } from './schema.warehouse';
import { SchemaEventRepository } from './schema.event-repository';
import { SchemaCssClassesRepository } from '../core-read/css-classes/schema.css-classes.repository';
import { SchemaDomainPublisher } from '../core/schema.domain-publisher';
import { SchemaDomainWarehouse } from '../core-read/schema.domain-warehouse';
import { SchemaDomainEventRepository } from '../core/schema.domain-event-repository';
export class SchemaApiModule {
    registerProviders(container) {
        container.provide(SchemaDispatcher);
        container.provide(SchemaAggregateRepository, InMemorySchemaAggregateRepository);
        container.provide(InMemorySchemaAggregateStore);
        container.provide(InMemorySchemaStore);
        container.provide(SchemaPublisher, SchemaDomainPublisher);
        container.provide(SchemaWarehouse, SchemaDomainWarehouse);
        container.provide(SchemaEventRepository, SchemaDomainEventRepository);
        container.provide(SchemaCssClassesRepository);
    }
}
export const schemaInitializer = new DomainInitializer(new SchemaApiModule(), new SchemaDomainModule());
export const initSchema = () => {
    schemaInitializer.init();
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLmFwaS1tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWdyaWQvc3JjL2NvcmUvc2NoZW1hL2FwaS9zY2hlbWEuYXBpLW1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQTJCLGlCQUFpQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDaEYsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDckcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDN0QsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDaEYsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDM0YsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDeEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUNwRyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUM3RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUdyRixNQUFNLE9BQU8sZUFBZTtJQUUzQixpQkFBaUIsQ0FBQyxTQUFvQjtRQUNyQyxTQUFTLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDcEMsU0FBUyxDQUFDLE9BQU8sQ0FBQyx5QkFBeUIsRUFBRSxpQ0FBaUMsQ0FBQyxDQUFDO1FBQ2hGLFNBQVMsQ0FBQyxPQUFPLENBQUMsNEJBQTRCLENBQUMsQ0FBQztRQUNoRCxTQUFTLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDdkMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxlQUFlLEVBQUUscUJBQXFCLENBQUMsQ0FBQztRQUMxRCxTQUFTLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO1FBQzFELFNBQVMsQ0FBQyxPQUFPLENBQUMscUJBQXFCLEVBQUUsMkJBQTJCLENBQUMsQ0FBQztRQUN0RSxTQUFTLENBQUMsT0FBTyxDQUFDLDBCQUEwQixDQUFDLENBQUM7SUFDL0MsQ0FBQztDQUNEO0FBRUQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsSUFBSSxpQkFBaUIsQ0FDckQsSUFBSSxlQUFlLEVBQUUsRUFDckIsSUFBSSxrQkFBa0IsRUFBRSxDQUN4QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLEdBQUcsRUFBRTtJQUM5QixpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMxQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcGlQcm92aWRlcnMsIENvbnRhaW5lciwgRG9tYWluSW5pdGlhbGl6ZXIgfSBmcm9tICdAZ2VuZXJpYy11aS9oZXJtZXMnO1xuaW1wb3J0IHsgSW5NZW1vcnlTY2hlbWFBZ2dyZWdhdGVSZXBvc2l0b3J5IH0gZnJvbSAnLi4vcGVyc2lzdC9pbi1tZW1vcnkuc2NoZW1hLmFnZ3JlZ2F0ZS1yZXBvc2l0b3J5JztcbmltcG9ydCB7IFNjaGVtYURvbWFpbk1vZHVsZSB9IGZyb20gJy4uL2NvcmUvc2NoZW1hLmRvbWFpbi1tb2R1bGUnO1xuaW1wb3J0IHsgU2NoZW1hRGlzcGF0Y2hlciB9IGZyb20gJy4uL2NvcmUvc2NoZW1hLmRpc3BhdGNoZXInO1xuaW1wb3J0IHsgU2NoZW1hQWdncmVnYXRlUmVwb3NpdG9yeSB9IGZyb20gJy4uL2NvcmUvc2NoZW1hLmFnZ3JlZ2F0ZS1yZXBvc2l0b3J5JztcbmltcG9ydCB7IEluTWVtb3J5U2NoZW1hQWdncmVnYXRlU3RvcmUgfSBmcm9tICcuLi9wZXJzaXN0L2luLW1lbW9yeS5zY2hlbWEuYWdncmVnYXRlLXN0b3JlJztcbmltcG9ydCB7IEluTWVtb3J5U2NoZW1hU3RvcmUgfSBmcm9tICcuLi9wZXJzaXN0L2luLW1lbW9yeS5zY2hlbWEuc3RvcmUnO1xuaW1wb3J0IHsgU2NoZW1hUHVibGlzaGVyIH0gZnJvbSAnLi9zY2hlbWEucHVibGlzaGVyJztcbmltcG9ydCB7IFNjaGVtYVdhcmVob3VzZSB9IGZyb20gJy4vc2NoZW1hLndhcmVob3VzZSc7XG5pbXBvcnQgeyBTY2hlbWFFdmVudFJlcG9zaXRvcnkgfSBmcm9tICcuL3NjaGVtYS5ldmVudC1yZXBvc2l0b3J5JztcbmltcG9ydCB7IFNjaGVtYUNzc0NsYXNzZXNSZXBvc2l0b3J5IH0gZnJvbSAnLi4vY29yZS1yZWFkL2Nzcy1jbGFzc2VzL3NjaGVtYS5jc3MtY2xhc3Nlcy5yZXBvc2l0b3J5JztcbmltcG9ydCB7IFNjaGVtYURvbWFpblB1Ymxpc2hlciB9IGZyb20gJy4uL2NvcmUvc2NoZW1hLmRvbWFpbi1wdWJsaXNoZXInO1xuaW1wb3J0IHsgU2NoZW1hRG9tYWluV2FyZWhvdXNlIH0gZnJvbSAnLi4vY29yZS1yZWFkL3NjaGVtYS5kb21haW4td2FyZWhvdXNlJztcbmltcG9ydCB7IFNjaGVtYURvbWFpbkV2ZW50UmVwb3NpdG9yeSB9IGZyb20gJy4uL2NvcmUvc2NoZW1hLmRvbWFpbi1ldmVudC1yZXBvc2l0b3J5JztcblxuXG5leHBvcnQgY2xhc3MgU2NoZW1hQXBpTW9kdWxlIGltcGxlbWVudHMgQXBpUHJvdmlkZXJzIHtcblxuXHRyZWdpc3RlclByb3ZpZGVycyhjb250YWluZXI6IENvbnRhaW5lcik6IHZvaWQge1xuXHRcdGNvbnRhaW5lci5wcm92aWRlKFNjaGVtYURpc3BhdGNoZXIpO1xuXHRcdGNvbnRhaW5lci5wcm92aWRlKFNjaGVtYUFnZ3JlZ2F0ZVJlcG9zaXRvcnksIEluTWVtb3J5U2NoZW1hQWdncmVnYXRlUmVwb3NpdG9yeSk7XG5cdFx0Y29udGFpbmVyLnByb3ZpZGUoSW5NZW1vcnlTY2hlbWFBZ2dyZWdhdGVTdG9yZSk7XG5cdFx0Y29udGFpbmVyLnByb3ZpZGUoSW5NZW1vcnlTY2hlbWFTdG9yZSk7XG5cdFx0Y29udGFpbmVyLnByb3ZpZGUoU2NoZW1hUHVibGlzaGVyLCBTY2hlbWFEb21haW5QdWJsaXNoZXIpO1xuXHRcdGNvbnRhaW5lci5wcm92aWRlKFNjaGVtYVdhcmVob3VzZSwgU2NoZW1hRG9tYWluV2FyZWhvdXNlKTtcblx0XHRjb250YWluZXIucHJvdmlkZShTY2hlbWFFdmVudFJlcG9zaXRvcnksIFNjaGVtYURvbWFpbkV2ZW50UmVwb3NpdG9yeSk7XG5cdFx0Y29udGFpbmVyLnByb3ZpZGUoU2NoZW1hQ3NzQ2xhc3Nlc1JlcG9zaXRvcnkpO1xuXHR9XG59XG5cbmV4cG9ydCBjb25zdCBzY2hlbWFJbml0aWFsaXplciA9IG5ldyBEb21haW5Jbml0aWFsaXplcihcblx0bmV3IFNjaGVtYUFwaU1vZHVsZSgpLFxuXHRuZXcgU2NoZW1hRG9tYWluTW9kdWxlKClcbik7XG5cbmV4cG9ydCBjb25zdCBpbml0U2NoZW1hID0gKCkgPT4ge1xuXHRzY2hlbWFJbml0aWFsaXplci5pbml0KCk7XG59O1xuIl19