import { Component, Inject, Input, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
import { GuiGridGateway } from './gui.grid-gateway';
import { structureParentComponent } from '../../../../feature-view/grid-view/src/structure/parent/structure-parent-component';
import { GuiGridApiProvider } from './api/gui.grid.api-provider';
import { GuiGridThemeCommandInvoker } from './theme/gui.grid.theme.command-invoker';
import { ClassModifier } from '../../../../feature/common/component/src/dom/class/class-modifier';
import { AttributeModifier } from '../../../../feature/common/component/src/dom/attribute/attribute-modifier';
import { StructureDefinition } from '../../../../feature-view/grid-view/src/structure/structure-definition';
import { guiGridStructureDefinition } from './gui.grid-structure-definition';
import * as i0 from "@angular/core";
import * as i1 from "./register/gui.grid.register";
import * as i2 from "../../../../feature-view/grid-view/src/structure/structure-id.generator";
import * as i3 from "../../../../core/structure/formation/src/api/formation.publisher";
import * as i4 from "../../../../core/structure/formation/src/api/formation.warehouse";
import * as i5 from "../../../../core/composition/src/api/composition.publisher";
import * as i6 from "../../../../core/composition/src/api/composition.warehouse";
import * as i7 from "../../../../core/structure/filter/src/api-integration/filter.integration";
import * as i8 from "../../../../core/structure/source/src/api/source.publisher";
import * as i9 from "../../../../core/structure/search/src/api/search.publisher";
import * as i10 from "../../../../core/schema/src/api/schema.publisher";
import * as i11 from "../../../../core/structure/structure-core/src/api/structure.publisher";
import * as i12 from "../../../../core/structure/summaries/src/api/summaries.publisher";
import * as i13 from "../../../../core/structure/sorting/src/api/sorting.publisher";
import * as i14 from "../../../../core/structure/paging/src/api/paging.publisher";
import * as i15 from "../../../../feature-view/grid-view/src/structure/structure.component";
import * as i16 from "../../../../feature-view/grid-view/src/structure/gate/column/header/structure-column-header.gate";
import * as i17 from "../../../../feature-view/grid-view/src/structure/gate/paging/structure-paging.gate";
import * as i18 from "../../../../feature-view/grid-view/src/structure/gate/searching/structure-searching.gate";
import * as i19 from "../../../../feature-view/grid-view/src/structure/gate/source/structure-selection.gate";
import * as i20 from "../../../../feature-view/grid-view/src/structure/gate/l10n/structure-l10n.gate";
import * as i21 from "../../../../feature-view/grid-view/src/structure/gate/panel/structure-panel.gate";
import * as i22 from "../../../../feature-view/grid-view/src/structure/gate/row/detail/structure-row-detail.gate";
import * as i23 from "../../../../feature-view/grid-view/src/structure/gate/column/menu/structure-column-menu.gate";
import * as i24 from "../../../../feature/structure/summaries/src/gate/structure-summaries.gate";
import * as i25 from "../../../../feature-view/grid-view/src/structure/gate/panel/info/structure-info-panel.gate";
import * as i26 from "../../../../feature-view/grid-view/src/structure/gate/row/class/structure-row-class.gate";
import * as i27 from "../../../../feature-view/grid-view/src/structure/gate/row/style/structure-row-style.gate";
import * as i28 from "../../../../feature-view/grid-view/src/structure/gate/row/coloring/structure-row-coloring.gate";
import * as i29 from "../../../../feature/schema/src/gate/grid/theme-grid.gate";
import * as i30 from "../../../../feature/structure/sorting/src/gate/structure-sorting.gate";
import * as i31 from "../../../../feature-view/grid-view/src/structure/gate/source/source-loading.gate";
import * as i32 from "../../../../feature/structure/filter/src/gate/structure-filter.gate";
import * as i33 from "../../../../feature/structure/filter/src/gate/structure-quick-filters.gate";
import * as i34 from "../../../../feature/structure/vertical-formation/src/gate/vertical-formation.gate";
export class GuiGridComponent extends GuiGridGateway {
    constructor(platformId, elementRef, changeDetectorRef, gridRegister, structureIdGenerator, 
    // delegate
    formationCommandDispatcher, formationWarehouse, compositionCommandInvoker, compositionWarehouse, filterIntegration, sourceCommandDispatcher, searchCommandInvoker, schemaCommandInvoker, structureCommandDispatcher, summariesCommandInvoker, sortingCommandInvoker, pagingCommandInvoker) {
        super();
        this.platformId = platformId;
        this.elementRef = elementRef;
        this.changeDetectorRef = changeDetectorRef;
        this.gridRegister = gridRegister;
        this.structureIdGenerator = structureIdGenerator;
        this.formationCommandDispatcher = formationCommandDispatcher;
        this.formationWarehouse = formationWarehouse;
        this.compositionCommandInvoker = compositionCommandInvoker;
        this.compositionWarehouse = compositionWarehouse;
        this.filterIntegration = filterIntegration;
        this.sourceCommandDispatcher = sourceCommandDispatcher;
        this.searchCommandInvoker = searchCommandInvoker;
        this.schemaCommandInvoker = schemaCommandInvoker;
        this.structureCommandDispatcher = structureCommandDispatcher;
        this.summariesCommandInvoker = summariesCommandInvoker;
        this.sortingCommandInvoker = sortingCommandInvoker;
        this.pagingCommandInvoker = pagingCommandInvoker;
        this.gridThemeCommandInvoker = new GuiGridThemeCommandInvoker(this.schemaCommandInvoker, this.gridThemeConverter, this.gridRowColoringConverter);
        this.classModifier = new ClassModifier(this.elementRef.nativeElement);
        this.attributeModifier = new AttributeModifier(this.elementRef.nativeElement);
    }
    ngOnInit() {
        this.classModifier.getHost().add('gui-grid');
        this.initApi();
        let gridId = this.gridId;
        if (gridId === undefined) {
            // gridId = this.gridIdGenerator.generateId();
            gridId = 'gui-grid-' + this.structureIdGenerator.generateId();
        }
        this.localGridId = gridId;
        this.exposeGridId();
        // register
        this.gridRegister.register(gridId, this, this.structureRef.getStructureId());
        if (isPlatformBrowser(this.platformId)) {
            window['getGuiGrid'] = (gridId) => {
                const gridConsoleConfig = this.gridRegister.getValues(gridId);
                if (gridConsoleConfig) {
                    return this.api;
                }
                else {
                    return undefined;
                }
            };
        }
    }
    ngOnDestroy() {
        this.gridRegister.unregister(this.localGridId);
    }
    getElementRef() {
        return this.elementRef;
    }
    detectChanges() {
        this.changeDetectorRef.detectChanges();
    }
    exposeGridId() {
        this.attributeModifier.getHost().setAttribute(GuiGridComponent.GUI_GRID_ID, this.localGridId);
    }
    initApi() {
        this.api = new GuiGridApiProvider(this.structureRef.structureId, this.structureRef.compositionId, this.structureRef.schemaReadModelRootId, this.formationCommandDispatcher, this.formationWarehouse, this.compositionCommandInvoker, this.compositionWarehouse, this.filterIntegration, this.sourceCommandDispatcher, this.searchCommandInvoker, this.gridThemeCommandInvoker, this.structureCommandDispatcher, this.summariesCommandInvoker, this.sortingCommandInvoker, this.pagingCommandInvoker).provide();
    }
}
GuiGridComponent.GUI_GRID_ID = 'gui-grid-id';
GuiGridComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: GuiGridComponent, deps: [{ token: PLATFORM_ID }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.GuiGridRegister }, { token: i2.StructureIdGenerator }, { token: i3.FormationPublisher }, { token: i4.FormationWarehouse }, { token: i5.CompositionPublisher }, { token: i6.CompositionWarehouse }, { token: i7.FilterIntegration }, { token: i8.SourcePublisher }, { token: i9.SearchPublisher }, { token: i10.SchemaPublisher }, { token: i11.StructurePublisher }, { token: i12.SummariesPublisher }, { token: i13.SortingPublisher }, { token: i14.PagingPublisher }], target: i0.ɵɵFactoryTarget.Component });
GuiGridComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: GuiGridComponent, selector: "gui-grid", inputs: { gridId: "gridId" }, providers: [
        {
            provide: StructureDefinition,
            useValue: guiGridStructureDefinition
        },
        {
            provide: structureParentComponent,
            useExisting: GuiGridComponent
        }
    ], viewQueries: [{ propertyName: "structureRef", first: true, predicate: ["structure"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: "<gui-structure\n\t#structure\n\t(cellEditCanceled)=\"onCellEditCancel()\"\n\t(cellEditEntered)=\"onCellEditEnter()\"\n\t(cellEditSubmitted)=\"onCellEditSubmit()\"\n\t(columnsChanged)=\"onColumnsChange()\"\n\t(containerWidthChanged)=\"onContainerWidthChange($event)\"\n\t(horizontalGridChanged)=\"onHorizontalGrid($event)\"\n\t(itemsSelected)=\"onItemSelect($event)\"\n\t(pageChanged)=\"onPageChange($event)\"\n\t(pageSizeChanged)=\"onPageSizeChange($event)\"\n\t(rowColoringChanged)=\"onRowColoring($event)\"\n\t(searchPhraseChanged)=\"onSearchPhrase($event)\"\n\t(selectedRows)=\"onRowsSelect($event)\"\n\n\t(sourceEdited)=\"onSourceEdit($event)\"\n\t(themeChanged)=\"onTheme($event)\"\n\t(verticalGridChanged)=\"onVerticalGrid($event)\"\n\t[autoResizeWidth]=\"autoResizeWidth\"\n\t[cellEditing]=\"cellEditingConfig\"\n\t[columnHeaderBottom]=\"columnHeaderBottom\"\n\t[columnHeaderTop]=\"columnHeaderTop\"\n\t[columnMenu]=\"columnMenuConfig\"\n\t[columns]=\"columnsConfig\"\n\t[editMode]=\"editMode\"\n\t[filtering]=\"filtering\"\n\t[footerPanel]=\"footerPanel\"\n\t[horizontalGrid]=\"horizontalGrid\"\n\t[infoPanel]=\"infoPanel\"\n\t[loading]=\"loading\"\n\t[localization]=\"localization\"\n\t[maxHeight]=\"maxHeight\"\n\t[paging]=\"paging\"\n\t[quickFilters]=\"quickFilters\"\n\t[rowClass]=\"rowClass\"\n\t[rowColoring]=\"rowColoringConfig\"\n\t[rowDetail]=\"rowDetail\"\n\t[rowHeight]=\"rowHeight\"\n\t[rowSelection]=\"rowSelectionConfig\"\n\t[rowStyle]=\"rowStyle\"\n\t[searching]=\"searching\"\n\t[sorting]=\"sorting\"\n\t[source]=\"source\"\n\t[summaries]=\"summaries\"\n\t[theme]=\"themeConfig\"\n\t[titlePanel]=\"titlePanel\"\n\t[verticalGrid]=\"verticalGrid\"\n\t[virtualScroll]=\"virtualScroll\"\n\t[width]=\"width\"\n>\n</gui-structure>\n", styles: [".gui-grid{display:block;width:100%}\n"], dependencies: [{ kind: "component", type: i15.StructureComponent, selector: "gui-structure" }, { kind: "directive", type: i16.StructureColumnHeaderGate, selector: "gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]", inputs: ["columnHeaderTop", "columnHeaderBottom"] }, { kind: "directive", type: i17.StructurePagingGate, selector: "gui-structure[paging]" }, { kind: "directive", type: i18.StructureSearchingGate, selector: "gui-structure[searching]" }, { kind: "directive", type: i19.StructureSelectionGate, selector: "gui-structure[rowSelection], gui-structure[selectionGate]", inputs: ["selectionGate"] }, { kind: "directive", type: i20.StructureL10nGate, selector: "gui-structure[localization]", inputs: ["localization"] }, { kind: "directive", type: i21.StructurePanelGate, selector: "gui-structure[titlePanel][footerPanel]", inputs: ["titlePanel", "footerPanel"] }, { kind: "directive", type: i22.StructureRowDetailGate, selector: "gui-structure[rowDetail]", inputs: ["rowDetail"] }, { kind: "directive", type: i23.StructureColumnMenuGate, selector: "gui-structure[columnMenu]", inputs: ["columnMenu"] }, { kind: "directive", type: i24.StructureSummariesGate, selector: "gui-structure[summaries]", inputs: ["summaries"] }, { kind: "directive", type: i25.StructureInfoPanelGate, selector: "gui-structure[infoPanel]", inputs: ["infoPanel"] }, { kind: "directive", type: i26.StructureRowClassGate, selector: "gui-structure[rowClass]", inputs: ["rowClass"] }, { kind: "directive", type: i27.StructureRowStyleGate, selector: "gui-structure[rowStyle]", inputs: ["rowStyle"] }, { kind: "directive", type: i28.StructureRowColoringGate, selector: "gui-structure[rowColoring]", inputs: ["rowColoring"], outputs: ["rowColoringChanged"] }, { kind: "directive", type: i29.ThemeGridGate, selector: "gui-structure[verticalGrid][horizontalGrid]", inputs: ["verticalGrid", "horizontalGrid"], outputs: ["horizontalGridChanged", "verticalGridChanged"] }, { kind: "directive", type: i30.StructureSortingGate, selector: "gui-structure[sorting]", inputs: ["sorting"] }, { kind: "directive", type: i31.SourceLoadingGate, selector: "gui-structure[loading]", inputs: ["loading"] }, { kind: "directive", type: i32.StructureFilterGate, selector: "gui-structure[filtering]", inputs: ["filtering"] }, { kind: "directive", type: i33.StructureQuickFiltersGate, selector: "gui-structure[quickFilters]", inputs: ["quickFilters"] }, { kind: "directive", type: i34.VerticalFormationGate, selector: "gui-structure[virtualScroll]", inputs: ["virtualScroll"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: GuiGridComponent, decorators: [{
            type: Component,
            args: [{ selector: 'gui-grid', providers: [
                        {
                            provide: StructureDefinition,
                            useValue: guiGridStructureDefinition
                        },
                        {
                            provide: structureParentComponent,
                            useExisting: GuiGridComponent
                        }
                    ], encapsulation: ViewEncapsulation.None, template: "<gui-structure\n\t#structure\n\t(cellEditCanceled)=\"onCellEditCancel()\"\n\t(cellEditEntered)=\"onCellEditEnter()\"\n\t(cellEditSubmitted)=\"onCellEditSubmit()\"\n\t(columnsChanged)=\"onColumnsChange()\"\n\t(containerWidthChanged)=\"onContainerWidthChange($event)\"\n\t(horizontalGridChanged)=\"onHorizontalGrid($event)\"\n\t(itemsSelected)=\"onItemSelect($event)\"\n\t(pageChanged)=\"onPageChange($event)\"\n\t(pageSizeChanged)=\"onPageSizeChange($event)\"\n\t(rowColoringChanged)=\"onRowColoring($event)\"\n\t(searchPhraseChanged)=\"onSearchPhrase($event)\"\n\t(selectedRows)=\"onRowsSelect($event)\"\n\n\t(sourceEdited)=\"onSourceEdit($event)\"\n\t(themeChanged)=\"onTheme($event)\"\n\t(verticalGridChanged)=\"onVerticalGrid($event)\"\n\t[autoResizeWidth]=\"autoResizeWidth\"\n\t[cellEditing]=\"cellEditingConfig\"\n\t[columnHeaderBottom]=\"columnHeaderBottom\"\n\t[columnHeaderTop]=\"columnHeaderTop\"\n\t[columnMenu]=\"columnMenuConfig\"\n\t[columns]=\"columnsConfig\"\n\t[editMode]=\"editMode\"\n\t[filtering]=\"filtering\"\n\t[footerPanel]=\"footerPanel\"\n\t[horizontalGrid]=\"horizontalGrid\"\n\t[infoPanel]=\"infoPanel\"\n\t[loading]=\"loading\"\n\t[localization]=\"localization\"\n\t[maxHeight]=\"maxHeight\"\n\t[paging]=\"paging\"\n\t[quickFilters]=\"quickFilters\"\n\t[rowClass]=\"rowClass\"\n\t[rowColoring]=\"rowColoringConfig\"\n\t[rowDetail]=\"rowDetail\"\n\t[rowHeight]=\"rowHeight\"\n\t[rowSelection]=\"rowSelectionConfig\"\n\t[rowStyle]=\"rowStyle\"\n\t[searching]=\"searching\"\n\t[sorting]=\"sorting\"\n\t[source]=\"source\"\n\t[summaries]=\"summaries\"\n\t[theme]=\"themeConfig\"\n\t[titlePanel]=\"titlePanel\"\n\t[verticalGrid]=\"verticalGrid\"\n\t[virtualScroll]=\"virtualScroll\"\n\t[width]=\"width\"\n>\n</gui-structure>\n", styles: [".gui-grid{display:block;width:100%}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [PLATFORM_ID]
                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.GuiGridRegister }, { type: i2.StructureIdGenerator }, { type: i3.FormationPublisher }, { type: i4.FormationWarehouse }, { type: i5.CompositionPublisher }, { type: i6.CompositionWarehouse }, { type: i7.FilterIntegration }, { type: i8.SourcePublisher }, { type: i9.SearchPublisher }, { type: i10.SchemaPublisher }, { type: i11.StructurePublisher }, { type: i12.SummariesPublisher }, { type: i13.SortingPublisher }, { type: i14.PagingPublisher }]; }, propDecorators: { structureRef: [{
                type: ViewChild,
                args: ['structure', { static: true }]
            }], gridId: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,