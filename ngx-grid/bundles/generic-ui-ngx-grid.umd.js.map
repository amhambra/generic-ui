{"version":3,"file":"generic-ui-ngx-grid.umd.js","sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/aggregation/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/cell-editing/grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/align/grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/paging/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.global-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/structure-paging.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/structure-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/structure-source.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/paging/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.id.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.global-id.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.global-id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/source.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure-aggregation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/structure-paging.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure-filter.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/base.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/type.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure-aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/domain/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/domain/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema.read-model-root.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/read/in-memory.schema.read-model-store.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/read/in-memory.schema.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\taggregation?: GuiColumnAggregation;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../../lib/composition/domain/column/column-aggregation.config';\nimport { AggregationType } from '../../../../../../lib/structure/domain/structure/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/column/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column/column-cell-editing.config';\n\nexport class GridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../ui-api/grid.api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column/column-align';\n\nexport class GridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './aggregation/grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\nimport { GridColumnCellEditingConverter } from './cell-editing/grid.column-cell-editing.converter';\nimport { GridColumnAlignConverter } from './align/grid.column-align.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/schema/domain/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/schema/ui-api/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/ui/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../ui-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../structure/structure.read-model-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../structure/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../read/structure/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../read/paging/paging.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { Paging } from '../../read/paging/paging';\n\n\n@Injectable()\nexport class StructurePagingReadModelWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagingConfig } from '../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { PagingConfig } from './paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class StructurePagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../read/source/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../read/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceReadModelWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../read/paging/paging';\nimport { StructurePagingReadModelWarehouse } from '../../ui-api/paging/structure-paging.read-model-warehouse';\nimport { StructurePagingCommandDispatcher } from '../../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructureSourceReadModelWarehouse } from '../../ui-api/source/structure-source.read-model-warehouse';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingReadModelService: StructurePagingReadModelWarehouse,\n\t\t\t\tprivate pagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tprivate sourceReadModelService: StructureSourceReadModelWarehouse,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../read/paging/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../read/paging/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../read/paging/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../read/paging/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../ui-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../read/paging/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../ui-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.10.2\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Observable } from 'rxjs';\n\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRoot } from './schema.read-model-root';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\n\n\nexport abstract class SchemaReadModelRootRepository extends ReadModelRootRepository {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(readModelRootId: SchemaReadModelRootId): Observable<Readonly<SchemaReadModelRoot>>;\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { SchemaReadModelRootRepository } from '../read/schema.read-model-root-repository';\nimport { schemaGlobalId } from './schema.global-id';\nimport { SchemaTheme } from '../domain/schema-theme';\nimport { SchemaReadModelRoot } from '../read/schema.read-model-root';\nimport { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\nimport { SchemaCssClass } from '../read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelWarehouse {\n\n\tconstructor(private schemaReadModelRootRepository: SchemaReadModelRootRepository) {\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaReadModelRootRepository\n\t\t\t\t   .on(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1),\n\t\t\t\t\t   map((schema: SchemaReadModelRoot) => {\n\t\t\t\t\t\t   return schema.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaReadModelRootRepository\n\t\t\t\t   .on(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: SchemaReadModelRoot) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaReadModelWarehouse } from '../../../../schema/ui-api/schema.read-model-warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaReadModelWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { StructureSourceReadModelWarehouse } from '../../../ui-api/source/structure-source.read-model-warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\n\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t</ng-container>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span\n\t\t\t\t\t\t(click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceReadModelWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from '../read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from '../read/composition.read-mode-root';\nimport { CellTemplateWithContext } from '../read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from '../read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionReadModelWarehouse } from '../../../composition/ui-api/composition.read-model-warehouse';\nimport { CellTemplateWithContext } from '../../../composition/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-bold\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-italic\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input, ElementRef } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign();\n\t\t}\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\n\t\treturn this.templateFun(this.findValue(entity, searchPhrase));\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn txt;\n\t\t} else {\n\t\t\treturn this.accessor(entity);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/domain/structure/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.CHECKBOX;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.CENTER;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\t// onWidthChanged(compositionId: CompositionId): Observable<number> {\n\t// \treturn this.domainEventBus\n\t// \t\t\t   .ofEvent(\n\t// \t\t\t\t   CompositionColumnsSetEvent\n\t// \t\t\t   )\n\t// \t\t\t   .pipe(\n\t// \t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t// \t\t\t   );\n\t// }\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/domain/structure/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/domain/structure/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/domain/structure/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../structure/domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionReadModelWarehouse } from './composition.read-model-warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from '../read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from '../read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionReadModelWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId());\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateCommandHandler, AggregateRepository, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements AggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation, Input } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from '../read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../ui/column-query.component';\nimport { FunctionViewComponent } from '../read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from '../read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from '../read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../read/view/percentage/percentage-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from './paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructurePagingCommandDispatcher } from '../../../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../domain/paging/paging.manager-factory';\nimport { PagingDispatcher } from '../../../domain/paging/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends StructurePagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { StructurePagingReadModelWarehouse } from '../../../ui-api/paging/structure-paging.read-model-warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../read/paging/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../read/paging/paging';\n\n\n@Injectable()\nexport class LocalPagingReadModelWarehouse extends StructurePagingReadModelWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../structure/structure.read-model-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../structure/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../read/formation/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from '../../read/formation/selected-rows/selected-rows-list';\nimport { Formation } from '../../read/formation/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../read/formation/formation-repository';\nimport { SelectedRowsList } from '../../../read/formation/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelWarehouse extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../ui-api/structure.global-id';\nimport { StructureId } from '../../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../domain/structure.id';\nimport { structureGlobalId } from '../../../../ui-api/structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { StructureId } from '../../structure.id';\nimport { structureGlobalId } from '../../../ui-api/structure.global-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../../read/structure/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../read/structure/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../schema/domain/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { CreateStructureCommand } from '../../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../../domain/structure/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/field/init/init-fields.command';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../../domain/structure/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { StructureSetHeightCommand } from '../../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../ui-api/structure/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../ui-api/structure/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { structureGlobalId } from '../../../ui-api/structure.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/formation';\nimport { Paging } from '../paging/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../read/structure/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../read/structure/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../read/structure/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowHeightSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../infrastructure/in-memory/read/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../domain/paging/set/paging-set.event';\nimport { PrevPageEvent } from '../../../domain/paging/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../domain/paging/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../domain/paging/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent,\n\t\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled())\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../read/structure/structure.read-model-repository';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../read/structure/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureReadModelWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(aggregateId: AggregateId = structureGlobalId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(aggregateId);\n\t}\n\n\tonRowHeight(aggregateId: AggregateId = structureGlobalId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelWarehouse } from '../../../ui-api/structure/structure.read-model-warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../read/structure/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../read/structure/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../../read/structure/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureReadModelWarehouse extends StructureReadModelWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { StructureSourceReadModelWarehouse } from './structure-source.read-model-warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceReadModelWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../ui-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { StructureSourceReadModelWarehouse } from '../../../ui-api/source/structure-source.read-model-warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceReadModelWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceReadModelWarehouse } from '../../../ui-api/source/structure-source.read-model-warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../read/structure/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../read/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../read/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelWarehouse extends StructureSourceReadModelWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/ui-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelWarehouse } from '../../../../composition/ui-api/composition.read-model-warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/ui-api/composition.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionReadModelWarehouse extends CompositionReadModelWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../read/structure/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../read/structure/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootRepository } from '../../../../schema/read/schema.read-model-root-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { SchemaReadModelWarehouse } from '../../../../schema/ui-api/schema.read-model-warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../schema/read/schema-css-class';\n\n\n@Injectable()\nexport class LocalSchemaReadModelWarehouse extends SchemaReadModelWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaReadModelRootRepository: SchemaReadModelRootRepository) {\n\t\tsuper(schemaReadModelRootRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends Command {\n\n\tconstructor(private readonly schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/schema-theme';\nimport { schemaGlobalId } from './schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/schema-row-coloring';\nimport { StructureId } from '../../structure/domain/structure.id';\nimport { structureGlobalId } from '../../structure/ui-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../structure/ui-api/structure/structure.command-dispatcher';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setRowColoring(rowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../schema/ui-api/schema.command-dispatcher';\nimport { SchemaRowColoring } from '../../../../schema/domain/schema-row-coloring';\nimport { StructureCommandDispatcher } from '../../../ui-api/structure/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: SchemaRowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../ui-api/paging/structure-paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingReadModelWarehouse } from './paging/local-paging.read-model-warehouse';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelWarehouse } from './formation/local-formation.read-model-warehouse';\nimport { StructureCommandDispatcher } from '../../ui-api/structure/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureReadModelWarehouse } from '../../ui-api/structure/structure.read-model-warehouse';\nimport { LocalStructureReadModelWarehouse } from './structure/local-structure.read-model-warehouse';\nimport { SourceCommandDispatcher } from '../../ui-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceReadModelWarehouse } from '../../ui-api/source/structure-source.read-model-warehouse';\nimport { LocalSourceReadModelWarehouse } from './source/local-source.read-model-warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionReadModelWarehouse } from '../../../composition/ui-api/composition.read-model-warehouse';\nimport { LocalCompositionReadModelWarehouse } from './composition/local-composition.read-model-warehouse';\nimport { StructurePagingReadModelWarehouse } from '../../ui-api/paging/structure-paging.read-model-warehouse';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaReadModelWarehouse } from '../../../schema/ui-api/schema.read-model-warehouse';\nimport { LocalSchemaReadModelWarehouse } from './schema/local-schema.read-model-warehouse';\nimport { SchemaCommandDispatcher } from '../../../schema/ui-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\n\nexport const localProviders = [\n\t{ provide: StructurePagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: StructurePagingReadModelWarehouse, useClass: LocalPagingReadModelWarehouse },\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureReadModelWarehouse, useClass: LocalStructureReadModelWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceReadModelWarehouse, useClass: LocalSourceReadModelWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionReadModelWarehouse, useClass: LocalCompositionReadModelWarehouse },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: SchemaReadModelWarehouse, useClass: LocalSchemaReadModelWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../schema/read/schema-css-class';\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/schema-row-coloring';\nimport { SchemaReadModelWarehouse } from '../../../schema/ui-api/schema.read-model-warehouse';\nimport { SchemaReadModelRootId } from '../../../schema/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaReadModelWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n@Injectable()\nexport class StructureAggregationCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandDispatcher } from '../../../ui-api/structure/aggregation/structure-aggregation.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","export class ColumnMenuConfig {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../ui-api/structure/structure.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../../ui-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../../ui-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/ui-api/composition.event-repository';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../ui-api/structure/search/structure-search-event.service';\nimport { SchemaCommandDispatcher } from '../../../schema/ui-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected pagingCommandService: StructurePagingCommandDispatcher,\n\t\tprotected pagingEventService: StructurePagingEventRepository,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandService: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructurePagingReadModelWarehouse } from './structure-paging.read-model-warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { NextPageEvent } from '../../domain/paging/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/page/page-changed.event';\nimport { Paging } from '../../read/paging/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class StructurePagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingReadModelWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelWarehouse } from '../structure/structure.read-model-warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureReadModelService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from '../../../read/structure/searching/phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../read/structure/structure.read-model-root';\nimport { StructurePagingCommandDispatcher } from '../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../ui-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../ui-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/ui-api/composition.event-repository';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../ui-api/structure/structure.command-dispatcher';\nimport { StructureReadModelWarehouse } from '../ui-api/structure/structure.read-model-warehouse';\nimport { CompositionReadModelWarehouse } from '../../composition/ui-api/composition.read-model-warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../ui-api/structure/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../schema/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../schema/ui-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-aggregation.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'../../composition/ui/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tpagingEventService: StructurePagingEventRepository,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventService: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionReadModelWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive\n\t\t);\n\n\t\tthis.structureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../ui-api/structure/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelWarehouse } from '../../../../composition/ui-api/composition.read-model-warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaReadModelWarehouse } from '../../../../schema/ui-api/schema.read-model-warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaReadModelWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../ui-api/structure/structure.command-dispatcher';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../read/structure/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../read/structure/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterReadModelWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../ui-api/structure/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterReadModelWarehouse } from '../../ui-api/structure/filter/structure-filter.read-model-warehouse';\nimport { CompositionReadModelWarehouse } from '../../../composition/ui-api/composition.read-model-warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureReadModelWarehouse } from '../../ui-api/structure/structure.read-model-warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelWarehouse,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionReadModelWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../ui-api/structure/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../read/formation/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../read/structure/vertical-formation/vertical-formation.repository';\nimport { StructureReadModelWarehouse } from '../../ui-api/structure/structure.read-model-warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseRepository } from '../../read/structure/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../read/structure/searching/highlight/structure.search-highlight.archive';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationReadModelService: FormationReadModelService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate structureId: StructureId, // REfactor\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../ui-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tconst parentElement = this.elementRef.nativeElement.querySelector('.gui-cell-edit-mode');\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: parentElement\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../schema/domain/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../ui-api/structure/structure.command-dispatcher';\nimport { StructureReadModelWarehouse } from '../../ui-api/structure/structure.read-model-warehouse';\nimport { StructureSourceReadModelWarehouse } from '../../ui-api/source/structure-source.read-model-warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionReadModelWarehouse } from '../../../composition/ui-api/composition.read-model-warehouse';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate sourceReadModelService: StructureSourceReadModelWarehouse,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelWarehouse,\n\t\t\t\tprivate formationReadModelService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tcombineLatest(\n\t\t\tthis.sourceReadModelService.onEntities(),\n\t\t\tthis.structureReadModelService.onContainerHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\tcontainerHeight: number = combine[1];\n\n\t\t\t\tthis.source = source;\n\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../domain/structure.id';\nimport { Reactive } from '../../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../read/structure/searching/enabled/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { structureGlobalId } from '../../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { Paging } from '../../read/paging/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureReadModelWarehouse } from '../../ui-api/structure/structure.read-model-warehouse';\nimport { StructurePagingReadModelWarehouse } from '../../ui-api/paging/structure-paging.read-model-warehouse';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelWarehouse } from '../../ui-api/structure/filter/structure-filter.read-model-warehouse';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingReadModelWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate readonly structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../read/structure/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../read/structure/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../domain/paging/set/paging-set.event';\nimport { PrevPageEvent } from '../../../domain/paging/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../domain/paging/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../domain/paging/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../read/structure/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../structure/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../structure/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetAggregationEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetAggregationEnabledCommand> {\n\t\treturn StructureSetAggregationEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setAggregationEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.container.getHeight() / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.container.getHeight() / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../../composition/domain/column/column-aggregation.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\nimport { StructureId } from '../../structure.id';\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../structure.id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../../domain/structure/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../../domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../structure/field/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { StructureId } from '../../../structure.id';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.horizontalGrid = SchemaAggregate.DEFAULT_HORIZONTAL_GRID;\n\t\tthis.verticalGrid = SchemaAggregate.DEFAULT_VERTICAL_GRID;\n\t\tthis.theme = SchemaAggregate.DEFAULT_THEME;\n\t\tthis.rowColoring = SchemaAggregate.DEFAULT_ROW_COLORING;\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.rowColoring = SchemaRowColoring.NONE;\n\t\t\tthis.verticalGrid = false;\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.rowColoring = SchemaRowColoring.NONE;\n\t\t\tthis.verticalGrid = false;\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.rowColoring = SchemaRowColoring.NONE;\n\t\t\tthis.verticalGrid = false;\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.rowColoring = SchemaRowColoring.ODD;\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n}\n","import { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../paging/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../paging/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\nimport { SchemaAggregate } from '../../../schema/domain/schema.aggregate';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../paging/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../read/paging/paging.repository';\nimport { PagingManagerFactory } from '../../domain/paging/paging.manager-factory';\nimport { PagingConverter } from '../../read/paging/paging.converter';\nimport { StructurePagingCommandDispatcher } from './structure-paging.command-dispatcher';\nimport { StructurePagingReadModelWarehouse } from './structure-paging.read-model-warehouse';\nimport { StructurePagingEventRepository } from './structure-paging.event-repository';\n\n\nconst commandProviders = [\n\tPagingDispatcher\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingManagerFactory,\n\tPagingConverter,\n\n\tStructurePagingCommandDispatcher,\n\tStructurePagingReadModelWarehouse,\n\tStructurePagingEventRepository\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../read/formation/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from '../../read/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../read/source/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../read/source/source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceReadModelWarehouse } from './structure-source.read-model-warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from '../../read/source/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../read/source/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../read/source/prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceReadModelWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/field/field-id.generator';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { FieldFactory } from '../../domain/structure/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../read/structure/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../read/structure/searching/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../read/structure/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../read/structure/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelWarehouse } from './filter/structure-filter.read-model-warehouse';\nimport { StructureFilterRepository } from '../../read/structure/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../read/structure/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../read/structure/searching/enabled/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandDispatcher } from './aggregation/structure-aggregation.command-dispatcher';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure-aggregation.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from '../../read/structure/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../domain/structure/structure.aggregate-factory';\nimport { StructureReadModelWarehouse } from './structure.read-model-warehouse';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from '../../read/structure/vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from '../../read/structure/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from '../../read/structure/searching/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from '../../read/structure/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../read/structure/searching/placeholder/structure.search-placeholder.archive';\nimport { StructureSetHeightCommandHandler } from '../../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandDispatcher,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterReadModelWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetAggregationEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureAggregationCommandDispatcher,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureReadModelWarehouse,\n\tStructureCommandDispatcher,\n\n\t...pagingProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandDispatcher } from '../../../../ui-api/structure/structure.command-dispatcher';\nimport { StructureReadModelWarehouse } from '../../../../ui-api/structure/structure.read-model-warehouse';\nimport { StructureSearchPlaceholderArchive } from '../../../../read/structure/searching/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../read/structure/searching/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\" \n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../ui-api/structure/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../../ui-api/structure/structure.command-dispatcher';\nimport { CompositionReadModelWarehouse } from '../../../../../../composition/ui-api/composition.read-model-warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/ui-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/ui-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure-aggregation.ui-events-repository';\nimport { CompositionReadModelWarehouse } from '../../../../composition/ui-api/composition.read-model-warehouse';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceReadModelWarehouse } from '../../../ui-api/source/structure-source.read-model-warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Count</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-aggregation-panel]': 'true'\n\t}\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceReadModelWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionReadModelWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './structure.aggregation-config.service';\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationPanelComponent } from './structure.aggregation-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureAggregationPanelComponent\n\t],\n\texports: [\n\t\tStructureAggregationPanelComponent\n\t],\n\tproviders: [\n\t\tStructureAggregationArchive,\n\t\tStructureAggregationConfigService,\n\t\tStructureAggregationPanelConfigConverter\n\t]\n})\nexport class StructureAggregationPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateCommandHandler, AggregateRepository, Command, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements AggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, Input, SimpleChanges, ElementRef, ViewChild, AfterViewInit, OnChanges } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../ui-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateCommandHandler, AggregateRepository, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregate } from '../schema.aggregate';\nimport { SchemaId } from '../schema.id';\nimport { SchemaAggregateRepository } from '../schema.aggregate-repository';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements AggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tconstructor(private readonly schemaAggregateRepository: SchemaAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<SchemaId, SchemaAggregate> {\n\t\treturn this.schemaAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: CreateSchemaCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaThemeSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../../domain/schema.id';\nimport { SchemaAggregate } from '../../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from '../in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../../domain/schema.aggregate';\nimport { SchemaId } from '../../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { SchemaTheme } from '../domain/schema-theme';\nimport { SchemaRowColoring } from '../domain/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaTheme } from '../domain/schema-theme';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../domain/schema-row-coloring';\n\n\nexport class SchemaReadModelRoot extends ReadModelRoot<SchemaReadModelRootId> {\n\n\tconstructor(schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaTheme: SchemaTheme,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaReadModelRootId);\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.schemaTheme;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.verticalGridEnabled,\n\t\t\tthis.horizontalGridEnabled,\n\t\t\tthis.getTheme(),\n\t\t\tthis.rowColoring\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from '../domain/schema.aggregate';\nimport { SchemaReadModelRoot } from './schema.read-model-root';\n\n\n@Injectable()\nexport class SchemaReadModelRootConverter {\n\n\tconvert(aggregate: SchemaAggregate): SchemaReadModelRoot {\n\n\t\treturn new SchemaReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\taggregate.getTheme(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRoot } from '../../../read/schema.read-model-root';\nimport { SchemaId } from '../../../domain/schema.id';\nimport { SchemaAggregate } from '../../../domain/schema.aggregate';\nimport { SchemaReadModelRootId } from '../../../read/schema.read-model-root-id';\nimport { InMemorySchemaStore } from '../in-memory.schema.store';\nimport { SchemaReadModelRootConverter } from '../../../read/schema.read-model-root-converter';\n\n\n@Injectable()\nexport class InMemorySchemaReadModelStore extends InMemoryReadModelStore<SchemaReadModelRootId,\n\tSchemaReadModelRoot,\n\tSchemaId,\n\tSchemaAggregate> {\n\n\tconstructor(private inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\tprivate schemaReadModelRootConverter: SchemaReadModelRootConverter) {\n\t\tsuper(inMemorySchemaStore);\n\t}\n\n\ttoReadModel(schemaAggregate: SchemaAggregate): SchemaReadModelRoot {\n\t\treturn this.schemaReadModelRootConverter.convert(schemaAggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootRepository } from '../../../read/schema.read-model-root-repository';\nimport { SchemaReadModelRoot } from '../../../read/schema.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../domain/theme/schema-theme-set.event';\nimport { InMemorySchemaReadModelStore } from './in-memory.schema.read-model-store';\nimport { SchemaReadModelRootId } from '../../../read/schema.read-model-root-id';\nimport { SchemaHorizontalGridSetEvent } from '../../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { RowColoringSetEvent } from '../../../domain/coloring/row-coloring-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCreatedEvent } from '../../../domain/create/schema-created.event';\n\n\n@Injectable()\nexport class InMemorySchemaReadModelRootRepository extends SchemaReadModelRootRepository {\n\n\tprivate readonly schemaIdToReadModel = new Map<string, SchemaReadModelRoot>();\n\n\tprivate readonly schemaIdToReadModel$ = new ReplaySubject<Map<string, SchemaReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemorySchemaReadModelStore: InMemorySchemaReadModelStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(readModelRootId: SchemaReadModelRootId): Observable<Readonly<SchemaReadModelRoot>> {\n\n\t\treturn this.schemaIdToReadModel$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((schemaIdToReadModel: Map<string, SchemaReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = readModelRootId.getId();\n\n\t\t\t\t\t\t   return schemaIdToReadModel.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((schemaIdToReadModel: Map<string, SchemaReadModelRoot>) => schemaIdToReadModel.get(readModelRootId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tSchemaCreatedEvent\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optSchemaReadModel = this.inMemorySchemaReadModelStore.getById(aggregateId);\n\n\t\toptSchemaReadModel.ifPresent((schemaReadModelRoot: SchemaReadModelRoot) => {\n\n\t\t\tconst key = schemaReadModelRoot.getId().toString();\n\n\t\t\tthis.schemaIdToReadModel.set(key, schemaReadModelRoot);\n\n\t\t\tthis.schemaIdToReadModel$.next(this.schemaIdToReadModel);\n\t\t});\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new RowColoringSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaHorizontalGridSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaVerticalGridSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/domain/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { InMemorySchemaReadModelRootRepository } from '../infrastructure/in-memory/read/in-memory.schema.read-model-root-repository';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaReadModelWarehouse } from './schema.read-model-warehouse';\nimport { SchemaReadModelRootRepository } from '../read/schema.read-model-root-repository';\nimport { InMemorySchemaReadModelStore } from '../infrastructure/in-memory/read/in-memory.schema.read-model-store';\nimport { SchemaReadModelRootConverter } from '../read/schema.read-model-root-converter';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t]\n\t\t)\n\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tInMemorySchemaReadModelStore,\n\t\t{\n\t\t\tprovide: SchemaReadModelRootRepository,\n\t\t\tuseClass: InMemorySchemaReadModelRootRepository\n\t\t},\n\t\tSchemaReadModelRootConverter,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaReadModelWarehouse\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, Input, SimpleChanges, ElementRef, ViewChild, AfterViewInit, OnChanges } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../ui-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../ui/structure-fabric.imports';\nimport { StructurePagingModule } from '../ui/paging/structure-paging.module';\nimport { StructureInfoPanelModule } from '../ui/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/ui-api/composition.module';\nimport { StructureComponent } from '../ui/structure.component';\nimport { StructureHeaderComponent } from '../ui/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../ui/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../ui/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../ui/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../ui/content/structure-content.component';\nimport { StructureRowComponent } from '../ui/content/row/structure-row.component';\nimport { StructureCellComponent } from '../ui/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../ui/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../ui/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../ui/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../ui/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure/structure-tokens';\nimport { StructureDefinition } from '../ui/structure-definition';\nimport { StructureSourceReadModelWarehouse } from './source/structure-source.read-model-warehouse';\nimport { StructureIdGenerator } from '../ui/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure/structure.providers';\nimport { StructureModuleConfig } from '../ui/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../ui/panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from '../ui/content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from '../ui/header/menu/structure.column-menu.module';\nimport { StructureAggregationPanelModule } from '../ui/panel/aggregation/structure.aggregation-panel.module';\nimport { StructureColumnManagerModule } from '../ui/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { pagingCommandHandlers } from './paging/paging.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../ui/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../ui/schema/structure.theme.converter';\nimport { SchemaModule } from '../../schema/ui-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../ui/content/cell/boolean/structure.cell-edit-boolean.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...pagingCommandHandlers,\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureAggregationPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceReadModelWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui-api/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"],"names":["Injectable","EventEmitter","Input","Output","tslib_1.__extends","InjectionToken","isPlatformBrowser","Component","ViewEncapsulation","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Subject","takeUntil","filter","map","ReadModelRootId","AggregateId","take","Command","CommandDispatcher","ReplaySubject","distinctUntilChanged","BehaviorSubject","ChangeDetectionStrategy","ReadModelObject","NgModule","CommonModule","FabricModule","Pipe","Theme","ReadModelRootRepository","Injector","FabricDialogService","Renderer2","EntityId","selector","TemplateRef","fromEvent","FormBuilder","tslib_1.__decorate","ContentChild","DomSanitizer","InMemoryStore","AggregateStoreRegister","InMemoryAggregateStore","AggregateRepository","ComponentFactoryResolver","Entity","ReadModelEntity","ReadModelEntityId","ReadModelRoot","InMemoryReadModelStore","DomainEvent","DomainEventBus","RandomStringGenerator","DomainEventHandler","DOMAIN_EVENT_HANDLERS","AggregateEvent","tslib_1.__values","AggregateRoot","AggregateFactory","DomainEventPublisher","ReactiveFormsModule","FabricDatePickerModule","HermesModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","Observable","AggregateArchive","zip","RendererFactory2","skip","switchMap","timer","InlineDialogPlacement","FabricInlineDialogService","combineLatest","NgZone","ResizeDetector","Optional","DomainObject","commandProviders","readProviders","debounceTime","Placement","declarations","exportDeclarations","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","imports","providers","entryComponents"],"mappings":"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"}