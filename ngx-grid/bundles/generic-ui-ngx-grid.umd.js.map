{"version":3,"file":"generic-ui-ngx-grid.umd.js","sources":["../../../../../node_modules/tslib/tslib.es6.js","../../build-cli/projects/ngx-grid/src/l10n/core/domain/lang/en.ts","../../build-cli/projects/ngx-grid/src/l10n/core/api/default-translation.ts","../../build-cli/projects/ngx-grid/src/gui/grid/core/api/gui.grid.public-api.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/data-type.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/gui.grid.column-type.converter.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.type.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/summaries/gui.grid.column-summaries.converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/cell-view.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/gui.grid.column-view.converter.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/sorting/gui.grid.column-sorting.converter.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/cell-editing/gui.grid.column-cell-editing.converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column-align.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/align/gui.grid.column-align.converter.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/gui.grid.column.converter.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/theme/schema-theme.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/theme/gui.grid.theme.converter.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/row-coloring/row-coloring.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/theme/coloring/gui.grid.row-coloring.converter.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/menu/gui.grid.column-menu.converter.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/mode/paging-display-mode.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/paging/gui.grid.paging.converter.ts","../../build-cli/projects/ngx-grid/src/common/cdk/generic-builder.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/row-selected/row-selection.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/row-selection/gui.grid.row-selection.converter.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/gui.grid-column.component.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/column/cell-editing/gui.grid.cell-edit.converter.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/check.input.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/gui.grid-gateway.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure-parent-component.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/register/gui.grid-id.generator.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/register/gui.grid.register.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/row-selected/selected-row.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/api/gui.grid.api-provider.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/formation.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/source.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/formation.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/api/search.command-invoker.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/theme/gui.grid.theme.command-invoker.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/schema.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/core/api/structure.command-invoker.ts","../../build-cli/projects/ngx-grid/src/common/cdk/dom/core/modifier.ts","../../build-cli/projects/ngx-grid/src/common/cdk/dom/class/class-modifier.ts","../../build-cli/projects/ngx-grid/src/common/cdk/dom/style/style-name.ts","../../build-cli/projects/ngx-grid/src/common/cdk/dom/style/style-modifier.ts","../../build-cli/projects/ngx-grid/src/common/cdk/dom/attribute/attribute-modifier.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/paging.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/api/summaries.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/api/sorting.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/paging-definition.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure-definition.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/gui.grid-structure-definition.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.command-invoker.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/filter.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/field.id.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/filter.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api-integration/filter.integration.ts","../../build-cli/projects/ngx-grid/src/gui/grid/feature/grid/gui.grid.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure-fabric.imports.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/gui-component.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/smart-component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/paging.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/source.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/mode/paging-display-mode.archive.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/paging-position.ts","../../build-cli/projects/ngx-grid/src/common/cdk/reactive/stream-closer.ts","../../build-cli/projects/ngx-grid/src/structure/common/css-class/css-class.ts","../../build-cli/projects/ngx-grid/src/structure/common/css-class/css-class.modifier.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/read/structure.read-model-root-id.ts","../../build-cli/projects/ngx-grid/src/structure/core/api/structure.id.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/paging.component.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/pure-component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/select/paging-select.component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/paging.event-repository.ts","../../build-cli/projects/ngx-grid/src/common/cdk/logger/logger.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.domain-event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/page/page-changed.event.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/page/page-changed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/paging.manager.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/paging.manager-factory.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.command.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/set/set-paging.command.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/next-page/next-page.command.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/prev-page/prev-page.command.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/paging.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure-aggregate.repository.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/set/paging-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/set/set-paging.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/next-page/next-page.event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/next-page/next-page.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/prev-page/prev-page.event.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/core/api/structre.key.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/paging.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/paging.model.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain-read/paging.converter.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/read/structure.read-model-repository.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain-read/paging.repository.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain-read/paging.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain/paging.domain.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/domain-read/paging.domain.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/paging/core/api/paging.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/basic/navigator/paging-navigator.component.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/basic/stats/paging-stats.component.ts","../../build-cli/projects/ngx-grid/src/l10n/core/api/translation.api-module.ts","../../build-cli/projects/ngx-grid/src/l10n/core/api/translation.facade.ts","../../build-cli/projects/ngx-grid/src/l10n/feature/translation.pipe.ts","../../build-cli/projects/ngx-grid/src/l10n/core/domain/dictionary.ts","../../build-cli/projects/ngx-grid/src/l10n/core/domain/translation.domain-facade.ts","../../build-cli/projects/ngx-grid/src/l10n/feature/translation.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/paging.feature-module.ts","../../build-cli/projects/ngx-grid/src/common/cdk/number-formatter/number-formatter.pipe.ts","../../build-cli/projects/ngx-grid/src/common/cdk/number-formatter/number-formatter.module.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/static-component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.read-model-root-id.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.id.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/schema/structure.theme.converter.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/schema.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.id.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/schema.read-model-root-id.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/panel/info/structure.info-panel.config.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/panel/info/structure.info-panel.archive.ts","../../build-cli/projects/ngx-grid/src/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","../../build-cli/projects/ngx-grid/src/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/info/structure.info-panel.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/structure.column-manager.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/icon-component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/column-manager/structure.column-manager.module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/panel/info/structure.info-panel.config-converter.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/row-coloring/schema-row-coloring.ts","../../build-cli/projects/ngx-grid/src/schema/feature/manager/structure.schema-manger.component.ts","../../build-cli/projects/ngx-grid/src/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","../../build-cli/projects/ngx-grid/src/schema/feature/manager/schema-manager.module.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/counter/filter/active-filter-menu.component.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/counter/filter/active-filter.service.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/counter/filter/active-filter-menu-trigger.directive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/icon/filter-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/api/field.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/filter-menu.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/config/filter-container-token.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/filter-menu-trigger.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/column-selector/column-selector.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/filter-selector/filter-type-selector.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/value/filter-value.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/field-selector/field-selector.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/toggle/toggle-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/toggle/filter-toggled.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/add/add-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/add/add-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove/remove-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/config/set-config-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/config/config-filter-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/config/set-config-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.settings.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/base-filter-type.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/filter-type.id.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/filter-type.id-generator.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/type/filter-type.model.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/filter-type.manager.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/filter.id.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.id-generator.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/active/active-filter.model.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.manager.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.manager-factory.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain-read/quick-filter/quick-filter-enabled.archive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain-read/quick-filter/config-quick-filter-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain-read/config/filter-enabled.archive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain-read/config/config-filter-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/type/filter-type-collection.model.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain-read/type/filter-type.archive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/init/filter-types-inited.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain-read/type/filter-type.config-filter-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/active-filters-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain-read/active/active-filter.archive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain-read/active/active-filters-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/unique/unique-value-collection.model.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain-read/unique/unique-value-collection.archive.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/unique/unique-value.model.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain-read/unique/unique-filter-calculated.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/init/fields-inited.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain-read/filter.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/filter.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/api/filter.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/active-filters/active-filter-list.component.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/api/search.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/active-filters/search/active-search.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/active-filters/active-filter-list.module.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/active-filters/filter-menu-active-filters.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/menu/filter-menu.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/counter/source-counter.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/info/structure.info-panel.module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure-id.generator.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/schema/schema-css-class.manager.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/domain/edit/cell-editor.manager.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/edit/structure.cell-edit.archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/edit/structure.cell-edit.store.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/edit/structure.edit-mode.archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure-component-token.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/edit/edited-item.model.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/edit/source-event.service.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/selected-row-changed.event.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/formation.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/edit/structure.cell-edit.state.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/set-enabled/row-select-enabled.repository.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/api/search.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/schema.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/panel/info/structure.info-panel-config.service.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/api/field.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/init/init-fields.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/field/column-field.id.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-columns/column.params.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/column/structure-column.input-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/field/column-field.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/field/colum-field.factory.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/type/row-selection-type.archive.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/styling/schema.row-class.archive.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/styling/schema.row-style.archive.ts","../../build-cli/projects/ngx-grid/src/structure/core/api/structure.initial-values-ready.archive.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/column/auto/column-auto.configurator.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/structure.gateway.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/structure.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/structure-header-top-enabled.archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/dynamically-created-component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/row-detail/structure.row-detail.service.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/toggle/toggle-sort.command.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/toggle/sort-toggled.event.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/set-config/set-sorting.command.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/set-config/sorting-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/order/set-sort-order.command.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/order/sort-order-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/sorting.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/sorting.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/sorting.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/api/sorting.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/feature/sorting.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/config/set-config-searching.command.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/config/config-searching-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/config/set-config-searching.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/phrase/set-phrase/set-search-phrase.command.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/phrase/set-phrase/search-phrase-set.domain-event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/set-origin/origin-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/structure.summaries-changed.event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/source.domain-event.publisher.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/phrase/set-phrase/structure.set-search-phrase.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/search.manager.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/search.manager-factory.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/highlight/search-highlight.archive.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/placeholder/search-placeholder.archive.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/search.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/phrase/search-phrase.archive.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/phrase/search-phrase-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/enabled/searching-enabled.archive.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/enabled/config-searching-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/search.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain-read/search.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain-read/search.domain-event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/domain/search.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/search/core/api/search.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/search/feature/icon/search-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/search/feature/search.component.ts","../../build-cli/projects/ngx-grid/src/structure/search/feature/search.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain-read/field.archive.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/api/field.model.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain-read/init/field.converter.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field-collection.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/field.entity.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/base-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/type/unknown-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/type/number-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/type/string-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/type/boolean-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/type/date-data-field.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/matcher/field.matchers.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/data/data-field.factory.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/field-entity-id.generator.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field/field.entity-factory.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field-collection.factory.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/init/init-fields.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain-read/init/fields-inited.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain-read/field.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/field.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/api/field.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/field/feature/field.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain-read/source-is-loading.model.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/source.converter.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/loading/set-source-loading.event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/loading/source-set-loading.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/loading/source-set-loading.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/set-origin/set-origin.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/source.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/origin-item-entity.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/origin-id.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/core/source.manager.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/core/row-select-toggle-type.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/core/formation.manager.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/core/formation.manager-factory.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/core/source.manager-factory.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/structure.source-origin.archive.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/structure.origin-changed.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/prepared/structure.prepared-items.archive.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/prepared/structure.prepared-items.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/source.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain-read/source.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/source.domain.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/api/source.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/source.feature-module.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.domain-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/theme/schema-theme-set.event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/row-coloring/row-coloring-set.event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/create/schema-created.event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/create/schema-created.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.aggregate.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/create/schema.aggregate-factory.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.aggregate-repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","../../build-cli/projects/ngx-grid/src/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","../../build-cli/projects/ngx-grid/src/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/create/create-schema.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/create/create-schema.command-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/theme/set-schema-theme.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/theme/set-schema-theme.command-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/row-coloring/set-row-coloring.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/css-classes/schema-css-class.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.key.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/theme/schema.theme.repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.domain-module.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.dispatcher.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain-read/schema.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/schema/core/domain/schema.domain-event-repository.ts","../../build-cli/projects/ngx-grid/src/schema/core/api/schema.api-module.ts","../../build-cli/projects/ngx-grid/src/schema/feature/schema.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/api/summaries.event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.manager.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain-read/enabled/summaries-enabled-archive.service.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain-read/enabled/structure.summaries-enabled-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.providers.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/summaries.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.manager.factory.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/api/summaries.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/config/structure.summaries-panel.config.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain-read/config/structure.summaries-config.archive.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain-read/summaries.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain-read/config/structure.summaries-panel.config-converter.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain/summaries.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/domain-read/summaries.domain-event-repository.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/core/api/summaries.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/feature/structure.summaries-translations.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/feature/panel/structure.summaries-panel.component.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/feature/summaries.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/row-selected/row-selected.read-model.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/row-selected/row-selected.archive.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/mode/row-selection-mode.archive.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/set-enabled/set-enabled-selection.command.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/set-enabled/set-enabled-selection.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/toggle/toggle-selected-row.command.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/toggle/toggle-selected-row.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/mode/set-selection-mode.command.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/select-all/select-all-rows.command.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/unselect-all/unselect-all-rows.command.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/formation.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/row-selected/selected-row-changed.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/mode/set-selection-mode.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/select-all/select-all-rows.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/unselect-all/unselect-all-rows.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/mode/selection-mode-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/mode/selection-mode-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/formation.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain-read/formation.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/formation.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/api/formation.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/formation/feature/formation.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/structure.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/sort-order.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/cell-template-with-context.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/config/structure.column-config.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/structure.column-config.service.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/column/structure-header-columns.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/filters/structure-header-filters.component.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/api/vertical-formation.warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/structure-header.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/changed-value.emitter.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/filters/structure.header-filter.component.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/create-structure/structure-created.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain-read/vertical-formation.model.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/vertical-formation.converter.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/read/structure.read-model-root.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/core/item/item.entity.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/read/structure.read-model-root-converter.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain-read/vertical-formation.repository.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/structure-content.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/row/structure-row.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/state/edit.event-type.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/column/column.id.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/cell/structure.cell.component.ts","../../build-cli/projects/ngx-grid/src/common/cdk/resize-detector/resize.detector.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/structure-container.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/structure-tokens.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/blueprint/structure.blueprint.component.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/set-enabled/selection-enabled-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/add/filter-added.event.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","../../build-cli/projects/ngx-grid/src/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/vertical-range.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/vertical-formation.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/vertical-formation.factory.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/field/core/domain/init/fields-inited.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/create-structure/structure-created.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/common/cdk/decorators.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/selected-row-changed.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/set-enabled/selection-enabled-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/formation/core/domain/mode/selection-mode-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.aggregate.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/sorter.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/api/sorter.id.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/core/domain/sorter.manager.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unique-value.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unique-value-id.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unique-value.id-generator.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unique-value-collection.ts","../../build-cli/projects/ngx-grid/src/structure/filter/core/domain/unique/unique-filter-manager.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.aggregate-factory.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/create-structure/structure-created.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/create-structure/create-structure.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/api/vertical-formation.command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/structure.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/structure.providers.ts","../../build-cli/projects/ngx-grid/src/common/cdk/logger/console.logger.ts","../../build-cli/projects/ngx-grid/src/common/cdk/logger/logger.module.ts","../../build-cli/projects/ngx-grid/src/structure/source/core/domain/core/item/item.entity-factory.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/top/structure.top-panel.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/top/structure.top-panel.module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/trigger/structure.column-config-trigger.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/unique/unique-value-list.component.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/unique/unique-value-list.module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/menu/structure.column-menu.module.ts","../../build-cli/projects/ngx-grid/src/structure/core/domain/create-structure/create-structure-command-handler.service.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/banner-panels/structure-banner-panel.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/empty/empty-source.component.ts","../../build-cli/projects/ngx-grid/src/structure/source/feature/empty/empty-source.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/column/select-all/select-all.component.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/vertical-formation.dispatcher.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain-read/vertical-formation.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/domain/vertical-formation.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/core/api/vertical-formation.api-module.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/feature/vertical-formation.feature-module.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.key.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/composition-container-width.calculator.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.domain-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-width/composition-width-set.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column-width/column-width-type.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column-width/column-width.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/composition-width.calculator.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column-width/column-width-collection.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/composition-change-sort-status.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/active/active-column.container.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/view.entity.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/abstract-column.entity.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column.entity.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/active/active-column.entity.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/active/active-column.entity-converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-columns/composition.columns-set.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/create/composition-created.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/create/composition-created.aggregate-event.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/group/group.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/group/group.id.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/group/empty-group.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.aggregate.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/presentation/column.presentation.converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/column-entity.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/group/composition.group.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.aggregate-factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.aggregate-repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/create/create-composition.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/create/create-composition.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.events.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/group/set-groups/composition.groups-set.event.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.event-converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-columns/set-columns.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-columns/set-columns.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-width/set-composition-width.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/composition-change-sort-status.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/left/composition.move-left-column.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/right/composition.move-right-column.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/group/set-groups/set-groups.command.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.dispatcher.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/change-sort.params.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/view-templates.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/template/template.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/view-template.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/view-template.repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/edit-templates.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/edit-template.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/edit-template.repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/cell-context.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/cell-value.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/cell-template-with-accessor.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/column-definition.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/column/column-definition-id.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/definition/column-definition.factory.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/composition.read-mode-root.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/composition.read-model-root-converter.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/composition.read-model-root-repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/group/set-groups/set-groups.command-handler.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/highlight/column-highlight.manager.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/highlight/column-highlight.archive.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.domain-module.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/group/group.collection.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/group/composition-group.archive.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/compositon.domain-command-invoker.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/composition.domain-event-repository.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/composition.domain-warehouse.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain/column/auto/domain.column-auto.configurator.ts","../../build-cli/projects/ngx-grid/src/composition/core/api/composition.api-module.ts","../../build-cli/projects/ngx-grid/src/common/cdk/sanitize/safe.pipe.ts","../../build-cli/projects/ngx-grid/src/common/cdk/sanitize/sanitize.module.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/edit-communication.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/template/input-edit-template.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/template/string-edit-template.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/template/number-edit-template.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/edit/template/date-edit-template.component.ts","../../build-cli/projects/ngx-grid/src/composition/feature/column/column-query.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/function/function-view.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/bar/bar-view.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/percentage/percentage-view.component.ts","../../build-cli/projects/ngx-grid/src/composition/core/domain-read/view/text/text-view.component.ts","../../build-cli/projects/ngx-grid/src/composition/feature/composition.feature-module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/header/group/structure-header-groups.component.ts","../../build-cli/projects/ngx-grid/src/common/cdk/component/gate.ts","../../build-cli/projects/ngx-grid/src/structure/search/feature/gate/searching.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/searching/structure-searching.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/column/header/structure-column-header.gate.ts","../../build-cli/projects/ngx-grid/src/structure/paging/feature/gate/paging.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/paging/structure-paging.gate.ts","../../build-cli/projects/ngx-grid/src/structure/formation/feature/gate/selection.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/source/structure-selection.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/l10n/structure-l10n.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/panel/structure-panel.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/row/detail/structure-row-detail.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/column/menu/structure-column-menu.gate.ts","../../build-cli/projects/ngx-grid/src/structure/summaries/feature/gate/structure-summaries.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/panel/info/structure-info-panel.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/row/class/structure-row-class.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/row/coloring/structure-row-coloring.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/row/style/structure-row-style.gate.ts","../../build-cli/projects/ngx-grid/src/schema/feature/gate/grid/theme-grid.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/source/source-loading.gate.ts","../../build-cli/projects/ngx-grid/src/structure/vertical-formation/feature/gate/vertical-formation.gate.ts","../../build-cli/projects/ngx-grid/src/structure/sorting/feature/gate/structure-sorting.gate.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/gate/structure-filter.gate.ts","../../build-cli/projects/ngx-grid/src/structure/filter/feature/gate/structure-quick-filters.gate.ts","../../build-cli/projects/ngx-grid/src/structure/grid/feature/gate/structure.gates.ts","../../build-cli/projects/ngx-grid/src/structure/common/css-class/css-class.module.ts","../../build-cli/projects/ngx-grid/src/structure/common/structure-shared.module.ts","../../build-cli/projects/ngx-grid/src/common/cdk/resize-detector/resize-detector.module.ts","../../build-cli/projects/ngx-grid/src/structure/grid/core/api/structure.module.ts","../../build-cli/projects/ngx-grid/src/gui/grid/core/api/gui.grid.module.ts","../../build-cli/projects/ngx-grid/src/generic-ui-ngx-grid.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabHighlightColumn: 'Highlight',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateFunction = (cellValue?: any, item?: any, index?: number) => string;\n\nexport interface GuiMultiColumn {\n\n\theader?: string | ViewTemplateFunction;\n\n\tcolumns?: Array<GuiColumn>;\n\n}\n\nexport interface GuiColumn {\n\n\tname?: string;\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateFunction;\n\n\theader?: string | ViewTemplateFunction;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: boolean | GuiColumnSorting;\n\n\tcellEditing?: boolean | GuiColumnCellEditing;\n\n\tformatter?: (item: any, index: number) => any;\n\n\tmatcher?: (item: any) => any;\n\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiRowStyle {\n\n\tstyle?: string;\n\n\tstyleFunction?: (source: any, index: number) => string;\n\n}\n\nexport interface GuiRowClass {\n\n\tclass?: string;\n\n\tclassFunction?: (source: any, index: number) => string;\n\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<string>;\n\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any, index: number) => string;\n\n}\n\nexport interface GuiTitlePanel {\n\n\tenabled?: boolean;\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiFooterPanel {\n\n\tenabled?: boolean\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiInfoPanel {\n\n\tenabled?: boolean;\n\n\tinfoDialog?: boolean;\n\n\tcolumnsManager?: boolean;\n\n\tschemaManager?: boolean;\n\n\tsourceSize?: boolean\n\n}\n\nexport enum GuiRowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum GuiRowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport interface GuiRowSelection {\n\n\tenabled?: boolean;\n\n\ttype?: string | GuiRowSelectionType;\n\n\tmode?: string | GuiRowSelectionMode;\n\n}\n\nexport interface GuiSelectedRow {\n\n\tsource?: any;\n\n\tindex: number;\n\n\titemId: any;\n\n}\n\nexport interface GuiLocalization {\n\n\ttranslation?: GuiTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport interface GuiCellEdit {\n\n\tenabled?: boolean;\n\n\trowEdit?: (value: any, item: any, index: number) => boolean;\n\n\tcellEdit?: (value: any, item: any, index: number) => boolean\n\n}\n\nexport type GuiTranslation = TranslationChange;\n\nexport const GuiDefaultTranslation = defaultTranslation;\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../core/api/gui.grid.public-api';\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nexport class GuiGridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../structure/summaries/core/domain/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../gui.grid.index';\n\n\nexport class GuiGridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tconst columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE,\n\tNG_TEMPLATE\n}\n","import { GuiCellView, ViewTemplateFunction } from '../../../core/api/gui.grid.public-api';\nimport { CellView } from '../../../../../composition/core/domain/column/cell-view';\n\nexport class GuiGridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateFunction): CellView | ViewTemplateFunction {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../composition/core/api/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../gui.grid.index';\n\nexport class GuiGridColumnSortingConverter {\n\n\tconvert(sortingConfig: boolean | GuiColumnSorting): ColumnSortingConfig {\n\n\t\tif (typeof sortingConfig === 'boolean') {\n\t\t\treturn {\n\t\t\t\tenabled: sortingConfig\n\t\t\t};\n\t\t} else {\n\t\t\treturn sortingConfig as any;\n\t\t}\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../gui.grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../composition/core/api/column/column-cell-editing.config';\n\nexport class GuiGridColumnCellEditingConverter {\n\n\tconvert(config: boolean | GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\tif (typeof config === 'boolean') {\n\t\t\treturn {\n\t\t\t\tenabled: config\n\t\t\t};\n\t\t}\n\n\t\treturn config as ColumnCellEditingConfig;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../core/api/gui.grid.public-api';\nimport { ColumnAlign } from '../../../../../../composition/core/domain/column/column-align';\n\nexport class GuiGridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn, GuiMultiColumn } from '../../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnTypeConverter } from './gui.grid.column-type.converter';\nimport { GuiGridColumnSummariesConverter } from './summaries/gui.grid.column-summaries.converter';\nimport { GuiGridColumnViewConverter } from './gui.grid.column-view.converter';\nimport { GuiGridColumnSortingConverter } from './sorting/gui.grid.column-sorting.converter';\nimport { GuiGridColumnCellEditingConverter } from './cell-editing/gui.grid.column-cell-editing.converter';\nimport { GuiGridColumnAlignConverter } from './align/gui.grid.column-align.converter';\nimport { CellView } from '../../../../../composition/core/domain/column/cell-view';\n\n\nexport class GuiGridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GuiGridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GuiGridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GuiGridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GuiGridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GuiGridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GuiGridColumnAlignConverter();\n\n\tconvert(configs: Array<GuiColumn | GuiMultiColumn>): Array<ColumnConfig | MultiColumnConfig> {\n\n\t\treturn configs.map((config) => {\n\n\t\t\tif ((config as GuiMultiColumn).columns !== undefined) {\n\n\t\t\t\tconst columns = ((config as GuiMultiColumn).columns).map((c) => this.convertColumn(c));\n\n\t\t\t\treturn {\n\t\t\t\t\theader: config.header,\n\t\t\t\t\tcolumns: columns\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\treturn this.convertColumn(config);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tconst columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.name !== undefined && guiColumn.name !== null) {\n\t\t\tcolumnConfig.name = guiColumn.name;\n\t\t} else if (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tif (typeof guiColumn.field === 'string') {\n\t\t\t\tcolumnConfig.name = guiColumn.field;\n\t\t\t}\n\t\t}\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.formatter !== undefined && guiColumn.formatter !== null) {\n\t\t\tcolumnConfig.formatter = guiColumn.formatter;\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\tif ((guiColumn as any).templateRef !== undefined && (guiColumn as any).templateRef !== null) {\n\t\t\tcolumnConfig.templateRef = (guiColumn as any).templateRef;\n\t\t\tcolumnConfig.view = CellView.NG_TEMPLATE;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\n\n\nexport class GuiGridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../../core/api/gui.grid.public-api';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\n\n\nexport class GuiGridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../core/api/gui.grid.public-api';\n\nimport { ColumnMenuConfig } from '../../../../../../structure/grid/core/api/column-menu-config';\n\n@Injectable()\nexport class GuiGridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../structure/paging/feature/mode/paging-display-mode';\nimport { GuiPaging, GuiPagingDisplay } from '../../../core/api/gui.grid.public-api';\nimport { PagingConfig } from '../../../../../structure/paging/core/api/config/paging-config';\n\n\nexport class GuiGridPagingConverter {\n\n\tconvert(guiPaging: GuiPaging): PagingConfig {\n\n\t\tconst pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/member-ordering\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { GuiRowSelection, GuiRowSelectionMode, GuiRowSelectionType } from '../../../core/api/gui.grid.public-api';\nimport { RowSelection, RowSelectionMode, RowSelectionType } from '../../../../../structure/formation/core/api/row-selected/row-selection';\n\nexport class GuiGridRowSelectionConverter {\n\n\tconvert(selection: boolean | GuiRowSelection): RowSelection {\n\n\t\tconst builder = new RowSelection.Builder();\n\n\t\tif (typeof selection === 'boolean') {\n\t\t\treturn builder.withEnabled(selection).build();\n\t\t} else {\n\n\t\t\tif (selection.enabled !== undefined) {\n\t\t\t\tbuilder.withEnabled(selection.enabled);\n\t\t\t}\n\n\t\t\tif (selection.mode !== undefined) {\n\t\t\t\tconst mode = this.convertMode(selection.mode);\n\n\t\t\t\tbuilder.withMode(mode);\n\t\t\t}\n\n\t\t\tif (selection.type !== undefined) {\n\t\t\t\tconst type = this.convertType(selection.type);\n\n\t\t\t\tbuilder.withType(type);\n\t\t\t}\n\n\t\t\treturn builder.build();\n\t\t}\n\n\t}\n\n\tprivate convertMode(mode: string | GuiRowSelectionMode): RowSelectionMode {\n\n\t\tif (typeof mode === 'string') {\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'single':\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t\tcase 'multiple':\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (mode) {\n\n\t\t\t\tcase GuiRowSelectionMode.SINGLE:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\n\t\t\t\tcase GuiRowSelectionMode.MULTIPLE:\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate convertType(type: string | GuiRowSelectionType): RowSelectionType {\n\n\t\tif (typeof type === 'string') {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'row':\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase GuiRowSelectionType.ROW:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\n\t\t\t\tcase GuiRowSelectionType.CHECKBOX:\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\nimport {\n\tFieldAccessor,\n\tGuiCellView,\n\tGuiColumn,\n\tGuiColumnAlign,\n\tGuiColumnCellEditing,\n\tGuiColumnSorting,\n\tGuiColumnSummaries,\n\tGuiDataType,\n\tViewTemplateFunction\n} from '../../../core/api/gui.grid.public-api';\n\n@Component({\n\tselector: 'gui-grid-column',\n\ttemplate: ''\n})\nexport class GuiGridColumnComponent implements GuiColumn {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n\t@Input()\n\tname?: string;\n\n\t@Input()\n\tfield?: string | FieldAccessor;\n\n\t@Input()\n\ttype?: string | GuiDataType;\n\n\t@Input()\n\tview?: string | GuiCellView | ViewTemplateFunction;\n\n\t@Input()\n\theader?: string | ViewTemplateFunction;\n\n\t@Input()\n\twidth?: string | number;\n\n\t@Input()\n\tenabled?: boolean;\n\n\t@Input()\n\talign?: string | GuiColumnAlign;\n\n\t@Input()\n\tsummaries?: GuiColumnSummaries;\n\n\t@Input()\n\tsorting?: boolean | GuiColumnSorting;\n\n\t@Input()\n\tcellEditing?: boolean | GuiColumnCellEditing;\n\n\t@Input()\n\tformatter?: (item: any, index: number) => any;\n\n\t@Input()\n\tmatcher?: (item: any) => any;\n\n}\n","import { CellEditConfig } from '../../../../../../structure/grid/core/api/edit/cell-edit.config';\nimport { GuiCellEdit } from '../../../../core/api/gui.grid.public-api';\n\n\nexport class GuiGridCellEditConverter {\n\n\tconvert(config: boolean | GuiCellEdit): CellEditConfig {\n\n\t\tif (typeof config === 'boolean') {\n\t\t\treturn {\n\t\t\t\tenabled: config\n\t\t\t};\n\t\t}\n\n\t\treturn config;\n\t}\n}\n","import { Changes } from './ng-changes';\n\ninterface InputChanges {\n\n\tisChanged(): boolean;\n\n\tifChanged(callback: () => void): void;\n\n}\n\nexport function checkInput<T>(prop: Changes<T>): InputChanges {\n\n\treturn {\n\t\tisChanged: () => {\n\t\t\treturn hasChanged(prop);\n\t\t},\n\t\tifChanged: (callback: () => void) => {\n\t\t\tif (hasChanged(prop)) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t} as InputChanges;\n\n}\n\nexport function ifChanged<T>(prop: Changes<T>, callback: (value: any) => void): void {\n\tif (hasChanged(prop)) {\n\t\tcallback(prop.currentValue);\n\t}\n}\n\nexport function hasChanged<T>(prop: Changes<T>) {\n\treturn prop !== undefined && prop.currentValue !== undefined;\n}\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, Input, OnChanges, Output, QueryList } from '@angular/core';\n\nimport {\n\tGuiCellEdit,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiFooterPanel,\n\tGuiInfoPanel,\n\tGuiLocalization,\n\tGuiMultiColumn,\n\tGuiPaging,\n\tGuiQuickFilters,\n\tGuiRowClass,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiRowSelection,\n\tGuiRowStyle,\n\tGuiSearching,\n\tGuiSelectedRow,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme,\n\tGuiTitlePanel\n} from '../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnConverter } from './column/gui.grid.column.converter';\nimport { GuiGridThemeConverter } from './theme/gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './theme/coloring/gui.grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../structure/grid/core/api/column-menu-config';\nimport { GuiGridColumnMenuConverter } from './column/menu/gui.grid.column-menu.converter';\nimport { GuiGridPagingConverter } from './paging/gui.grid.paging.converter';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { RowColoring } from '../../../../schema/core/api/row-coloring/row-coloring';\nimport { GuiGridRowSelectionConverter } from './row-selection/gui.grid.row-selection.converter';\nimport { RowSelection } from '../../../../structure/formation/core/api/row-selected/row-selection';\nimport { SelectedRow } from '../../../../structure/formation/core/api/row-selected/selected-row';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { GuiGridColumnComponent } from './column/gui.grid-column.component';\nimport { GuiGridCellEditConverter } from './column/cell-editing/gui.grid.cell-edit.converter';\nimport { CellEditConfig } from '../../../../structure/grid/core/api/edit/cell-edit.config';\nimport { ifChanged } from '../../../../common/cdk/component/check.input';\n\n@Directive()\nexport abstract class GuiGridGateway implements OnChanges, AfterContentInit {\n\n\t@ContentChildren(GuiGridColumnComponent)\n\tguiGridColumnComponent: QueryList<GuiGridColumnComponent>;\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn | GuiMultiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPaging;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelection: boolean | GuiRowSelection;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean | GuiCellEdit;\n\n\t@Input()\n\tinfoPanel: boolean | GuiInfoPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<GuiSelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig | MultiColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\trowSelectionConfig: RowSelection;\n\n\tcellEditingConfig: CellEditConfig;\n\n\tprotected readonly gridColumnConverter: GuiGridColumnConverter = new GuiGridColumnConverter();\n\n\tprotected readonly gridThemeConverter: GuiGridThemeConverter = new GuiGridThemeConverter();\n\n\tprotected readonly gridRowColoringConverter: GuiGridRowColoringConverter = new GuiGridRowColoringConverter();\n\n\tprotected readonly gridColumnMenuConverter: GuiGridColumnMenuConverter = new GuiGridColumnMenuConverter();\n\n\tprotected readonly gridPagingConverter: GuiGridPagingConverter = new GuiGridPagingConverter();\n\n\tprotected readonly gridRowSelectionConverter: GuiGridRowSelectionConverter = new GuiGridRowSelectionConverter();\n\n\tprotected readonly guiGridCellEditConverter: GuiGridCellEditConverter = new GuiGridCellEditConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: NgChanges<GuiGridGateway>): void {\n\n\t\tifChanged(changes.columns, () => {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t});\n\n\t\tifChanged(changes.theme, () => {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t});\n\n\t\tifChanged(changes.rowColoring, () => {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t});\n\n\t\tifChanged(changes.columnMenu, () => {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t});\n\n\t\tifChanged(changes.rowSelection, () => {\n\t\t\tthis.rowSelectionConfig = this.gridRowSelectionConverter.convert(this.rowSelection);\n\t\t});\n\n\t\tifChanged(changes.cellEditing, () => {\n\t\t\tthis.cellEditingConfig = this.guiGridCellEditConverter.convert(this.cellEditing);\n\t\t});\n\n\t\t// TODO\n\t\tifChanged(changes.paging, () => {\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t});\n\t}\n\n\tngAfterContentInit() {\n\t\tif (this.guiGridColumnComponent && this.guiGridColumnComponent.toArray().length > 0) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.guiGridColumnComponent.toArray());\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonRowsSelect(rows: Array<SelectedRow>): void {\n\n\t\tconst guiRows: Array<GuiSelectedRow> = rows.map((row) => {\n\t\t\treturn {\n\t\t\t\tindex: row.getIndex(),\n\t\t\t\tsource: row.getSource(),\n\t\t\t\titemId: row.getItemId()\n\t\t\t};\n\t\t});\n\n\t\tthis.selectedRows.emit(guiRows);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GuiGridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGuiGridIdGenerator.index++;\n\n\t\treturn GuiGridIdGenerator.PREFIX + GuiGridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiGridComponent } from '../gui.grid.component';\n\n@Injectable()\nexport class GuiGridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GuiGridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { OriginId } from '../../../../source/core/domain/origin/origin-id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly source: OriginItemEntity;\n\n\tconstructor(source: OriginItemEntity,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.source = source;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetSource(): OriginItemEntity {\n\t\treturn this.source;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { GuiRowColoring, GuiSelectedRow, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { FormationCommandInvoker } from '../../../../../structure/formation/core/api/formation.command-invoker';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { SourceCommandInvoker } from '../../../../../structure/source/core/api/source.command-invoker';\nimport { SelectedRow } from '../../../../../structure/formation/core/api/row-selected/selected-row';\nimport { FormationWarehouse } from '../../../../../structure/formation/core/api/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../../structure/search/core/api/search.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { GuiGridThemeCommandInvoker } from '../theme/gui.grid.theme.command-invoker';\nimport { StructureCommandInvoker } from '../../../../../structure/core/api/structure.command-invoker';\nimport { PagingConfig } from '../../../../../structure/paging/core/api/config/paging-config';\nimport { PagingCommandInvoker } from '../../../../../structure/paging/core/api/paging.command-invoker';\nimport { SearchConfig } from '../../../../../structure/search/core/api/search-config';\nimport { SummariesCommandInvoker } from '../../../../../structure/summaries/core/api/summaries.command-invoker';\nimport { SortingCommandInvoker } from '../../../../../structure/sorting/core/api/sorting.command-invoker';\nimport { SortingConfig } from '../../../../../structure/sorting/core/api/sorting-config';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FilterIntegration } from '../../../../../structure/filter/core/api-integration/filter.integration';\nimport { GuiFilter, GuiFilterCollection } from './filter/gui.filter';\nimport { FilterForColumn } from '../../../../../structure/filter/core/api-integration/filter-integration.api';\n\n\nexport interface GuiGridApi {\n\n\tsetSource(source: Array<any>): void\n\n\tshowLoading(): void;\n\n\thideLoading(): void;\n\n\tgetSelectedRows(): Array<GuiSelectedRow>;\n\n\tselectAll(): void;\n\n\tunselectAll(): void;\n\n\tdeleteSelectedRows(): void;\n\n\tdeleteRow(row: GuiSelectedRow): void;\n\n\tdeleteRows(rows: Array<GuiSelectedRow>): void;\n\n\t/**\n\t * Columns\n\t */\n\tgetColumns(): Array<any>;\n\n\t/**\n\t * Filtering\n\t */\n\tgetFilters(): GuiFilterCollection;\n\n\tgetFiltersForColumn(columnName: string): Array<GuiFilter>;\n\n\tgetFilterTypes(): Array<string>;\n\n\tgetFilterTypesForColumn(columnName: string): Array<string>;\n\n\tremoveAll(): void;\n\n\tremoveFilter(filterId: string): void;\n\n\tremoveFiltersFromColumn(columnName: string): void;\n\n\tfilter(columnName: string, filterType: string, value: any): void;\n\n\t// addFilter(columnName: string, filterType: string, value: any): string;\n\n\t// editFilter(filterId: string, value): void;\n\n\t/**\n\t * Paging\n\t */\n\tenablePaging(): void;\n\n\tdisablePaging(): void;\n\n\tnextPage(): void;\n\n\tprevPage(): void;\n\n\tchangePageSize(pageSize: number): void;\n\n\tsetPagingConfig(config: PagingConfig): void;\n\n\t/**\n\t * Searching\n\t */\n\tsetSearchingConfig(config: SearchConfig): void;\n\n\tsearch(phrase: string): void;\n\n\tclearSearchPhrase(): void;\n\n\t/**\n\t * View port\n\t */\n\tscrollToTop(): void;\n\n\tscrollToBottom(): void;\n\n\tscrollToRowByIndex(index: number): void;\n\n\t/**\n\t * Visual - Schema\n\t */\n\tsetTheme(theme: string | GuiTheme): void;\n\n\tsetVerticalGrid(enabled: boolean): void;\n\n\tsetHorizontalGrid(enabled: boolean): void;\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring): void;\n\n\t/**\n\t * Virtual scroll\n\t */\n\tenableVirtualScroll(): void;\n\n\tdisableVirtualScroll(): void;\n\n\t/**\n\t * Summaries\n\t */\n\tenableSummaries(): void;\n\n\tdisableSummaries(): void;\n\n\t/**\n\t * Sorting\n\t */\n\tsetSortConfig(config: SortingConfig): void;\n\n}\n\n\nexport class GuiGridApiProvider {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate readonly compositionId: CompositionId;\n\n\tprivate readonly schemaId: SchemaReadModelRootId;\n\n\tprivate readonly formationCommandInvoker: FormationCommandInvoker;\n\n\tprivate readonly formationWarehouse: FormationWarehouse;\n\n\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker;\n\n\tprivate readonly compositionWarehouse: CompositionWarehouse;\n\n\tprivate readonly filterIntegration: FilterIntegration;\n\n\tprivate readonly sourceCommandInvoker: SourceCommandInvoker;\n\n\tprivate readonly searchCommandInvoker: SearchCommandInvoker;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly structureCommandInvoker: StructureCommandInvoker;\n\n\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker;\n\n\tprivate readonly sortingCommandInvoker: SortingCommandInvoker;\n\n\tprivate readonly pagingCommandInvoker: PagingCommandInvoker;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tschemaId: SchemaReadModelRootId,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tformationWarehouse: FormationWarehouse,\n\t\t\t\tcompositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tcompositionWarehouse: CompositionWarehouse,\n\t\t\t\tfilterIntegration: FilterIntegration,\n\t\t\t\tsourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tgridThemeCommandInvoker: GuiGridThemeCommandInvoker,\n\t\t\t\tstructureCommandInvoker: StructureCommandInvoker,\n\t\t\t\tsummariesCommandInvoker: SummariesCommandInvoker,\n\t\t\t\tsortingCommandInvoker: SortingCommandInvoker,\n\t\t\t\tpagingCommandInvoker: PagingCommandInvoker) {\n\t\tthis.structureId = structureId;\n\t\tthis.compositionId = compositionId;\n\t\tthis.schemaId = schemaId;\n\t\tthis.formationCommandInvoker = formationCommandDispatcher;\n\t\tthis.formationWarehouse = formationWarehouse;\n\t\tthis.compositionCommandInvoker = compositionCommandInvoker;\n\t\tthis.compositionWarehouse = compositionWarehouse;\n\t\tthis.filterIntegration = filterIntegration;\n\t\tthis.sourceCommandInvoker = sourceCommandInvoker;\n\t\tthis.searchCommandInvoker = searchCommandInvoker;\n\t\tthis.gridThemeCommandInvoker = gridThemeCommandInvoker;\n\t\tthis.structureCommandInvoker = structureCommandInvoker;\n\t\tthis.summariesCommandInvoker = summariesCommandInvoker;\n\t\tthis.sortingCommandInvoker = sortingCommandInvoker;\n\t\tthis.pagingCommandInvoker = pagingCommandInvoker;\n\t}\n\n\tprovide(): GuiGridApi {\n\n\t\tconst structureId = this.structureId,\n\t\t\tcompositionId = this.compositionId,\n\t\t\tschemaId = this.schemaId,\n\t\t\tfcd = this.formationCommandInvoker,\n\t\t\tfw = this.formationWarehouse,\n\t\t\tcompositionCommandInvoker = this.compositionCommandInvoker,\n\t\t\tcompositionWarehouse = this.compositionWarehouse,\n\t\t\tfilterIntegration = this.filterIntegration,\n\t\t\tscd = this.sourceCommandInvoker,\n\t\t\tsearchCommandInvoker = this.searchCommandInvoker,\n\t\t\tgridThemeCommandInvoker = this.gridThemeCommandInvoker,\n\t\t\tstructureCommandInvoker = this.structureCommandInvoker,\n\t\t\tsummariesCommandInvoker = this.summariesCommandInvoker,\n\t\t\tsortingCommandInvoker = this.sortingCommandInvoker,\n\t\t\tpagingCommandInvoker = this.pagingCommandInvoker;\n\n\t\treturn {\n\n\t\t\tsetSource(source: Array<any>): void {\n\t\t\t\tscd.setOrigin(source, structureId);\n\t\t\t},\n\n\t\t\tshowLoading(): void {\n\t\t\t\tscd.setLoading(true, structureId);\n\t\t\t},\n\n\t\t\thideLoading(): void {\n\t\t\t\tscd.setLoading(false, structureId);\n\t\t\t},\n\n\t\t\tdeleteRow(row: GuiSelectedRow): void {\n\t\t\t\tscd.deleteRow(new SelectedRow(row.source, row.index, row.itemId), structureId);\n\t\t\t},\n\n\t\t\tdeleteRows(rows: Array<GuiSelectedRow>): void {\n\t\t\t\tconst selectedRows = rows.map((row: GuiSelectedRow) => new SelectedRow(row.source, row.index, row.itemId));\n\n\t\t\t\tscd.deleteRows(selectedRows, structureId);\n\t\t\t},\n\n\t\t\tdeleteSelectedRows(): void {\n\t\t\t\t// this.sourceCommandDispatcher.\n\t\t\t},\n\n\t\t\tgetSelectedRows(): Array<GuiSelectedRow> {\n\n\t\t\t\tconst rows = fw.findSelectedRows(structureId).getValueOrNullOrThrowError();\n\n\t\t\t\treturn rows.map((r: SelectedRow) => {\n\t\t\t\t\treturn { source: r.getSource(), index: r.getIndex(), itemId: r.getItemId() } as GuiSelectedRow;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tselectAll(): void {\n\t\t\t\tfcd.selectAll(structureId);\n\t\t\t},\n\n\t\t\tunselectAll(): void {\n\t\t\t\tfcd.unselectAll(structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Columns\n\t\t\t */\n\t\t\tgetColumns(): Array<any> {\n\n\t\t\t\tlet columns: ReadonlyArray<any> = [];\n\n\t\t\t\tcompositionWarehouse.onTemplateColumns(compositionId)\n\t\t\t\t\t\t\t\t\t.subscribe((v) => {\n\t\t\t\t\t\t\t\t\t\tcolumns = v;\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\treturn columns as Array<any>;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Filtering\n\t\t\t */\n\t\t\tgetFilters(): GuiFilterCollection {\n\n\t\t\t\tconst filters = filterIntegration.findFilters(compositionId, structureId);\n\n\t\t\t\tconst filterCollection = {};\n\n\t\t\t\tObject.keys(filters)\n\t\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t\t  filterCollection[key] =\n\t\t\t\t\t\t\t  filters[key].map((filter: FilterForColumn) => {\n\t\t\t\t\t\t\t\t  return {\n\t\t\t\t\t\t\t\t\t  columnName: filter.columnName,\n\t\t\t\t\t\t\t\t\t  filterId: filter.filterId,\n\t\t\t\t\t\t\t\t\t  filterType: filter.type,\n\t\t\t\t\t\t\t\t\t  value: filter.value\n\t\t\t\t\t\t\t\t  } as GuiFilter;\n\t\t\t\t\t\t\t  }) as Array<GuiFilter>;\n\t\t\t\t\t  });\n\n\t\t\t\treturn filterCollection;\n\t\t\t},\n\n\t\t\tgetFiltersForColumn(columnName: string): Array<GuiFilter> {\n\t\t\t\treturn [];\n\t\t\t},\n\n\t\t\tgetFilterTypes(): Array<string> {\n\t\t\t\treturn [];\n\t\t\t},\n\n\t\t\tgetFilterTypesForColumn(columnName: string): Array<string> {\n\t\t\t\treturn filterIntegration.findFilterTypes(columnName, compositionId, structureId);\n\t\t\t},\n\n\t\t\tremoveAll(): void {\n\t\t\t},\n\n\t\t\tremoveFilter(filterId: string): void {\n\t\t\t},\n\n\t\t\tremoveFiltersFromColumn(columnName: string): void {\n\t\t\t},\n\n\t\t\tfilter(columnName: string, filterType: string, value: any): void {\n\t\t\t\tfilterIntegration.filter(columnName, filterType, value, compositionId, structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Paging\n\t\t\t */\n\t\t\tenablePaging(): void {\n\t\t\t\tpagingCommandInvoker.enable(structureId);\n\t\t\t},\n\n\t\t\tdisablePaging(): void {\n\t\t\t\tpagingCommandInvoker.disable(structureId);\n\t\t\t},\n\n\t\t\tnextPage(): void {\n\t\t\t\tpagingCommandInvoker.nextPage(structureId);\n\t\t\t},\n\n\t\t\tprevPage(): void {\n\t\t\t\tpagingCommandInvoker.prevPage(structureId);\n\t\t\t},\n\n\t\t\tchangePageSize(pageSize: number): void {\n\t\t\t\tpagingCommandInvoker.changePageSize(pageSize, structureId);\n\t\t\t},\n\n\t\t\tsetPagingConfig(config: PagingConfig): void {\n\t\t\t\tpagingCommandInvoker.setPaging(config, structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Searching\n\t\t\t */\n\t\t\tsetSearchingConfig(config: SearchConfig): void {\n\t\t\t\tsearchCommandInvoker.setSearchingConfig(config, structureId);\n\t\t\t},\n\n\t\t\tsearch(phrase: string): void {\n\t\t\t\tsearchCommandInvoker.search(phrase, structureId);\n\t\t\t},\n\n\t\t\tclearSearchPhrase(): void {\n\t\t\t\tsearchCommandInvoker.search('', structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * View port\n\t\t\t */\n\t\t\tscrollToTop(): void {\n\t\t\t\tstructureCommandInvoker.scrollToTop(structureId);\n\t\t\t},\n\n\t\t\tscrollToBottom(): void {\n\t\t\t\tstructureCommandInvoker.scrollToBottom(structureId);\n\t\t\t},\n\n\t\t\tscrollToRowByIndex(index: number): void {\n\t\t\t\tstructureCommandInvoker.scrollToIndex(index, structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Visual - Schema\n\t\t\t */\n\t\t\tsetTheme(theme: string | GuiTheme): void {\n\t\t\t\tgridThemeCommandInvoker.setTheme(theme, schemaId, structureId);\n\t\t\t},\n\n\t\t\tsetVerticalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setVerticalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetHorizontalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setHorizontalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetRowColoring(rowColoring: string | GuiRowColoring): void {\n\t\t\t\tgridThemeCommandInvoker.setRowColoring(rowColoring, schemaId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Virtual scroll\n\t\t\t */\n\t\t\tenableVirtualScroll(): void {\n\t\t\t\tstructureCommandInvoker.enableVirtualScroll(structureId);\n\t\t\t},\n\n\t\t\tdisableVirtualScroll(): void {\n\t\t\t\tstructureCommandInvoker.disableVirtualScroll(structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Summaries\n\t\t\t */\n\t\t\tenableSummaries(): void {\n\t\t\t\tsummariesCommandInvoker.setSummariesEnabled(true, structureId);\n\t\t\t},\n\n\t\t\tdisableSummaries(): void {\n\t\t\t\tsummariesCommandInvoker.setSummariesEnabled(false, structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sorting\n\t\t\t */\n\t\t\tsetSortConfig(config: SortingConfig): void {\n\t\t\t\tsortingCommandInvoker.setSortingConfig(config, structureId);\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { RowSelectionMode } from './row-selected/row-selection';\nimport { RowSelectToggleType } from '../domain/core/row-select-toggle-type';\n\n\n@Injectable()\nexport abstract class FormationCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract toggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId): void;\n\n\tabstract changeMode(mode: RowSelectionMode, structureId: StructureId): void;\n\n\tabstract setSelection(enabled: boolean, structureId: StructureId): void;\n\n\tabstract selectAll(structureId: StructureId): void;\n\n\tabstract unselectAll(structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { SelectedRow } from '../../../formation/core/api/row-selected/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandInvoker } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setLoading(enabled: boolean, structureId: StructureId): void;\n\n\tabstract editItem(params: StructureEditSourceItemParams, structureId: StructureId): void;\n\n\tabstract editItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void;\n\n\tabstract deleteRow(row: SelectedRow, structureId: StructureId): void;\n\n\tabstract deleteRows(rows: Array<SelectedRow>, structureId: StructureId): void;\n\n\tabstract deleteItemByIndex(index: number, structureId: StructureId): void;\n\n\tabstract deleteItemById(itemId: OriginId, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Optional, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { RowSelectedReadModel } from './row-selected/row-selected.read-model';\nimport { RowSelectionMode } from './row-selected/row-selection';\nimport { SelectedRow } from './row-selected/selected-row';\n\n\n@Injectable()\nexport abstract class FormationWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract findSelectedRows(structureId: StructureId): Optional<ReadonlyArray<SelectedRow>>;\n\n\tabstract onRowSelectedReadModel(structureId: StructureId): HermesObservable<RowSelectedReadModel>;\n\n\tabstract findSelectedItemIds(structureId: StructureId): Optional<ReadonlyArray<string>>;\n\n\tabstract onSelectedRows(structureId: StructureId): HermesObservable<ReadonlyArray<string>>;\n\n\tabstract onMode(structureId: StructureId): HermesObservable<RowSelectionMode>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from './search-config';\n\n\n@Injectable()\nexport abstract class SearchCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSearchingConfig(config: SearchConfig, structureId: StructureId): void;\n\n\tabstract search(phrase: string, structureId: StructureId): void;\n}\n","import { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring/row-coloring';\nimport { GuiRowColoring, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { GuiGridThemeConverter } from './gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './coloring/gui.grid.row-coloring.converter';\n\nexport class GuiGridThemeCommandInvoker {\n\n\tconstructor(private readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly gridThemeConverter: GuiGridThemeConverter,\n\t\t\t\tprivate readonly gridRowColoringConverter: GuiGridRowColoringConverter) {\n\t}\n\n\tsetTheme(theme: string | GuiTheme, schemaId: SchemaReadModelRootId, structureId: StructureId): void {\n\t\tconst schemaTheme = this.gridThemeConverter.convert(theme);\n\n\t\tthis.schemaCommandInvoker.setTheme(schemaTheme, schemaId, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring, schemaId: SchemaReadModelRootId): void {\n\n\t\tconst schemaRowColoring: RowColoring = this.gridRowColoringConverter.convert(rowColoring);\n\n\t\tthis.schemaCommandInvoker.setRowColoring(schemaRowColoring, schemaId);\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, schemaId);\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, schemaId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from './row-coloring/row-coloring';\n\n\n@Injectable()\nexport abstract class SchemaCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(schemaId: SchemaReadModelRootId): void;\n\n\tabstract setTheme(\n\t\ttheme: SchemaTheme,\n\t\tschemaId: SchemaReadModelRootId,\n\t\tstructureId: StructureId\n\t): void;\n\n\tabstract setRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\nimport { FilterConfig } from '../../filter/core/api/config/filter.config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filter/quick-filters.config';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { CellEditConfig } from '../../grid/core/api/edit/cell-edit.config';\n\n\n@Injectable()\nexport abstract class StructureCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(structureId: StructureId): void;\n\n\tabstract enableVirtualScroll(structureId: StructureId): void;\n\n\tabstract disableVirtualScroll(structureId: StructureId): void;\n\n\tabstract scrollToTop(structureId: StructureId): void;\n\n\tabstract scrollToBottom(structureId: StructureId): void;\n\n\tabstract scrollToIndex(index: number, structureId: StructureId): void;\n\n\tabstract setScrollPosition(position: number, structureId: StructureId): void;\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setFilterConfig(config: FilterConfig, structureId: StructureId): void;\n\n\tabstract setQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void;\n\n\tabstract setRowHeight(rowHeight: number, structureId: StructureId): void;\n\n\tabstract setContainerHeight(height: number, structureId: StructureId): void;\n\n\tabstract setRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void;\n\n\tabstract setCellEdit(cellEdit: CellEditConfig, structureId: StructureId): void;\n\n}\n","import { ModifierApi } from './modifier-api';\n\nexport abstract class Modifier<T extends ModifierApi> {\n\n\tprotected constructor(\n\t\tprivate readonly hostElement?: HTMLElement\n\t) {\n\t}\n\n\tprotected abstract createModifier(htmlElement: HTMLElement): T;\n\n\tgetElement(htmlElement: HTMLElement): T {\n\t\treturn this.createModifier(htmlElement);\n\t}\n\n\tgetHost(): T {\n\n\t\tif (!this.hostElement) {\n\t\t\tthrow new Error('Missing host element in DomRenderer constructor.');\n\t\t}\n\n\t\treturn this.createModifier(this.hostElement);\n\t}\n}\n","import { ClassModifierApi } from './class-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class ClassModifier extends Modifier<ClassModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): ClassModifierApi {\n\t\treturn new ClassModifier.ClassModifier(htmlElement);\n\t}\n\n\t// eslint-disable-next-line\n\tprivate static readonly ClassModifier = class implements ClassModifierApi {\n\n\t\tprivate static readonly CLASS = 'class';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tadd(...classes: Array<string>): void {\n\t\t\tthis.addClassToDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tremove(...classes: Array<string>): void {\n\t\t\tthis.removeClassFromDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(ClassModifier.ClassModifier.CLASS);\n\t\t}\n\n\t\tprivate addClassToDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.add(classes[i]);\n\t\t\t}\n\t\t}\n\n\t\tprivate removeClassFromDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.remove(classes[i]);\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n","export enum StyleName {\n\tWIDTH = 'width',\n\tHEIGHT = 'height',\n\tPADDING_TOP = 'padding-top'\n}\n","import { StyleModifierApi } from './style-modifier-api';\nimport { StyleName } from './style-name';\nimport { Modifier } from '../core/modifier';\n\n\nexport class StyleModifier extends Modifier<StyleModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): StyleModifierApi {\n\t\treturn new StyleModifier.StyleModifier(htmlElement);\n\t}\n\n\t// eslint-disable-next-line\n\tprivate static readonly StyleModifier = class implements StyleModifierApi {\n\n\t\tprivate static readonly STYLE = 'style';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetStyleByName(name: string, value: string): void {\n\t\t\tthis.set(name, value);\n\t\t}\n\n\t\tsetWidth(value: number): void {\n\t\t\tthis.set(StyleName.WIDTH, this.toPx(value));\n\t\t}\n\n\t\tsetHeight(value: number): void {\n\t\t\tthis.set(StyleName.HEIGHT, this.toPx(value));\n\t\t}\n\n\t\tsetPaddingTop(value: number): void {\n\t\t\tthis.set(StyleName.PADDING_TOP, this.toPx(value));\n\t\t}\n\n\t\tremove(styleName: StyleName): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][styleName] = '';\n\t\t}\n\n\t\tremoveStyleByName(name: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = '';\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(StyleModifier.StyleModifier.STYLE);\n\t\t}\n\n\t\tprivate set(name: string, value: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = value;\n\t\t}\n\n\t\tprivate toPx(value: number): string {\n\t\t\treturn value > 0 ? `${value}px` : `${value}`;\n\t\t}\n\n\t};\n\n}\n","import { AttributeModifierApi } from './attribute-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class AttributeModifier extends Modifier<AttributeModifierApi> {\n\n\tprivate static readonly AttributeModifier = class implements AttributeModifierApi {\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetAttribute(name: string, value: string): void {\n\t\t\tthis.htmlElement.setAttribute(name, value);\n\t\t}\n\n\t\tremoveAttribute(name: string): void {\n\t\t\tthis.htmlElement.removeAttribute(name);\n\t\t}\n\n\t};\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): AttributeModifierApi {\n\t\treturn new AttributeModifier.AttributeModifier(htmlElement);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from './config/paging-config';\n\n\n@Injectable()\nexport abstract class PagingCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract enable(structureId: StructureId): void;\n\n\tabstract disable(structureId: StructureId): void;\n\n\tabstract setPaging(paging: PagingConfig, structureId: StructureId): void;\n\n\tabstract changePageSize(pageSize: number, structureId: StructureId): void;\n\n\tabstract nextPage(structureId: StructureId): void;\n\n\tabstract prevPage(structureId: StructureId): void;\n\n\tabstract goToPage(pageNumber: number, currentPage: number, structureId: StructureId): void;\n\n\tabstract changePagerTop(enabled: boolean, structureId: StructureId): void;\n\n\tabstract changePagerBottom(enabled: boolean, structureId: StructureId): void;\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesConfig } from './summaries-config';\n\n\n@Injectable()\nexport abstract class SummariesCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSummariesEnabled(enabled: boolean, structureId: StructureId): void;\n\n\tabstract setConfig(config: SummariesConfig, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SortingConfig } from './sorting-config';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport abstract class SortingCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSortingConfig(config: SortingConfig, structureId: StructureId): void;\n\n\tabstract toggleSort(fieldId: FieldId, compositionId: CompositionId, structureId: StructureId): void;\n\n\tabstract setSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId: CompositionId, structureId: StructureId): void;\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\n/** @internal */\nexport const guiGridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from './column/column-definition-id';\n\n\n@Injectable()\nexport abstract class CompositionCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(compositionId: CompositionId): void;\n\n\tabstract setColumns(params: Array<ColumnParams>, compositionId: CompositionId): void;\n\n\tabstract setGroups(configs: any, compositionId: CompositionId): void;\n\n\tabstract setWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setContainerWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setResizeWidth(enabled: boolean, compositionId: CompositionId): void;\n\n\tabstract enableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract disableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract highlightColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\nimport { ColumnId } from './column/column.id';\n\n\n@Injectable()\nexport abstract class CompositionWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onContainerWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>>;\n\n\tabstract onHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder>;\n\n\tabstract onTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>>;\n\n\tabstract onResizeWidth(compositionId: CompositionId): HermesObservable<boolean>;\n\n\tabstract onGroups(compositionId: CompositionId): HermesObservable<GroupCollection>;\n\n\tabstract onHighlightedColumn(columnId: ColumnId, compositionId: CompositionId): HermesObservable<boolean>;\n\n\t// abstract onHighlightedColumns(compositionId: CompositionId)\n\n\tabstract findColumnNames(compositionId: CompositionId): ReadonlyArray<string>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, HermesSingle, Optional, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterTypeCollectionModel } from './type/filter-type-collection.model';\nimport { ActiveFilterModel } from './active/active-filter.model';\nimport { UniqueValueCollectionModel } from './unique/unique-value-collection.model';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeModel } from './type/filter-type.model';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\n\n\n@Injectable()\nexport abstract class FilterWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onFilteringEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onQuickFiltersEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onFilterTypes(structureId: StructureId): HermesObservable<FilterTypeCollectionModel>;\n\n\tabstract onFilterTypesForFieldId(fieldId: FieldId, structureId: StructureId): HermesObservable<ReadonlyArray<FilterTypeModel>>;\n\n\tabstract onActiveFilters(structureId: StructureId): HermesObservable<ReadonlyArray<ActiveFilterModel>>;\n\n\tabstract findFilters(structureId: StructureId): Optional<ReadonlyArray<ActiveFilterModel>>;\n\n\tabstract onUniqueValues(structureId: StructureId): HermesObservable<UniqueValueCollectionModel>;\n\n\tabstract onceFilterTypeId(fieldId: FieldId, filterTypeName: string, structureId: StructureId): HermesSingle<Optional<FilterTypeId>>;\n\n}\n","import { EntityId, Key } from '@generic-ui/hermes';\n\nexport class FieldId extends EntityId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './config/filter.config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { FilterId } from './filter.id';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\n\n\n@Injectable()\nexport abstract class FilterCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setConfig(config: FilterConfig, structureId: StructureId): void;\n\n\tabstract add(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void;\n\n\tabstract removeAll(structureId: StructureId): void;\n\n\tabstract remove(filterId: FilterId, structureId: StructureId): void;\n\n\tabstract selectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void;\n\n\tabstract unselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void;\n\n\tabstract selectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void;\n\n\tabstract unselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { hermesFilter, hermesMap, hermesSwitchMap, hermesTake, Optional } from '@generic-ui/hermes';\nimport { FilterWarehouse } from '../api/filter.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeModel } from '../api/type/filter-type.model';\nimport { FilterCommandInvoker } from '../api/filter.command-invoker';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { ActiveFilterModel } from '../api/active/active-filter.model';\nimport { FilterForColumn } from './filter-integration.api';\n\n\n@Injectable()\nexport class FilterIntegration {\n\n\tconstructor(private readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly filterCommandInvoker: FilterCommandInvoker,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse) {\n\t}\n\n\tfindFilterTypes(columnName: string, compositionId: CompositionId, structureId: StructureId): Array<string> {\n\n\t\tlet filterTypes: Array<string> = [];\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns(compositionId)\n\t\t\t.pipe(\n\t\t\t\thermesMap((cols: ReadonlyArray<CellTemplateWithAccessor>) => {\n\t\t\t\t\treturn cols.find((col: CellTemplateWithAccessor) => {\n\t\t\t\t\t\treturn col.getName() === columnName;\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t\thermesFilter((col: CellTemplateWithAccessor) => {\n\t\t\t\t\treturn col !== undefined;\n\t\t\t\t}),\n\t\t\t\thermesTake(1),\n\t\t\t\thermesSwitchMap((col: CellTemplateWithAccessor) => {\n\t\t\t\t\treturn this.filterWarehouse\n\t\t\t\t\t\t\t   .onFilterTypesForFieldId(new FieldId(col.columnFieldId.getId()), structureId);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((types: Array<FilterTypeModel>) => {\n\t\t\t\tfilterTypes = types.map((type) => type.getName());\n\t\t\t});\n\n\t\treturn filterTypes;\n\t}\n\n\tfindFilters(compositionId: CompositionId, structureId: StructureId): { [key: string]: ReadonlyArray<FilterForColumn> } {\n\n\t\tconst filters = this.filterWarehouse.findFilters(structureId).getValueOrNullOrThrowError();\n\n\t\tconst columnNames = this.compositionWarehouse.findColumnNames(compositionId);\n\n\t\tconst obj = {};\n\n\t\tfor (let i = 0; i < columnNames.length; i += 1) {\n\t\t\tobj[columnNames[i]] = filters.filter((filter: ActiveFilterModel) => {\n\t\t\t\t\t\t\t\t\t\t\t return filter.getFieldName() === columnNames[i];\n\t\t\t\t\t\t\t\t\t\t })\n\t\t\t\t\t\t\t\t\t\t .map((filter: ActiveFilterModel) => {\n\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t columnName: filter.getFieldName(),\n\t\t\t\t\t\t\t\t\t\t\t\t filterId: filter.getFilterId().toString(),\n\t\t\t\t\t\t\t\t\t\t\t\t type: filter.getFilterTypeName(),\n\t\t\t\t\t\t\t\t\t\t\t\t value: filter.getValue()\n\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t });\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\tfilter(\n\t\tcolumnName: string,\n\t\tfilterType: string,\n\t\tvalue: any,\n\t\tcompositionId: CompositionId,\n\t\tstructureId: StructureId\n\t): void {\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns(compositionId)\n\t\t\t.pipe(\n\t\t\t\thermesMap((cols: ReadonlyArray<CellTemplateWithAccessor>) => {\n\t\t\t\t\treturn cols.find((col: CellTemplateWithAccessor) => {\n\t\t\t\t\t\treturn col.getName() === columnName;\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t\thermesFilter((col: CellTemplateWithAccessor) => {\n\t\t\t\t\treturn col !== undefined;\n\t\t\t\t}),\n\t\t\t\thermesTake(1),\n\t\t\t\thermesSwitchMap((col: CellTemplateWithAccessor) => {\n\n\t\t\t\t\treturn this.filterWarehouse\n\t\t\t\t\t\t\t   .onceFilterTypeId(new FieldId(col.columnFieldId.getId()), filterType, structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   hermesMap((filterTypeId: Optional<FilterTypeId>) => {\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   fieldId: new FieldId(col.columnFieldId.getId()),\n\t\t\t\t\t\t\t\t\t\t   filterTypeId: filterTypeId\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((params) => {\n\n\t\t\t\tconst { fieldId, filterTypeId } = params;\n\n\t\t\t\tfilterTypeId.ifPresent((ftId: FilterTypeId) => {\n\t\t\t\t\tthis.filterCommandInvoker.add(\n\t\t\t\t\t\tfieldId,\n\t\t\t\t\t\tftId,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tstructureId\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnDestroy, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GuiGridGateway } from './gui.grid-gateway';\n\nimport { structureParentComponent } from '../../../../structure/grid/feature/structure-parent-component';\n\nimport { GuiGridIdGenerator } from './register/gui.grid-id.generator';\nimport { GuiGridRegister } from './register/gui.grid.register';\nimport { GuiGridApi, GuiGridApiProvider } from './api/gui.grid.api-provider';\nimport { FormationCommandInvoker } from '../../../../structure/formation/core/api/formation.command-invoker';\nimport { SourceCommandInvoker } from '../../../../structure/source/core/api/source.command-invoker';\nimport { FormationWarehouse } from '../../../../structure/formation/core/api/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../structure/search/core/api/search.command-invoker';\nimport { GuiGridThemeCommandInvoker } from './theme/gui.grid.theme.command-invoker';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureCommandInvoker } from '../../../../structure/core/api/structure.command-invoker';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport { AttributeModifier } from '../../../../common/cdk/dom/attribute/attribute-modifier';\nimport { PagingCommandInvoker } from '../../../../structure/paging/core/api/paging.command-invoker';\nimport { SummariesCommandInvoker } from '../../../../structure/summaries/core/api/summaries.command-invoker';\nimport { SortingCommandInvoker } from '../../../../structure/sorting/core/api/sorting.command-invoker';\nimport { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\nimport { guiGridStructureDefinition } from './gui.grid-structure-definition';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FilterIntegration } from '../../../../structure/filter/core/api-integration/filter.integration';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './gui.grid.component.html',\n\tstyleUrls: [\n\t\t'../gui.grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: StructureDefinition,\n\t\t\tuseValue: guiGridStructureDefinition\n\t\t},\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GuiGridComponent\n\t\t}\n\t],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiGridComponent extends GuiGridGateway implements OnInit, OnDestroy {\n\n\tprivate static readonly GUI_GRID_ID = 'gui-grid-id';\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tpublic api: GuiGridApi;\n\n\tprivate localGridId: string;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly attributeModifier: AttributeModifier;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly gridRegister: GuiGridRegister,\n\t\t\t\tprivate readonly gridIdGenerator: GuiGridIdGenerator,\n\t\t\t\t// delegate\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly filterIntegration: FilterIntegration,\n\t\t\t\tprivate readonly sourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tprivate readonly searchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly structureCommandDispatcher: StructureCommandInvoker,\n\t\t\t\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandInvoker: SortingCommandInvoker,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker\n\t) {\n\t\tsuper();\n\n\t\tthis.gridThemeCommandInvoker = new GuiGridThemeCommandInvoker(\n\t\t\tthis.schemaCommandInvoker,\n\t\t\tthis.gridThemeConverter,\n\t\t\tthis.gridRowColoringConverter\n\t\t);\n\n\t\tthis.classModifier = new ClassModifier(this.elementRef.nativeElement);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tthis.attributeModifier = new AttributeModifier(this.elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.classModifier.getHost().add('gui-grid');\n\t\t// this.styleModifier.getHost().setHeight(this.maxHeight);\n\n\t\tthis.initApi();\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn this.api;\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.attributeModifier.getHost().setAttribute(GuiGridComponent.GUI_GRID_ID, this.localGridId);\n\t}\n\n\tprivate initApi(): void {\n\t\tthis.api = new GuiGridApiProvider(\n\t\t\tthis.structureRef.structureId,\n\t\t\tthis.structureRef.compositionId,\n\t\t\tthis.structureRef.schemaReadModelRootId,\n\t\t\tthis.formationCommandDispatcher,\n\t\t\tthis.formationWarehouse,\n\t\t\tthis.compositionCommandInvoker,\n\t\t\tthis.compositionWarehouse,\n\t\t\tthis.filterIntegration,\n\t\t\tthis.sourceCommandDispatcher,\n\t\t\tthis.searchCommandInvoker,\n\t\t\tthis.gridThemeCommandInvoker,\n\t\t\tthis.structureCommandDispatcher,\n\t\t\tthis.summariesCommandInvoker,\n\t\t\tthis.sortingCommandInvoker,\n\t\t\tthis.pagingCommandInvoker\n\t\t).provide();\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ClassModifier } from '../dom/class/class-modifier';\nimport { Changes } from './ng-changes';\n\n@Directive()\nexport abstract class GuiComponent {\n\n\tprivate readonly innerClassModifier: ClassModifier = new ClassModifier(this.innerElementRef.nativeElement);\n\n\tprotected constructor(private readonly innerElementRef: ElementRef) {\n\t\tthis.addHostClass();\n\t}\n\n\tprotected abstract getSelectorName(): string;\n\n\taddClassToHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().add(className);\n\t}\n\n\tremoveClassFromHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().remove(className);\n\t}\n\n\thasChanged<T>(prop: Changes<T>): boolean {\n\t\treturn prop !== undefined && prop.currentValue !== undefined;\n\t}\n\n\tifChanged<T>(prop: Changes<T>, callback: () => void): void {\n\t\tif (this.hasChanged(prop)) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tprivate addHostClass(): void {\n\t\tthis.innerClassModifier.getHost().add(this.getSelectorName());\n\t}\n}\n","import { ChangeDetectorRef, Directive, ElementRef, EventEmitter } from '@angular/core';\nimport { GuiComponent } from './gui-component';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\n@Directive()\nexport abstract class SmartComponent extends GuiComponent {\n\n\tprivate viewInDom: boolean = false;\n\n\tprivate readonly unsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewInDom = true;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewInDom()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewInDom(): boolean {\n\t\treturn this.viewInDom;\n\t}\n\n\tsubscribe<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tsubscribeWithoutRender<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t});\n\t}\n\n\t// for gate\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>,\n\t\tmapper: (value: V) => any = (value: V) => value\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(mapper(value));\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil(): any {\n\t\treturn hermesTakeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, HermesSingle, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingModel } from './paging.model';\n\n\n@Injectable()\nexport abstract class PagingWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onPaging(structureId: StructureId): HermesObservable<PagingModel>;\n\n\tabstract oncePaging(structureId: StructureId): HermesSingle<PagingModel>;\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { HermesObservable, HermesSingle, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract findEntities(structureId: StructureId): ReadonlyArray<ItemEntity>;\n\n\tabstract onEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>>;\n\n\tabstract onEntitiesSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onceEntities(structureId: StructureId): HermesSingle<ReadonlyArray<ItemEntity>>;\n\n\tabstract onOriginSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onLoading(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>>;\n\n\tabstract findPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import { HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\n\nexport class StreamCloser<T> {\n\n\tprivate readonly unsubscribe$ = new HermesSubject<void>();\n\n\tconstructor() {\n\t}\n\n\ttakeUntil() {\n\t\treturn hermesTakeUntil(this.unsubscribe$);\n\t}\n\n\tunsubscribe(): void {\n\t\tif ((this.unsubscribe$ as any).isCompleted) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","export enum CssClass {\n\tSELECTED = 'selected',\n\tPAGING_TOP_CLASS_NAME = 'gui-paging-top',\n\tPAGING_BOTTOM_CLASS_NAME = 'gui-paging-bottom'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClassModifier } from '../../../common/cdk/dom/class/class-modifier';\nimport { CssClass } from './css-class';\n\n@Injectable()\nexport class CssClassModifier {\n\n\tprivate readonly classModifier: ClassModifier = new ClassModifier();\n\n\tselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).add(CssClass.SELECTED);\n\t}\n\n\tunselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(CssClass.SELECTED);\n\t}\n\n\tadd(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).add(clazzName);\n\t}\n\n\tremove(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(clazzName);\n\t}\n\n\ttoggle(htmlElement: HTMLElement): void {\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\nimport { PagingModel } from '../core/api/paging.model';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { CssClassModifier } from '../../common/css-class/css-class.modifier';\nimport { CssClass } from '../../common/css-class/css-class';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging][position]',\n\ttemplateUrl: './paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: PagingModel;\n\n\talternativeDisplay: boolean = false;\n\n\tisPagingVisible = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly elRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-justify-end');\n\t\tthis.addClassToHost('gui-items-center');\n\t\tthis.addClassToHost('gui-p-4');\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingComponent>) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t} else {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.pagingDisplayModeArchive.on(),\n\t\t\t(mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: PagingModel) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.calculatePagingVisibility();\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandInvoker.changePageSize(pageSize, this.structureId);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandInvoker.nextPage(this.structureId);\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandInvoker.prevPage(this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging';\n\t}\n\n\tprivate calculatePagingVisibility(): void {\n\t\tthis.isPagingVisible = this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n}\n","import { GuiComponent } from './gui-component';\nimport { Directive, ElementRef } from '@angular/core';\n\n@Directive()\nexport abstract class PureComponent extends GuiComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (!this.hasConstructorOnlyElementRefInjected(arguments)) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate hasConstructorOnlyElementRefInjected(args: IArguments): boolean {\n\n\t\tif (arguments.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.isElementRef(arguments[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isElementRef(elRef: any): boolean {\n\t\treturn elRef.nativeElement !== null;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { PagingModel } from '../../core/api/paging.model';\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { ifChanged } from '../../../../common/cdk/component/check.input';\n\n\n@Component({\n\tselector: 'div[gui-paging-select][paging]',\n\ttemplateUrl: './paging-select.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingSelectComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: PagingModel;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tselectPageSizes: Array<GuiSelectOption>;\n\n\tselectPageSize: GuiSelectOption;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingSelectComponent>) {\n\n\t\tifChanged(changes.paging, () => {\n\t\t\tif (this.paging) {\n\t\t\t\tthis.selectPageSizes = this.getSelectPageSizes();\n\t\t\t\tthis.selectPageSize = this.getSelectPageSize(this.paging.getPageSize());\n\t\t\t}\n\t\t});\n\t}\n\n\tchangePageSize(pageSize: GuiSelectOption): void {\n\t\tthis.pageSizeChanged.emit(+pageSize.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-select';\n\t}\n\n\tprivate getSelectPageSizes(): Array<GuiSelectOption> {\n\t\tconst selectPageSizes: Array<GuiSelectOption> = [],\n\t\t\tpageSizes = this.paging.getPageSizes();\n\n\t\tpageSizes.forEach((pageSize: number) => {\n\t\t\tconst selectOption = this.getSelectPageSize(pageSize);\n\t\t\tselectPageSizes.push(selectOption);\n\t\t});\n\n\t\treturn selectPageSizes;\n\t}\n\n\tprivate getSelectPageSize(pageSize: number): GuiSelectOption {\n\t\treturn { name: pageSize.toString(), value: pageSize.toString() };\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { PagingModel } from '../../../core/api/paging.model';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-navigator][paging][sourceSize]',\n\ttemplateUrl: './alternative-paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: PagingModel;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandInvoker.goToPage(1, this.paging.getPage(), this.structureId);\n\t}\n\n\tlastPage(): void {\n\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandInvoker.goToPage(numberOfPages, this.paging.getPage(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-navigator';\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PagingModel } from '../../../core/api/paging.model';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-pages][paging]',\n\ttemplateUrl: './alternative-paging-pages.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingPagesComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: PagingModel;\n\n\t@Input()\n\tsourceSize?: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<AlternativePagingPagesComponent>) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage, this.structureId);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-pages';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onPageChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n\tabstract onPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagesizeChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/config/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private readonly logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { PagingConfig } from '../../api/config/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/config/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract findById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'NextPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (const event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'StructurePreparedEntitiesSetAggregateEvent':\n\n\t\t\t\tthis.domainEventPublisher.publish(event.toDomainEvent());\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class PagingModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n\t// TODO\n\tcompare(target: PagingModel): boolean {\n\t\treturn JSON.stringify(this) === JSON.stringify(target);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../domain/paging.manager';\nimport { PagingModel } from '../api/paging.model';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): PagingModel {\n\t\treturn new PagingModel(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable, Reactive } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\n\t\tdomainEventBus\n\t\t\t.ofEvents(\n\t\t\t\tthis.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(structureId: StructureId): StructureReadModelRoot;\n\n\tabstract on(structureId: StructureId): HermesObservable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingModel } from '../api/paging.model';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<PagingModel> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, HermesSingle, singleFromObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingRepository } from './paging.repository';\nimport { PagingModel } from '../api/paging.model';\nimport { PagingWarehouse } from '../api/paging.warehouse';\n\n\n@Injectable()\nexport class PagingDomainWarehouse extends PagingWarehouse {\n\n\tconstructor(private readonly pagingRepository: PagingRepository) {\n\t\tsuper();\n\t}\n\n\tonPaging(structureId: StructureId): HermesObservable<PagingModel> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\toncePaging(structureId: StructureId): HermesSingle<PagingModel> {\n\t\treturn singleFromObservable(this.pagingRepository.on(structureId));\n\t}\n\n}\n","import { PagingDispatcher } from './paging.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/config/paging-config';\nimport { Injectable } from '@angular/core';\nimport { PagingCommandInvoker } from '../api/paging.command-invoker';\n\n@Injectable()\nexport class PagingDomainCommandInvoker extends PagingCommandInvoker {\n\n\tconstructor(private readonly pagingDispatcher: PagingDispatcher) {\n\t\tsuper();\n\t}\n\n\tenable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging({ enabled: true }, structureId);\n\t}\n\n\tdisable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging({ enabled: false }, structureId);\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(paging, structureId);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(pageSize, structureId);\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number, structureId: StructureId) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage(structureId);\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage(structureId);\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging({ pagerTop: enabled }, structureId);\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging({ pagerBottom: enabled }, structureId);\n\t}\n}\n","import { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, hermesSwitchMap } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingWarehouse } from '../api/paging.warehouse';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { PagingModel } from '../api/paging.model';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { PagingEventRepository } from '../api/paging.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class PagingDomainEventRepository extends PagingEventRepository {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvents([\n\t\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t\t   ]\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: PagingModel) => paging.getPage())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvents([\n\t\t\t\t\t\t   PagesizeChangedEvent as any\n\t\t\t\t\t   ]\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: PagingModel) => paging.getPageSize())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from '../domain-read/paging.converter';\nimport { PagingRepository } from '../domain-read/paging.repository';\nimport { PagingDomainWarehouse } from '../domain-read/paging.domain-warehouse';\nimport { PagingDomainCommandInvoker } from '../domain/paging.domain.command-invoker';\nimport { PagingDomainEventRepository } from '../domain-read/paging.domain.event-repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: PagingCommandInvoker,\n\t\t\tuseClass: PagingDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: PagingWarehouse,\n\t\t\tuseClass: PagingDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: PagingEventRepository,\n\t\t\tuseClass: PagingDomainEventRepository\n\t\t},\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { PagingModel } from '../../../core/api/paging.model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-navigator][paging]',\n\ttemplateUrl: './paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: PagingModel;\n\n\t@Input()\n\tsourceSize?: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-navigator';\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { PagingModel } from '../../../core/api/paging.model';\n\n\n@Component({\n\tselector: 'div[gui-paging-stats][paging]',\n\ttemplateUrl: './paging-stats.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: PagingModel;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-mx-6');\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-stats';\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\nimport { HermesObservable } from '@generic-ui/hermes';\n\nexport abstract class TranslationFacade {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): HermesObservable<Translation>;\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\n\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { Translation } from '../core/api/translation';\nimport { HermesSubscription } from '@generic-ui/hermes';\n\n\n@Pipe({\n\tname: 'guiTranslate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform, OnDestroy {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: HermesSubscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationFacade) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { TranslationFacade } from '../api/translation.facade';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\nimport { HermesObservable, HermesReplaySubject, HermesSubject } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class TranslationDomainFacade extends TranslationFacade {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: HermesSubject<Translation> = new HermesReplaySubject(1);\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): HermesObservable<Translation> {\n\t\treturn this.dictionary$.toObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { TranslationDomainFacade } from '../core/domain/translation.domain-facade';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t]\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationFacade, useClass: TranslationDomainFacade }];\n\t}\n\n\t// constructor(@Optional() apiModule: TranslationApiModule) {\n\t// \tsuper();\n\t// \tif (apiModule === null) {\n\t// \t\tthrow new Error('TranslationApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\t// constructor(@Optional() pagingApiModule: PagingApiModule) {\n\t// \tsuper();\n\t// \tif (pagingApiModule === null) {\n\t// \t\tthrow new Error('PagingApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectorRef, Directive, ElementRef, OnInit } from '@angular/core';\n\nimport { GuiComponent } from './gui-component';\n\n\n@Directive()\nexport abstract class StaticComponent extends GuiComponent implements OnInit {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.changeDetectorRef.detach();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StaticComponent } from '../../../../../../common/cdk/component/static-component';\n\n@Component({\n\tselector: 'div[gui-info-dialog]',\n\ttemplateUrl: './structure-info-modal.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoModalComponent extends StaticComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-info-dialog';\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-dialog-column-manager]',\n\ttemplateUrl: './structure.dialog-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogColumnManagerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-dialog-column-manager';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, HermesSingle, Warehouse } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\n\n@Injectable()\nexport abstract class SchemaWarehouse implements Warehouse {\n\n\tabstract onTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onceTheme(schemaId: SchemaReadModelRootId): HermesSingle<SchemaTheme>;\n\n\tabstract onHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n\tabstract onCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass>;\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.fabricDialogService.open({\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tcomponent: StructureDialogColumnManagerComponent,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled: boolean = false;\n\n\tprivate readonly infoDialog: boolean = true;\n\n\tprivate readonly columnsManager: boolean = true;\n\n\tprivate readonly schemaManager: boolean = true;\n\n\tprivate readonly sourceSize: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-schema-manager-dialog]',\n\ttemplate: `\n\t\t<div gui-structure-schema-manager></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogSchemaManagerComponent extends PureComponent {\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-pr-10');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-schema-manager-dialog';\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.fabricDialogService.open({\n\t\t\tinjector: injector,\n\t\t\tcomponent: StructureDialogSchemaManagerComponent\n\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from '../../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from '../../../core/api/panel/info/structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-panel]',\n\ttemplateUrl: './structure.info-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.sourceWarehouse.onPreparedEntities(this.structureId),\n\t\t\t(preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t}\n\t\t);\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open({ component: this.infoModal });\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager]',\n\ttemplate: `\n\n\t\t<ol class=\"gui-p-0 gui-my-4 gui-mx-0 gui-list-none gui-overflow-auto\">\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\"\n\t\t\t\tclass=\"gui-p-6 gui-cursor-pointer\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.compositionWarehouse.onAllColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandInvoker.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandInvoker.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-menu-column-manager]',\n\ttemplateUrl: './structure.menu-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureMenuColumnManagerComponent extends PureComponent {\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-menu-column-manager';\n\t}\n}\n","import { ChangeDetectorRef, Directive, ElementRef } from '@angular/core';\n\nimport { StaticComponent } from './static-component';\n\n@Directive()\nexport abstract class IconComponent extends StaticComponent {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t\tthis.addClassToHost('gui-icon');\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-icon]',\n\ttemplateUrl: './structure.info-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-icon';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/api/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring/row-coloring';\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../structure/core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager]',\n\ttemplateUrl: './structure.schema-manger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends SmartComponent implements OnInit {\n\n\tcoloring: Array<GuiSelectOption> = Object.keys(SchemaRowColoring)\n\t\t\t\t\t\t\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t\t\t\t\t\t\t .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t\t value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t name: value\n\t\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t\t });\n\n\tthemes: Array<GuiSelectOption> = Object.keys(SchemaTheme)\n\t\t\t\t\t\t\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t\t\t\t\t\t\t   .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t   .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t\t\t   value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t   name: value\n\t\t\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t\t\t   });\n\n\tselectedRowColoring: GuiSelectOption;\n\n\tselectedTheme: GuiSelectOption;\n\n\tverticalGrid: boolean;\n\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.schemaWarehouse.onRowColoring(this.schemaReadModelRootId),\n\t\t\t(rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = {\n\t\t\t\t\tvalue: SchemaRowColoring[rowColoring],\n\t\t\t\t\tname: SchemaRowColoring[rowColoring]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.schemaWarehouse.onTheme(this.schemaReadModelRootId),\n\t\t\t(schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = {\n\t\t\t\t\tvalue: SchemaTheme[schemaTheme],\n\t\t\t\t\tname: SchemaTheme[schemaTheme]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.schemaWarehouse.onVerticalGrid(this.schemaReadModelRootId),\n\t\t\t(verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.schemaWarehouse.onHorizontalGrid(this.schemaReadModelRootId),\n\t\t\t(horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t}\n\t\t);\n\n\t}\n\n\ttoggleTheme(theme: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setTheme(this.toTheme(theme.value), this.schemaReadModelRootId, this.structureId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setRowColoring(this.toRowColoring(schemaRowColoring.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager';\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.NONE;\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager-icon]',\n\ttemplateUrl: './structure.schema-manager-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSchemaManagerIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\n\t\t<h3>Active filters</h3>\n\n\t\t<div gui-active-filter-list></div>\n\n\t\t<div>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.fabricDialogService.open({\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tcomponent: ActiveFilterMenuComponent,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n@Component({\n\tselector: 'div[gui-filter-icon]',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Optional, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldModel } from './field.model';\n\n\n@Injectable()\nexport abstract class FieldWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onFields(structureId: StructureId): HermesObservable<ReadonlyArray<FieldModel>>;\n\n\tabstract findFields(structureId: StructureId): Optional<ReadonlyArray<FieldModel>>;\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldModel } from '../../../field/core/api/field.model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeCollectionModel } from '../../core/api/type/filter-type-collection.model';\nimport { FilterTypeModel } from '../../core/api/type/filter-type.model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterModel } from '../../core/api/active/active-filter.model';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { FilterId } from '../../core/api/filter.id';\n\n\n@Component({\n\tselector: 'div[gui-filter-menu]',\n\ttemplateUrl: './filter-menu.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldModel;\n\n\tfields: Array<FieldModel> = [];\n\n\tfilterTypeMap: FilterTypeCollectionModel;\n\n\tfilterTypes: Array<FilterTypeModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterModel> = [];\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandInvoker: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.filterWarehouse.onFilterTypes(this.structureId),\n\t\t\t(filterTypeMap: FilterTypeCollectionModel) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.fieldWarehouse.onFields(this.structureId),\n\t\t\t(fieldReadModels: Array<FieldModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t}\n\t\t);\n\t}\n\n\tonFieldSelect(field: FieldModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.reRender();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.reRender();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandInvoker.removeAll(this.structureId);\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandInvoker.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonRemovedFilter(filterId: FilterId): void {\n\t\tevent.preventDefault();\n\t\tthis.filterCommandInvoker.remove(filterId, this.structureId);\n\t}\n\n\tremoveFilter(): void {\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.reRender();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu';\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService, FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { filterContainerToken } from '../../core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../core/api/config/filter-container-ref';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ActiveFilterModel } from '../../core/api/active/active-filter.model';\n\n@Component({\n\tselector: 'div[gui-filter-menu-trigger]',\n\ttemplateUrl: './filter-menu-trigger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstyleUrls: [\n\t\t'../style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent extends SmartComponent implements OnInit {\n\n\tactiveFiltersExist: boolean = false;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: ReadonlyArray<ActiveFilterModel>) => {\n\t\t\t\tthis.activeFiltersExist = activeFilters.length > 0;\n\t\t\t}\n\t\t);\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.fabricDialogService.open({ component: FilterMenuComponent, injector: this.injector });\n\t\t// this.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-trigger';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-column-selector][columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent extends PureComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-selector';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeModel } from '../../../core/api/type/filter-type.model';\nimport { FilterTypeId } from '../../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-filter-type-selector][filterTypes]',\n\ttemplateUrl: './filter-type-selector.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tfilterTypes: ReadonlyArray<FilterTypeModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tfilterTypesAsOptions: ReadonlyArray<GuiSelectOption> = [];\n\n\tdisabled = true;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<FilterTypeSelectorComponent>) {\n\n\t\tthis.ifChanged(changes.filterTypes, () => {\n\n\t\t\tthis.filterTypesAsOptions = this.filterTypes.map((filter) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: filter.getId().toString(),\n\t\t\t\t\tvalue: filter.getName()\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.disabled = this.filterTypesAsOptions.length === 0;\n\t\t});\n\t}\n\n\tonSelectChange(option: GuiSelectOption): void {\n\n\t\tconst filterType = this.filterTypes.find((filterType: FilterTypeModel) => {\n\t\t\treturn filterType.getId().toString() === option.name;\n\t\t});\n\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-type-selector';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-filter-value]',\n\ttemplateUrl: './filter-value.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterValueComponent extends SmartComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly formBuilder: FormBuilder) {\n\t\tsuper(detector, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-value';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldModel } from '../../../../field/core/api/field.model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { ifChanged } from '../../../../../common/cdk/component/check.input';\n\n@Component({\n\tselector: 'div[gui-field-selector][fields]',\n\ttemplate: `\n\t\t<gui-select (optionChanged)=\"onFieldSelected($event)\"\n\t\t\t\t\t[options]=\"fieldsAsOptions\"\n\t\t\t\t\t[placeholder]=\"'Select column'\">\n\t\t</gui-select>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldModel>();\n\n\tfieldsAsOptions: Array<GuiSelectOption>;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<FieldSelectorComponent>) {\n\n\t\tifChanged(changes.fields, () => {\n\t\t\tthis.fieldsAsOptions = this.fields.map((field) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: field.getFieldId().toString(),\n\t\t\t\t\tvalue: field.getName()\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\tonFieldSelected(fieldId: GuiSelectOption): void {\n\t\tconst field = this.fields.find((field: FieldModel) => field.getFieldId().toString() === fieldId.name);\n\n\t\tthis.fieldSelected.emit(field);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-field-selector';\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'FilterToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FilterConfig } from '../../api/config/filter.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filter/quick-filters.config';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { Entity } from '@generic-ui/hermes';\n\nexport class Filter extends Entity<FilterId> {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tsuper(filterId);\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/config/filter.config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { FieldEntity } from '../../../../field/core/domain/field/field.entity';\nimport { FilterTypeId } from './filter-type.id';\nimport { EntityId } from '@generic-ui/hermes';\n\nexport abstract class BaseFilterType<T> extends EntityId<FilterTypeId> {\n\n\t// private readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t\t// this.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: FieldEntity, value: T): boolean;\n\n\t// getId(): FilterTypeId {\n\t// \treturn this.filterTypeId;\n\t// }\n\n\ttoString(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: FieldEntity, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: FieldEntity, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { FieldEntity } from '../../../../../../field/core/domain/field/field.entity';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: FieldEntity, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class FilterTypeId extends EntityId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FieldEntity } from '../../../../field/core/domain/field/field.entity';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeModel } from '../../api/type/filter-type.model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<FieldEntity>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (const fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<FieldEntity>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: FieldEntity): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, Array.from(filterTypesFromDataType));\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (const filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class FilterId extends EntityId<string> {\n\n\tconstructor(filterId: string) {\n\t\tsuper(filterId);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFieldName(): string {\n\t\treturn this.fieldName;\n\t}\n\n\tgetFilterTypeName(): string {\n\t\treturn this.filterTypeName;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { FieldEntity } from '../../../field/core/domain/field/field.entity';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeModel } from '../api/type/filter-type.model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from './filter.id-generator';\nimport { ActiveFilterModel } from '../api/active/active-filter.model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, FieldEntity>): ReadonlyArray<ActiveFilterModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<FieldEntity>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, FieldEntity>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = Array.from(entities);\n\n\t\tfor (const filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class QuickFilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(QuickFilterEnabledArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledArchive } from './quick-filter-enabled.archive';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class FilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(FilterEnabledArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledArchive } from './filter-enabled.archive';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private readonly filterEnabledArchive: FilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.filterEnabledArchive.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeModel } from './filter-type.model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeCollectionModel {\n\n\tprivate readonly map: Map<string, Array<FilterTypeModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeModel> {\n\t\tconst result = this.map.get(fieldId.toString());\n\n\t\tif (result === undefined) {\n\t\t\treturn [];\n\t\t} else {\n\t\t\treturn result;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeCollectionModel } from '../../api/type/filter-type-collection.model';\n\n@Injectable()\nexport class FilterTypeArchive extends AggregateArchive<FilterTypeCollectionModel> {\n\n\tstatic readonly default = new FilterTypeCollectionModel(new Map());\n\n\tconstructor() {\n\t\tsuper(FilterTypeArchive.default);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeModel } from '../../../api/type/filter-type.model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeModel>>) {\n\t\tsuper(aggregateId, map, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FilterTypeArchive } from './filter-type.archive';\nimport { FilterTypeCollectionModel } from '../../api/type/filter-type-collection.model';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeModel } from '../../api/type/filter-type.model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeArchive: FilterTypeArchive) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeArchive.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeCollectionModel(map));\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFilterModel } from '../../api/active/active-filter.model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterModel>) {\n\t\tsuper(structureId, filters, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterModel } from '../../api/active/active-filter.model';\n\n@Injectable()\nexport class ActiveFilterArchive extends AggregateArchive<ReadonlyArray<ActiveFilterModel>> {\n\n\tstatic readonly default: ReadonlyArray<ActiveFilterModel> = [];\n\n\tconstructor() {\n\t\tsuper(ActiveFilterArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterArchive } from './active-filter.archive';\nimport { ActiveFilterModel } from '../../api/active/active-filter.model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tconst activeFilters: ReadonlyArray<ActiveFilterModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, map, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueModel } from './unique-value.model';\n\nexport class UniqueValueCollectionModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (const key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValueCollectionModel } from '../../api/unique/unique-value-collection.model';\n\n@Injectable()\nexport class UniqueValueCollectionArchive extends AggregateArchive<UniqueValueCollectionModel> {\n\n\tstatic readonly default = new UniqueValueCollectionModel(new Map());\n\n\tconstructor() {\n\t\tsuper(UniqueValueCollectionArchive.default);\n\t}\n\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValueCollectionArchive } from './unique-value-collection.archive';\nimport { UniqueValueCollectionModel } from '../../api/unique/unique-value-collection.model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueModel } from '../../api/unique/unique-value.model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValueCollectionArchive) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tconst uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tconst uniqueValues = new UniqueValueCollectionModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FieldEntity } from '../field/field.entity';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<FieldEntity>) {\n\t\tsuper(aggregateId, { fieldConfigs, fields }, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<FieldEntity> {\n\t\treturn this.fields;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { FilterConfig } from '../api/config/filter.config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigFilterCommand } from './config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { AddFilterCommand } from './core/add/add-filter.command';\nimport { RemoveAllFiltersCommand } from './core/remove-all/remove-all-filters.command';\nimport { FilterId } from '../api/filter.id';\nimport { RemoveFilterCommand } from './core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from './unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from './unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from './unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from './unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from './unique/unselect/unselect-unique-filter.command';\nimport { Injectable } from '@angular/core';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n@Injectable()\nexport class FilterDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetConfig(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremove(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../domain-read/quick-filter/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../domain-read/config/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../domain-read/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../domain-read/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../domain-read/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { FilterDispatcher } from './filter.dispatcher';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory,\n\t\tFilterDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { FilterWarehouse } from '../api/filter.warehouse';\nimport { FilterEnabledArchive } from './config/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from './quick-filter/quick-filter-enabled.archive';\nimport { FilterTypeArchive } from './type/filter-type.archive';\nimport { UniqueValueCollectionArchive } from './unique/unique-value-collection.archive';\nimport { ActiveFilterArchive } from './active/active-filter.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { hermesMap, HermesObservable, HermesSingle, Optional, singleFromObservable } from '@generic-ui/hermes';\nimport { FilterTypeCollectionModel } from '../api/type/filter-type-collection.model';\nimport { ActiveFilterModel } from '../api/active/active-filter.model';\nimport { UniqueValueCollectionModel } from '../api/unique/unique-value-collection.model';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeModel } from '../api/type/filter-type.model';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\n\n@Injectable()\nexport class FilterDomainWarehouse extends FilterWarehouse {\n\n\tconstructor(private readonly filterEnabledArchive: FilterEnabledArchive,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledArchive,\n\t\t\t\tprivate readonly filterTypeArchive: FilterTypeArchive,\n\t\t\t\tprivate readonly uniqueValuesArchive: UniqueValueCollectionArchive,\n\t\t\t\tprivate readonly activeFilterArchive: ActiveFilterArchive) {\n\t\tsuper();\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.filterEnabledArchive.on(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureQuickFilterRepository.on(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): HermesObservable<FilterTypeCollectionModel> {\n\t\treturn this.filterTypeArchive.on(structureId);\n\t}\n\n\tonFilterTypesForFieldId(fieldId: FieldId, structureId: StructureId): HermesObservable<ReadonlyArray<FilterTypeModel>> {\n\t\treturn this.onFilterTypes(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((map: FilterTypeCollectionModel) => {\n\t\t\t\t\t\t   return map.getFilterTypes(fieldId);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonActiveFilters(structureId: StructureId): HermesObservable<ReadonlyArray<ActiveFilterModel>> {\n\t\treturn this.activeFilterArchive.on(structureId);\n\t}\n\n\tfindFilters(structureId: StructureId): Optional<ReadonlyArray<ActiveFilterModel>> {\n\t\treturn this.activeFilterArchive.find(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): HermesObservable<UniqueValueCollectionModel> {\n\t\treturn this.uniqueValuesArchive.on(structureId);\n\t}\n\n\tonceFilterTypeId(fieldId: FieldId, filterTypeName: string, structureId: StructureId): HermesSingle<Optional<FilterTypeId>> {\n\t\treturn singleFromObservable(\n\t\t\tthis.onFilterTypes(structureId)\n\t\t\t\t.pipe(\n\t\t\t\t\thermesMap((map: FilterTypeCollectionModel) => {\n\t\t\t\t\t\tconst filterTypes = map.getFilterTypes(fieldId);\n\n\t\t\t\t\t\tconst filterType = filterTypes.find((fieldType) => fieldType.getName() === filterTypeName);\n\n\t\t\t\t\t\tif (filterType === undefined) {\n\t\t\t\t\t\t\treturn Optional.empty();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn Optional.of(filterType.getId());\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t);\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { FilterCommandInvoker } from '../api/filter.command-invoker';\nimport { FilterConfig } from '../api/config/filter.config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FilterId } from '../api/filter.id';\nimport { UniqueValueId } from './unique/unique-value-id';\nimport { FilterDispatcher } from './filter.dispatcher';\n\n\n@Injectable()\nexport class FilterDomainCommandInvoker extends FilterCommandInvoker {\n\n\tconstructor(private readonly filterDispatcher: FilterDispatcher) {\n\t\tsuper();\n\t}\n\n\tsetConfig(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.filterDispatcher.setConfig(config, structureId);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.filterDispatcher.add(fieldId, filterTypeId, value, structureId);\n\t}\n\n\tremoveAll(structureId: StructureId): void {\n\t\tthis.filterDispatcher.removeAll(structureId);\n\t}\n\n\tremove(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.filterDispatcher.remove(filterId, structureId);\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.filterDispatcher.selectAllUniqueFilter(fieldId, structureId);\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.filterDispatcher.unselectAllUniqueFilter(fieldId, structureId);\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.filterDispatcher.selectUniqueFilter(fieldId, uniqueValueId, structureId);\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.filterDispatcher.unselectUniqueFilter(fieldId, uniqueValueId, structureId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeArchive } from '../domain-read/type/filter-type.archive';\nimport { ActiveFilterArchive } from '../domain-read/active/active-filter.archive';\nimport { UniqueValueCollectionArchive } from '../domain-read/unique/unique-value-collection.archive';\nimport { FilterEnabledArchive } from '../domain-read/config/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from '../domain-read/quick-filter/quick-filter-enabled.archive';\nimport { FilterDomainWarehouse } from '../domain-read/filter.domain-warehouse';\nimport { FilterDomainCommandInvoker } from '../domain/filter.domain-command-invoker';\nimport { FilterIntegration } from '../api-integration/filter.integration';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: FilterCommandInvoker,\n\t\t\tuseClass: FilterDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: FilterWarehouse,\n\t\t\tuseClass: FilterDomainWarehouse\n\t\t},\n\t\tFilterTypeArchive,\n\t\tActiveFilterArchive,\n\t\tUniqueValueCollectionArchive,\n\t\tFilterEnabledArchive,\n\t\tQuickFilterEnabledArchive,\n\t\tFilterIntegration\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterModel } from '../../core/api/active/active-filter.model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-active-filter-list]',\n\ttemplateUrl: './active-filter-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterModel> = [];\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\t}\n\n\tremoveFilter(filter: ActiveFilterModel): void {\n\t\tthis.filterCommandDispatcher.remove(filter.getFilterId(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-filter-list';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Injectable()\nexport abstract class SearchWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onSearchEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPhrase(structureId: StructureId): HermesObservable<string>;\n\n\tabstract onHighlight(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPlaceholder(structureId: StructureId): HermesObservable<string>;\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'div[gui-active-search]',\n\ttemplateUrl: './active-search.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t}\n\t\t);\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-search';\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\nimport { ActiveFilterListComponent } from './active-filter-list.component';\nimport { ActiveSearchComponent } from './search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tActiveFilterListComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tActiveFilterListComponent\n\t]\n})\nexport class ActiveFilterListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() filterApiModule: FilterApiModule) {\n\t// \tsuper();\n\t// \tif (filterApiModule === null) {\n\t// \t\tthrow new Error('FilterApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { ActiveFilterModel } from '../../../core/api/active/active-filter.model';\nimport { FilterId } from '../../../core/api/filter.id';\n\n@Component({\n\tselector: 'div[gui-filter-menu-active-filters][activeFilters]',\n\ttemplate: `\n\n\t\t<div *ngIf=\"activeFilters && activeFilters.length > 0\"\n\t\tclass=\"\"\n\t\tstyle=\"border-top: 1px dashed; border-bottom: 1px dashed\">\n\n\t\t\t<h4>Active filters:</h4>\n\n\t\t\t<div *ngFor=\"let filter of activeFilters\"\n\t\t\t\t class=\"gui-flex gui-justify-between \">\n\n\t\t\t\t<div>\n\t\t\t\t<span [gui-tooltip]=\"'Column name ' + filter.getFieldName()\">\n\t\t\t\t\t{{filter.getFieldName()}}\n\t\t\t\t</span>\n\n\t\t\t\t\t<span [gui-tooltip]=\"'Filter type ' + filter.getFilterTypeName()\">\n\t\t\t\t\t{{filter.getFilterTypeName()}}\n\t\t\t\t</span>\n\n\t\t\t\t\t<span [gui-tooltip]=\"'Value ' + filter.getValue()\">\n\t\t\t\t\t{{filter.getValue()}}\n\t\t\t\t</span>\n\t\t\t\t</div>\n\n\n\t\t\t\t<button (click)=\"remove(filter)\">Remove</button>\n\t\t\t</div>\n\n\t\t</div>\n\n\t\t<br/>\n\t\t<br/>\n\t\t<br/>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuActiveFiltersComponent extends PureComponent {\n\n\t@Input()\n\tactiveFilters: Array<ActiveFilterModel>;\n\n\t@Output()\n\tremovedFilter = new EventEmitter<FilterId>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-py-8');\n\t}\n\n\tremove(filter: ActiveFilterModel): void {\n\t\tthis.removedFilter.emit(filter.getFilterId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-active-filters';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './value/filter-value.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { ActiveFilterListModule } from '../active-filters/active-filter-list.module';\nimport { FilterMenuActiveFiltersComponent } from './active-filters/filter-menu-active-filters.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule,\n\t\tFilterApiModule,\n\t\tActiveFilterListModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tFieldSelectorComponent,\n\t\tFilterMenuActiveFiltersComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() filterApiModule: FilterApiModule) {\n\t// \tsuper();\n\t// \tif (filterApiModule === null) {\n\t// \t\tthrow new Error('FilterApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { ActiveFilterListModule } from '../../../filter/feature/active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\t\tActiveFilterListModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from '../../../core/api/panel/info/structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source/feature/counter/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate static readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate static readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate static readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate static readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate static readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate static readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate static readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate static readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate static readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.classModifier = new ClassModifier();\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tconst diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, SchemaCssClassManager.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, SchemaCssClassManager.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn SchemaCssClassManager.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn SchemaCssClassManager.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn SchemaCssClassManager.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).add(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).remove(cssClassName);\n\t\t}\n\t}\n\n}\n","import { CellEditConfig } from '../../api/edit/cell-edit.config';\n\nexport class CellEditorManager {\n\n\tprivate readonly enabled: boolean = false;\n\n\tprivate readonly rowEdit: (value: any, item: any, index: number) => boolean = () => true;\n\n\tprivate readonly cellEdit: (value: any, item: any, index: number) => boolean = () => true;\n\n\tconstructor(config: CellEditConfig) {\n\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.rowEdit !== undefined) {\n\t\t\tthis.rowEdit = config.rowEdit;\n\t\t}\n\n\t\tif (config.cellEdit !== undefined) {\n\t\t\tthis.cellEdit = config.cellEdit;\n\t\t}\n\t}\n\n\tisEnabled(value: any, item: any, index: number): boolean {\n\t\treturn this.enabled && this.rowEdit(value, item, index) && this.cellEdit(value, item, index);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { CellEditorManager } from '../../core/domain/edit/cell-editor.manager';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends AggregateArchive<CellEditorManager> {\n\n\tstatic default = new CellEditorManager({ enabled: false });\n\n\tconstructor() {\n\t\tsuper(StructureCellEditArchive.default);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export class EditedItemModel {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, { beforeItem, afterItem }, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { EditedItemModel } from './edited-item.model';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): HermesObservable<EditedItemModel> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvents([\n\t\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t\t   ]\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getSourceItem(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getSourceItem();\n\n\t\t\t\t\t\t   return new EditedItemModel(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\n@Injectable()\nexport abstract class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onColumnsChanged(compositionId?: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent>;\n\n\tabstract onContainerWidthChanged(compositionId?: CompositionReadModelRootId): HermesObservable<number>;\n\n}\n","import { StructureId } from '../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, { selectedRows, allSelected, allUnselected }, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, hermesFilter, hermesMap, HermesObservable, HermesSubject, hermesSwitchMap, hermesTake } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SelectedRow } from './row-selected/selected-row';\nimport { SelectedRowChangedEvent } from '../domain/selected-row-changed.event';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly subject$ = new HermesSubject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvents([\n\t\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t\t]\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesSwitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   hermesTake(1),\n\t\t\t\t\t\t\t\t   hermesMap((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map<string, OriginItemEntity>();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   const item: OriginItemEntity = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getSourceItem(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.subject$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): HermesObservable<ReadonlyArray<SelectedRow>> {\n\t\treturn this.subject$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\nimport { SchemaId } from '../domain/schema.id';\n\n@Injectable()\nexport abstract class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport abstract class FieldCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract initFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { CommandDispatcher, DomainEvent, DomainEventBus, hermesFilter, hermesTake } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FieldEntity } from '../../../../field/core/domain/field/field.entity';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureGateway } from '../structure.gateway';\nimport { ColumnAutoConfigurator } from '../../../../../composition/core/api/column/auto/column-auto.configurator';\n\n\nexport class StructureColumnInputHandler {\n\n\tprivate columns: ReadonlyArray<ColumnConfig | MultiColumnConfig>;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly columnAutoConfigurator: ColumnAutoConfigurator,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(changes: NgChanges<StructureGateway> | any): void {\n\n\t\tlet config: ReadonlyArray<ColumnConfig | MultiColumnConfig> = [];\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tconfig = changes.columns.currentValue;\n\t\t\tthis.columns = config;\n\t\t} else {\n\n\t\t\tif (this.columns === undefined && changes.source !== undefined && changes.source !== null) {\n\t\t\t\tconfig = this.columnAutoConfigurator.configure(changes.source.currentValue);\n\t\t\t\tthis.columns = config;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(config);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvents([\n\t\t\t\t\tFieldsInitedEvent as any\n\t\t\t\t]\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: ReadonlyArray<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tlet columnConfigs: Array<ColumnConfig> = [];\n\n\t\tconst groupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs = columnConfigs.concat((config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<FieldEntity>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: FieldEntity) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<FieldEntity>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../row-selected/row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { AggregateArchive, AggregateId, hermesFilter, HermesObservable, HermesSingle, singleFromObservable } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StructureInitialValuesReadyArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(StructureInitialValuesReadyArchive.default);\n\t}\n\n\ton(aggregateId: AggregateId): HermesObservable<boolean> {\n\t\treturn super.on(aggregateId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(v => v)\n\t\t\t\t\t);\n\t}\n\n\tonce(aggregateId: AggregateId): HermesSingle<boolean> {\n\t\treturn singleFromObservable(this.on(aggregateId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { ColumnConfig } from '../column.config';\n\n@Injectable()\nexport abstract class ColumnAutoConfigurator {\n\n\tabstract configure(source: ReadonlyArray<any>): ReadonlyArray<ColumnConfig>;\n\n}\n","import { ChangeDetectorRef, Directive, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { EditedItemModel } from '../../../source/core/api/edit/edited-item.model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/edit/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../formation/core/api/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { RowSelectEnabledRepository } from '../../../formation/core/api/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureInfoPanelConfigService } from '../../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelectionTypeArchive } from '../../../formation/core/api/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../formation/core/api/formation.command-invoker';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { CellEditConfig } from '../../core/api/edit/cell-edit.config';\nimport { ColumnAutoConfigurator } from '../../../../composition/core/api/column/auto/column-auto.configurator';\nimport { ifChanged } from '../../../../common/cdk/component/check.input';\n\n\n/** @internal */\n@Directive()\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/** *********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tsource: Array<any> = [];\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig>;\n\n\t// @Input()\n\t// filtering: boolean | FilterConfig;\n\n\t// @Input()\n\t// quickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean | CellEditConfig;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\n\t/** *********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditedItemModel> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\telementRef: ElementRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tprivate readonly columnAutoConfigurator: ColumnAutoConfigurator,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandInvoker: StructureCommandInvoker,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandInvoker: SortingCommandInvoker,\n\t\tprotected searchCommandInvoker: SearchCommandInvoker,\n\t\tprotected fieldCommandInvoker: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandInvoker: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventRepository: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationFacade,\n\t\tprotected structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory,\n\t\t\tcolumnAutoConfigurator, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureGateway>) {\n\n\t\tifChanged(changes.editMode, () => {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t});\n\n\t\tifChanged(changes.cellEditing, () => {\n\n\t\t\tlet editingConfig;\n\n\t\t\tif (typeof this.cellEditing === 'boolean') {\n\t\t\t\teditingConfig = {\n\t\t\t\t\tenabled: this.cellEditing\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\teditingConfig = this.cellEditing;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setCellEdit(editingConfig, this.structureId);\n\t\t});\n\n\t\tifChanged(changes.width, (width) => {\n\t\t\tthis.compositionCommandDispatcher.setWidth(width, this.compositionId);\n\t\t});\n\n\t\tifChanged(changes.theme, () => {\n\t\t\tthis.schemaCommandInvoker.setTheme(this.theme, this.schemaId, this.structureId);\n\t\t});\n\n\t\tifChanged(changes.rowHeight, () => {\n\t\t\tthis.structureCommandInvoker.setRowHeight(this.rowHeight, this.structureId);\n\t\t});\n\n\t\tifChanged(changes.autoResizeWidth, () => {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth, this.compositionId);\n\t\t});\n\n\t\t/**\n\t\t * Columns\n\t\t */\n\t\tthis.structureColumnInputHandler.handle(changes);\n\n\t\tifChanged(changes.maxHeight, () => {\n\t\t\tthis.structureCommandInvoker.setContainerHeight(this.maxHeight, this.structureId);\n\t\t});\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tifChanged(changes.source, () => {\n\t\t\tthis.sourceCommandService.setOrigin(this.source, this.structureId);\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionEventRepository\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventRepository\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.subscribe((values: EditedItemModel) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.on()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onThemeChanged(this.schemaId),\n\t\t\tthis.themeChanged\n\t\t);\n\n\t\tthis.componentInitialized();\n\t}\n\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCellEditArchive } from '../../feature/edit/structure.cell-edit.archive';\nimport { CellEditorManager } from '../domain/edit/cell-editor.manager';\n\n\n@Injectable()\nexport class StructureWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.on(structureId);\n\t}\n\n\tonEditManager(structureId: StructureId): HermesObservable<CellEditorManager> {\n\t\treturn this.structureCellEditArchive\n\t\t\t\t   .on(structureId);\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HermesObservable, HermesSubject } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new HermesSubject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): HermesObservable<void> {\n\t\treturn this.closeAll$.toObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { Directive } from '@angular/core';\n\n@Directive()\nexport abstract class DynamicallyCreatedComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tif (this.hasInputs()) {\n\t\t\tthis.throwError('it cannot have properties annotated with @Inputs().');\n\t\t}\n\t}\n\n\tprivate hasInputs(): boolean {\n\n\t\treturn false;\n\n\t\t// Works with Angular 12\n\t\t// return !this.isEmpty((this.constructor as any).ɵcmp.inputs);\n\t}\n\n\tprivate isEmpty(obj: Object) {\n\t\tfor (const key in obj) {\n\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a DynamicallyCreatedComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../formation/core/api/row-selected/selected-row';\nimport { DynamicallyCreatedComponent } from '../../../../../common/cdk/component/dynamically-created-component';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\n\n@Component({\n\tselector: 'div[gui-row-detail]',\n\ttemplateUrl: './structure.row-detail-view.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent extends DynamicallyCreatedComponent implements OnInit {\n\n\tselectedRowValue: OriginItemEntity;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private readonly item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private readonly template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getSource(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getSource();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../formation/core/api/formation.event-repository';\nimport { StructureId } from '../../../core/api/structure.id';\n\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../formation/core/api/row-selected/selected-row';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open({\n\t\t\t\t\tappendToElement: this.elementRef,\n\t\t\t\t\tcomponent: StructureRowDetailViewComponent,\n\t\t\t\t\tinjector: injector\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly titlePanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Title Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureTitlePanelConfigArchive.titlePanelConfig });\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly footerPanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Footer Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureFooterPanelConfigArchive.footerPanelConfig });\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Sorter } from '../sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<Sorter>): void {\n\n\t\tconst directions = sorters.map((sorter: Sorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Sorter } from '../sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<Sorter>): void {\n\n\t\tconst directions = sorters.map((sorter: Sorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SortingConfig } from '../api/sorting-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetSortingCommand } from './set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { ToggleSortCommand } from './toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from './order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { SortingDispatcher } from './sorting.dispatcher';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSortingDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SortingConfig } from '../api/sorting-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../api/sorting.command-invoker';\nimport { SortingDispatcher } from './sorting.dispatcher';\n\n@Injectable()\nexport class SortingDomainCommandInvoker extends SortingCommandInvoker {\n\n\tconstructor(private readonly sortingDispatcher: SortingDispatcher) {\n\t\tsuper();\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId): void {\n\t\tthis.sortingDispatcher.setSortingConfig(config, structureId);\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.sortingDispatcher.toggleSort(fieldId, compositionId, structureId);\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.sortingDispatcher.setSortOrder(fieldId, sortOrder, compositionId, structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\nimport { SortingDomainCommandInvoker } from '../domain/sorting.domain-command-invoker';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SortingCommandInvoker,\n\t\t\tuseClass: SortingDomainCommandInvoker\n\t\t}\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() sortingApiModule: SortingApiModule) {\n\t// \tsuper();\n\t// \tif (sortingApiModule === null) {\n\t// \t\tthrow new Error('SortingApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, { phrase, initial }, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, origin, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../core/api/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, values, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, preparedItems, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureSummariesChangedAggregateEvent } from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSummariesChangedAggregateEvent') {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(\n\t\t\t\tstructureSummariesChangedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSummariesChangedAggregateEvent.getSummaries()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getAggregateId(),\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getPreparedItems()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { FieldEntity } from '../../../field/core/domain/field/field.entity';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<FieldEntity> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<FieldEntity>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst searchableFields =\n\t\t\tfields.filter((field: FieldEntity) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tconst searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: FieldEntity) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchHighlightArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly HIGHLIGHTING = true;\n\n\tconstructor() {\n\t\tsuper(SearchHighlightArchive.HIGHLIGHTING);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive extends AggregateArchive<string> {\n\n\tstatic readonly PLACEHOLDER = 'Search...';\n\n\tconstructor() {\n\t\tsuper(SearchPlaceholderArchive.PLACEHOLDER);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './phrase/set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.searchHighlightArchive.next(structureId, config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.searchPlaceholderArchive.next(structureId, config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPhraseArchive extends AggregateArchive<string> {\n\n\tstatic readonly SEARCH_PHRASE = '';\n\n\tconstructor() {\n\t\tsuper(SearchPhraseArchive.SEARCH_PHRASE);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseArchive } from './search-phrase.archive';\nimport { SearchPhraseSetDomainEvent } from './set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private readonly searchPhraseRepository: SearchPhraseArchive) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.searchPhraseRepository.next(event.getAggregateId(), event.getPhrase());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchingEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly ENABLED = false;\n\n\tconstructor() {\n\t\tsuper(SearchingEnabledArchive.ENABLED);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingEnabledArchive } from './searching-enabled.archive';\n\nimport { ConfigSearchingSetEvent } from '../config/config-searching-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './phrase/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from './phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from './enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Injectable } from '@angular/core';\nimport { SearchWarehouse } from '../api/search.warehouse';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDomainWarehouse extends SearchWarehouse {\n\n\tconstructor(private readonly searchingEnabledArchive: SearchingEnabledArchive,\n\t\t\t\tprivate readonly searchPhraseArchive: SearchPhraseArchive,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\t}\n\n\tonSearchEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchingEnabledArchive.on(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPhraseArchive.on(structureId);\n\t}\n\n\tonHighlight(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchHighlightArchive.on(structureId);\n\t}\n\n\tonPlaceholder(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPlaceholderArchive.on(structureId);\n\t}\n\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { SearchPhraseSetDomainEvent } from '../domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { Injectable } from '@angular/core';\nimport { SearchEventRepository } from '../api/search.event-repository';\n\n@Injectable()\nexport class SearchDomainEventRepository extends SearchEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string> {\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   hermesMap((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   hermesFilter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../api/search.command-invoker';\n\n\n@Injectable()\nexport class SearchDomainCommandInvoker extends SearchCommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t\tsuper();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\nimport { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchDomainWarehouse } from '../domain-read/search.domain-warehouse';\nimport { SearchDomainEventRepository } from '../domain-read/search.domain-event-repository';\nimport { SearchDomainCommandInvoker } from '../domain/search.domain-command-invoker';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SearchCommandInvoker,\n\t\t\tuseClass: SearchDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SearchWarehouse,\n\t\t\tuseClass: SearchDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SearchEventRepository,\n\t\t\tuseClass: SearchDomainEventRepository\n\t\t},\n\n\t\tSearchPhraseArchive,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingEnabledArchive\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-search-icon]',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { StructureId } from '../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\nimport { fromRxJsObservable, HermesSubscription } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-search-bar]',\n\ttemplateUrl: './search.component.html',\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder: string;\n\n\tsearchingEnabled: boolean;\n\n\tsearchInputSubscription: HermesSubscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.subscribe(\n\t\t\tthis.searchWarehouse.onPlaceholder(this.structureId),\n\t\t\t(placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tconst controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-bar';\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tfromRxJsObservable(\n\t\t\t\tthis.searchForm\n\t\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t\t.valueChanges\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tdebounceTime(200)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tSearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldModel } from '../api/field.model';\n\n\n@Injectable()\nexport class FieldArchive extends AggregateArchive<ReadonlyArray<FieldModel>> {\n\n\tstatic readonly default: ReadonlyArray<FieldModel> = [];\n\n\tconstructor() {\n\t\tsuper(FieldArchive.default);\n\t}\n\n}\n","import { FieldId } from '../domain/field/field.id';\nimport { DataType } from '../domain/field/data/data-type';\n\n\nexport class FieldModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldModel } from '../../api/field.model';\nimport { FieldEntity } from '../../domain/field/field.entity';\n\n\n@Injectable()\nexport class FieldConverter {\n\n\tconvert(fields: Array<FieldEntity>): Array<FieldModel> {\n\t\treturn fields.map((field: FieldEntity) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: FieldEntity): FieldModel {\n\n\t\treturn new FieldModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { FieldEntity } from './field/field.entity';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldEntityFactory } from './field/field.entity-factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, FieldEntity>();\n\n\tconstructor(private readonly fieldFactory: FieldEntityFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): FieldEntity {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<FieldEntity> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, FieldEntity> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<FieldEntity> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.clear();\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<FieldEntity>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: FieldEntity): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n\n\tprivate clear(): void {\n\t\tthis.fields.clear();\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\nimport { Entity } from '@generic-ui/hermes';\n\n\nexport class FieldEntity extends Entity<FieldId> {\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tsuper(id);\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): FieldEntity {\n\t\treturn new FieldEntity(id, dataField, name);\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tconst valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; // (rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getSourceItem()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getSourceItem());\n\t\t} else {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity;\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tconst matcher = fieldConfig.matcher;\n\t\tlet sortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldEntityIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { FieldEntity } from './field.entity';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldEntityIdGenerator } from './field-entity-id.generator';\n\n\n@Injectable()\nexport class FieldEntityFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldEntityIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<FieldEntity> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new FieldEntity(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldEntityFactory } from './field/field.entity-factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldEntityFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldArchive } from '../field.archive';\nimport { FieldConverter } from './field.converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldArchive: FieldArchive,\n\t\t\t\tprivate fieldConverter: FieldConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldConverter.convert(event.getFields());\n\n\t\t\tthis.fieldArchive.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../api/field.config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { InitFieldsCommand } from './init/init-fields.command';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class FieldDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldEntityIdGenerator } from './field/field-entity-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldEntityFactory } from './field/field.entity-factory';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { FieldsInitedEventHandler } from '../domain-read/init/fields-inited.event-handler';\nimport { FieldDispatcher } from './field.dispatcher';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldEntityFactory,\n\t\tFieldEntityIdGenerator,\n\t\tDataFieldFactory,\n\t\tFieldDispatcher\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Optional } from '@generic-ui/hermes';\n\nimport { FieldArchive } from './field.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldModel } from '../api/field.model';\nimport { FieldWarehouse } from '../api/field.warehouse';\n\n@Injectable()\nexport class FieldDomainWarehouse extends FieldWarehouse {\n\n\tconstructor(private readonly fieldReadModelArchive: FieldArchive) {\n\t\tsuper();\n\t}\n\n\tonFields(structureId: StructureId): HermesObservable<ReadonlyArray<FieldModel>> {\n\t\treturn this.fieldReadModelArchive.on(structureId);\n\t}\n\n\tfindFields(structureId: StructureId): Optional<ReadonlyArray<FieldModel>> {\n\t\treturn this.fieldReadModelArchive.find(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldCommandInvoker } from '../api/field.command-invoker';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldDispatcher } from './field.dispatcher';\n\n\n@Injectable()\nexport class FieldDomainCommandInvoker extends FieldCommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly fieldDispatcher: FieldDispatcher) {\n\t\tsuper();\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId): void {\n\t\tthis.fieldDispatcher.initFields(fieldConfigs, structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldArchive } from '../domain-read/field.archive';\nimport { FieldConverter } from '../domain-read/init/field.converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\nimport { FieldDomainWarehouse } from '../domain-read/field.domain-warehouse';\nimport { FieldDomainCommandInvoker } from '../domain/field.domain-command-invoker';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: FieldCommandInvoker,\n\t\t\tuseClass: FieldDomainCommandInvoker\n\t\t},\n\n\t\tFieldArchive,\n\t\tFieldConverter,\n\t\t{\n\t\t\tprovide: FieldWarehouse,\n\t\t\tuseClass: FieldDomainWarehouse\n\t\t}\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() fieldApiModule: FieldApiModule) {\n\t// \tsuper();\n\t// \tif (fieldApiModule === null) {\n\t// \t\tthrow new Error('FieldApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class SourceIsLoadingModel {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SourceIsLoadingModel } from '../domain-read/source-is-loading.model';\nimport { SourceManager } from './core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): SourceIsLoadingModel {\n\t\treturn new SourceIsLoadingModel(aggregate.isLoading());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SetSourceLoadingEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\tsourceItem: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\tsourceItem: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.sourceItem = sourceItem;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetSourceItem(): any {\n\t\treturn this.sourceItem;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.sourceItem };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { FieldEntity } from '../../../../field/core/domain/field/field.entity';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../../../../formation/core/domain/core/formation.manager';\nimport { RowSelectToggleType } from '../../../../formation/core/domain/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = Array.from(this.entities);\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = Array.from(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: FieldEntity, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.sourceItem[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents = events.concat(this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents = events.concat(this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (const element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents = events.concat(this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents = events.concat(this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../api/row-selected/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tconst rows = Array.from(this.selectedRows);\n\t\t\tlet equal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation.manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../../../../formation/core/domain/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n};\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureSourceOriginArchive extends AggregateArchive<ReadonlyArray<any>> {\n\n\tstatic readonly default: ReadonlyArray<any> = [];\n\n\tconstructor() {\n\t\tsuper(StructureSourceOriginArchive.default);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginArchive } from './structure.source-origin.archive';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.next(event.getAggregateId(), origin);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructurePreparedItemsArchive extends AggregateArchive<ReadonlyArray<OriginItemEntity>> {\n\n\tstatic readonly default: ReadonlyArray<OriginItemEntity> = [];\n\n\tconstructor() {\n\t\tsuper(StructurePreparedItemsArchive.default);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetPreparedItems(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.find(structureId).getValueOrNullOrThrowError();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsArchive } from './structure.prepared-items.archive';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.next(event.getAggregateId(), preparedItems);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { hermesDistinctUntilChanged, hermesMap, HermesObservable, HermesSingle, singleFromObservable } from '@generic-ui/hermes';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\n\n\n@Injectable()\nexport class SourceDomainWarehouse extends SourceWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate readonly structurePreparedItemsRepository: StructurePreparedItemsArchive,\n\t\t\t\tprivate readonly structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t\tsuper();\n\t}\n\n\tfindEntities(structureId: StructureId): ReadonlyArray<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   hermesDistinctUntilChanged((ents1: ReadonlyArray<ItemEntity>, ents2: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((entities: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonceEntities(structureId: StructureId): HermesSingle<ReadonlyArray<ItemEntity>> {\n\t\treturn singleFromObservable(this.onEntities(structureId));\n\t}\n\n\tonOriginSize(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.on(structureId);\n\t}\n\n\tfindPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, fromRxJsObservable, hermesMap, hermesTake, toRxJsObservable } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { SelectedRow } from '../../../formation/core/api/row-selected/selected-row';\nimport { SourceCommandInvoker } from '../api/source.command-invoker';\n\n\n@Injectable()\nexport class SourceDomainCommandInvoker extends SourceCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void {\n\n\t\tconst itemId$ =\n\t\t\ttoRxJsObservable(\n\t\t\t\tthis.sourceReadModelService\n\t\t\t\t\t.onceEntities(structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesMap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t);\n\n\t\tconst fieldId$ = toRxJsObservable(\n\t\t\tthis.fieldWarehouse.onFields(structureId)\n\t\t);\n\n\t\tfromRxJsObservable(\n\t\t\tzip(itemId$, fieldId$)\n\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SourceConverter } from '../domain/source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './edit/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { SourceDomainWarehouse } from '../domain-read/source.domain-warehouse';\nimport { SourceDomainCommandInvoker } from '../domain/source.domain.command-invoker';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginArchive,\n\t\tStructurePreparedItemsArchive,\n\t\tSourceConverter,\n\n\t\t{\n\t\t\tprovide: SourceCommandInvoker,\n\t\t\tuseClass: SourceDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SourceWarehouse,\n\t\t\tuseClass: SourceDomainWarehouse\n\t\t},\n\t\tSourceEventService\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() sourceApiModule: SourceApiModule) {\n\t// \tsuper();\n\t// \tif (sourceApiModule === null) {\n\t// \t\tthrow new Error('SourceApiModule is required');\n\t// \t}\n\t// }\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, theme, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, rowColoring, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, verticalGrid, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, horizontalGrid, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaDomainEvent } from '../schema.domain-event';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, null, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../schema.aggregate';\nimport { SchemaId } from '../schema.id';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from './schema.aggregate';\nimport { SchemaId } from './schema.id';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract findById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends AggregateArchive<SchemaCssClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { SchemaTheme } from '../theme/schema-theme';\nimport { SchemaRowColoring } from '../row-coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.next(\n\t\t\t\taggregateId,\n\t\t\t\tnew SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring)\n\t\t\t);\n\t\t}\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends EventDrivenRepository<SchemaId, SchemaVerticalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n@Injectable()\nexport class SchemaThemeRepository extends EventDrivenRepository<SchemaId, SchemaThemeSetEvent, SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n@Injectable()\nexport class SchemaRowColoringRepository extends EventDrivenRepository<SchemaId, RowColoringSetEvent, SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends EventDrivenRepository<SchemaId, SchemaHorizontalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from './schema.key';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\tHermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\tHermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\tHermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(SchemaThemeRepository),\n\t\t\tHermesModule.registerDomainEventHandler(SchemaHorizontalGridRepository),\n\t\t\tHermesModule.registerDomainEventHandler(SchemaRowColoringRepository),\n\t\t\tHermesModule.registerDomainEventHandler(SchemaVerticalGridRepository),\n\t\t\tHermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { SchemaDispatcher } from './schema.dispatcher';\nimport { StructureCommandInvoker } from '../../../structure/core/api/structure.command-invoker';\nimport { FabricModalThemeService, Theme } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from '../api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { Injectable } from '@angular/core';\nimport { SchemaCommandInvoker } from '../api/schema.command-invoker';\n\n\n@Injectable()\nexport class SchemaDomainCommandInvoker extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly fabricModalThemeService: FabricModalThemeService) {\n\t\tsuper();\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme,\n\t\t\t schemaId: SchemaReadModelRootId,\n\t\t\t structureId: StructureId\n\t): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\t\tthis.fabricModalThemeService.changeTheme(this.toFabricTheme(theme)); // TODO github #2162\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\t\t}\n\t}\n\n\tprivate toFabricTheme(schemaTheme: SchemaTheme): Theme {\n\n\t\tswitch (schemaTheme) {\n\t\t\tcase SchemaTheme.DARK: {\n\t\t\t\treturn Theme.DARK;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.FABRIC: {\n\t\t\t\treturn Theme.FABRIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.GENERIC: {\n\t\t\t\treturn Theme.GENERIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.LIGHT: {\n\t\t\t\treturn Theme.LIGHT;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.MATERIAL: {\n\t\t\t\treturn Theme.MATERIAL;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaCssClass } from '../api/css-classes/schema-css-class';\nimport { SchemaWarehouse } from '../api/schema.warehouse';\nimport { Injectable } from '@angular/core';\nimport { HermesObservable, HermesSingle, singleFromObservable } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaDomainWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper();\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonceTheme(schemaId: SchemaReadModelRootId): HermesSingle<SchemaTheme> {\n\t\treturn singleFromObservable(this.onTheme(schemaId));\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaVerticalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { DomainEventBus, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from './grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring/row-coloring-set.event';\nimport { SchemaEventRepository } from '../api/schema.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SchemaDomainEventRepository extends SchemaEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/create/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { schemaKey } from '../domain/schema.key';\nimport { SchemaDomainCommandInvoker } from '../domain/schema.domain-command-invoker';\nimport { SchemaDomainWarehouse } from '../domain-read/schema.domain-warehouse';\nimport { SchemaDomainEventRepository } from '../domain/schema.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\tSchemaDomainModule.commandHandlers(),\n\t\t\tSchemaDomainModule.domainEventHandlers()\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\t{\n\t\t\tprovide: SchemaCommandInvoker,\n\t\t\tuseClass: SchemaDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaWarehouse,\n\t\t\tuseClass: SchemaDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaEventRepository,\n\t\t\tuseClass: SchemaDomainEventRepository\n\t\t},\n\n\t\tSchemaCssClassesRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SummariesEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>>;\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, 'StructureSummariesChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { FieldEntity } from '../../../field/core/domain/field/field.entity';\n\n\nexport class SummariesManager {\n\n\tstatic readonly DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<FieldEntity>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesManager } from '../../domain/summaries.manager';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SummariesEnabledArchive extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper(SummariesManager.DEFAULT_ENABLED);\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.next(structureId, SummariesManager.DEFAULT_ENABLED);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from './summaries-enabled-archive.service';\nimport { StructureSummariesEnabledSetEvent } from '../../domain/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private readonly summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.summariesEnabledArchive.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { FieldEntity } from '../../../../field/core/domain/field/field.entity';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: FieldEntity): void;\n\n\tabstract postCalculate(field: FieldEntity, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: FieldEntity, value: T): void;\n\n\tabstract generateAggregatedValues(field: FieldEntity): A;\n\n\tcalculate(fields: Array<FieldEntity>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: FieldEntity) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: FieldEntity) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: FieldEntity) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: FieldEntity) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tconst summaries = new Map();\n\n\t\tfilteredFields.forEach((field: FieldEntity) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tconst aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { FieldEntity } from '../../../../../field/core/domain/field/field.entity';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: FieldEntity): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: FieldEntity, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: FieldEntity, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: FieldEntity): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { FieldEntity } from '../../../../../field/core/domain/field/field.entity';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: FieldEntity): void {\n\t}\n\n\tpostCalculate(field: FieldEntity, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: FieldEntity, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: FieldEntity): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { FieldEntity } from '../../../../../field/core/domain/field/field.entity';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: FieldEntity): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: FieldEntity, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: FieldEntity, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: FieldEntity): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { FieldEntity } from '../../../../../field/core/domain/field/field.entity';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: FieldEntity): void {\n\t}\n\n\tpostCalculate(field: FieldEntity, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: FieldEntity, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: FieldEntity): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { FieldEntity } from '../../../../../field/core/domain/field/field.entity';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: FieldEntity): void {\n\t}\n\n\tpostCalculate(field: FieldEntity, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: FieldEntity, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: FieldEntity): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSetSummariesEnabledCommand } from './set/structure.set-summaries-enabled.command';\n\n@Injectable()\nexport class SummariesDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from '../domain-read/enabled/structure.summaries-enabled-set.event-handler';\nimport { provideSummariesCalculator } from './summaries.providers';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\nimport { SummariesDispatcher } from './summaries.dispatcher';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\t\tprovideSummariesCalculator(DateSummariesCalculator),\n\t\tprovideSummariesCalculator(NumberSummariesCalculator),\n\t\tprovideSummariesCalculator(StringSummariesCalculator),\n\t\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\t\tSummariesManagerFactory,\n\t\tSummariesDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey);\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SummariesWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onTopEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onBottomEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n}\n","export class StructureSummariesPanelConfig {\n\n\tstatic readonly defaultTop = false;\n\n\tstatic readonly defaultBottom = true;\n\n\tprivate top: boolean = StructureSummariesPanelConfig.defaultTop;\n\n\tprivate bottom: boolean = StructureSummariesPanelConfig.defaultBottom;\n\n\tsetTop(top: boolean): void {\n\t\tthis.top = top;\n\t}\n\n\tsetBottom(bottom: boolean): void {\n\t\tthis.bottom = bottom;\n\t}\n\n\tisTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from '../../domain/config/structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesConfigArchive extends AggregateArchive<StructureSummariesPanelConfig> {\n\n\tstatic readonly default = new StructureSummariesPanelConfig();\n\n\tconstructor() {\n\t\tsuper(StructureSummariesConfigArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { hermesMap, HermesObservable, hermesSwitchMap } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from './enabled/summaries-enabled-archive.service';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesWarehouse } from '../api/summaries.warehouse';\nimport { StructureSummariesConfigArchive } from './config/structure.summaries-config.archive';\nimport { StructureSummariesPanelConfig } from '../domain/config/structure.summaries-panel.config';\n\n\n@Injectable()\nexport class SummariesDomainWarehouse extends SummariesWarehouse {\n\n\tconstructor(private readonly summariesEnabledArchive: SummariesEnabledArchive,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesConfigArchive) {\n\t\tsuper();\n\t}\n\n\tonEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.summariesEnabledArchive.on(structureId);\n\t}\n\n\tonTopEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.onEnabled(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesSwitchMap((enabled) => {\n\t\t\t\t\t\t   return this.structureSummariesArchive\n\t\t\t\t\t\t\t\t\t  .on(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((config: StructureSummariesPanelConfig) => enabled && config.isTopEnabled())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonBottomEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.onEnabled(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesSwitchMap((enabled) => {\n\t\t\t\t\t\t   return this.structureSummariesArchive\n\t\t\t\t\t\t\t\t\t  .on(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((config: StructureSummariesPanelConfig) => enabled && config.isBottomEnabled())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from '../../domain/config/structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tconst panelConfig = new StructureSummariesPanelConfig();\n\n\t\tif (config.top !== undefined && config.top !== null) {\n\t\t\tpanelConfig.setTop(config.top);\n\t\t}\n\n\t\tif (config.bottom !== undefined && config.bottom !== null) {\n\t\t\tpanelConfig.setBottom(config.bottom);\n\t\t}\n\n\t\treturn panelConfig;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesCommandInvoker } from '../api/summaries.command-invoker';\nimport { SummariesConfig } from '../api/summaries-config';\nimport { StructureSummariesPanelConfigConverter } from '../domain-read/config/structure.summaries-panel.config-converter';\nimport { StructureSummariesConfigArchive } from '../domain-read/config/structure.summaries-config.archive';\nimport { SummariesDispatcher } from './summaries.dispatcher';\n\n\n@Injectable()\nexport class SummariesDomainCommandInvoker extends SummariesCommandInvoker {\n\n\tconstructor(private readonly summariesDispatcher: SummariesDispatcher,\n\t\t\t\tprivate readonly configConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate readonly structureSummariesConfigArchive: StructureSummariesConfigArchive) {\n\t\tsuper();\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.summariesDispatcher.setSummariesEnabled(enabled, structureId);\n\t}\n\n\tsetConfig(config: SummariesConfig, structureId: StructureId): void {\n\n\t\tconst summariesPanelConfig = this.configConverter.convert(config);\n\n\t\tthis.setSummariesEnabled(config.enabled, structureId);\n\t\tthis.structureSummariesConfigArchive.next(structureId, summariesPanelConfig);\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { SummariesEventRepository } from '../api/summaries.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class SummariesDomainEventRepository extends SummariesEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SummariesCommandInvoker } from './summaries.command-invoker';\nimport { SummariesEventRepository } from './summaries.event-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { SummariesEnabledArchive } from '../domain-read/enabled/summaries-enabled-archive.service';\nimport { SummariesWarehouse } from './summaries.warehouse';\nimport { SummariesDomainWarehouse } from '../domain-read/summaries.domain-warehouse';\nimport { SummariesDomainCommandInvoker } from '../domain/summaries.domain-command-invoker';\nimport { SummariesDomainEventRepository } from '../domain-read/summaries.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SummariesCommandInvoker,\n\t\t\tuseClass: SummariesDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesEventRepository,\n\t\t\tuseClass: SummariesDomainEventRepository\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesWarehouse,\n\t\t\tuseClass: SummariesDomainWarehouse\n\t\t},\n\t\tSummariesEnabledArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesEventRepository } from '../../core/api/summaries.event-repository';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from '../structure.summaries-translations';\nimport { RowSelectionType } from '../../../formation/core/api/row-selected/row-selection';\nimport { RowSelectionTypeArchive } from '../../../formation/core/api/type/row-selection-type.archive';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-summaries-panel][enabled]',\n\ttemplateUrl: './structure.summaries-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummariesPanelComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tcheckboxSelection: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureSummariesEventRepository: SummariesEventRepository,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\n\t\tthis.subscribe(\n\t\t\tthis.structureSummariesEventRepository.onSummariesChanged(this.structureId.toReadModelRootId()),\n\t\t\t(event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.sourceWarehouse.onEntitiesSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t}\n\t\t);\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-summaries-panel';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\nimport { StructureSummariesPanelComponent } from './panel/structure.summaries-panel.component';\nimport { StructureSummariesConfigArchive } from '../core/domain-read/config/structure.summaries-config.archive';\nimport { StructureSummariesPanelConfigConverter } from '../core/domain-read/config/structure.summaries-panel.config-converter';\nimport { FabricModule } from '@generic-ui/fabric';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesConfigArchive,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t// \tsuper();\n\t// \tif (summariesApiModule === null) {\n\t// \t\tthrow new Error('SummariesApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from './row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedArchive extends AggregateArchive<RowSelectedReadModel> {\n\n\tstatic default = new RowSelectedReadModel([], false, false);\n\n\tconstructor() {\n\t\tsuper(RowSelectedArchive.default);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../row-selected/row-selection';\n\n@Injectable()\nexport class RowSelectionModeArchive extends AggregateArchive<RowSelectionMode> {\n\n\tstatic default = RowSelectionMode.SINGLE;\n\n\tconstructor() {\n\t\tsuper(RowSelectionModeArchive.default);\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../api/row-selected/row-selection';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\nimport { RowSelectionMode } from '../api/row-selected/row-selection';\nimport { SetSelectionModeCommand } from './mode/set-selection-mode.command';\nimport { SetEnabledSelectionCommand } from './set-enabled/set-enabled-selection.command';\nimport { SelectAllRowsCommand } from './select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from './unselect-all/unselect-all-rows.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../domain/selected-row-changed.event';\nimport { RowSelectedArchive } from './row-selected.archive';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectedReadModel } from './row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedArchive) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(\n\t\t\t\trowChangedEvent.getSelectedRows(),\n\t\t\t\trowChangedEvent.isAllSelected(),\n\t\t\t\trowChangedEvent.isAllUnselected()\n\t\t\t);\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../api/row-selected/row-selection';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, mode, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from '../../domain/mode/selection-mode-set.event';\nimport { RowSelectionModeArchive } from './row-selection-mode.archive';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeArchive) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\n\nimport { SetEnabledSelectionCommandHandler } from '../../../formation/core/domain/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../../formation/core/domain/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from '../../../formation/core/domain/formation.dispatcher';\nimport { FormationManagerFactory } from '../../../formation/core/domain/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../../../formation/core/api/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from '../../../formation/core/domain/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from '../../../formation/core/domain/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from '../../../formation/core/domain/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../../../formation/core/api/mode/selection-mode-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\tHermesModule.registerDomainEventHandler(SelectionModeSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { hermesMap, HermesObservable, Optional } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { FormationWarehouse } from '../api/formation.warehouse';\nimport { RowSelectedArchive } from '../api/row-selected/row-selected.archive';\nimport { RowSelectionModeArchive } from '../api/mode/row-selection-mode.archive';\nimport { SelectedRow } from '../api/row-selected/selected-row';\nimport { RowSelectedReadModel } from '../api/row-selected/row-selected.read-model';\nimport { RowSelectionMode } from '../api/row-selected/row-selection';\n\n\n@Injectable()\nexport class FormationDomainWarehouse extends FormationWarehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedArchive,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeArchive,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tfindSelectedRows(structureId: StructureId): Optional<ReadonlyArray<SelectedRow>> {\n\n\t\tconst items = this.sourceWarehouse.findPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.findSelectedItemIds(structureId).getValueOrNullOrThrowError();\n\n\t\tconst selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tconst item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getSourceItem(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn Optional.of(selectedItems);\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId): HermesObservable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tfindSelectedItemIds(structureId: StructureId): Optional<ReadonlyArray<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .find(structureId)\n\t\t\t\t   .map((r: RowSelectedReadModel) => {\n\t\t\t\t\t   return r.getAll();\n\t\t\t\t   });\n\t}\n\n\tonSelectedRows(structureId: StructureId): HermesObservable<ReadonlyArray<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId): HermesObservable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../domain/formation.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../domain/core/row-select-toggle-type';\nimport { FormationCommandInvoker } from '../api/formation.command-invoker';\nimport { RowSelectionMode } from '../api/row-selected/row-selection';\n\n\n@Injectable()\nexport class FormationDomainCommandInvoker extends FormationCommandInvoker {\n\n\tconstructor(private readonly formationDispatcher: FormationDispatcher) {\n\t\tsuper();\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(selectedRow, type, structureId);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId): void {\n\t\tthis.formationDispatcher.changeMode(mode, structureId);\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId): void {\n\t\tthis.formationDispatcher.setSelection(enabled, structureId);\n\t}\n\n\tselectAll(structureId: StructureId): void {\n\t\tthis.formationDispatcher.selectAll(structureId);\n\t}\n\n\tunselectAll(structureId: StructureId): void {\n\t\tthis.formationDispatcher.unselectAll(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FormationEventRepository } from '../../../formation/core/api/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../formation/core/api/formation.command-invoker';\nimport { FormationWarehouse } from '../../../formation/core/api/formation.warehouse';\nimport { RowSelectedArchive } from './row-selected/row-selected.archive';\nimport { RowSelectionModeArchive } from './mode/row-selection-mode.archive';\nimport { FormationDomainModule } from '../domain/formation.domain-module';\nimport { FormationDomainWarehouse } from '../domain-read/formation.domain-warehouse';\nimport { FormationDomainCommandInvoker } from '../domain/formation.domain-command-invoker';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormationDomainModule\n\t],\n\tproviders: [\n\t\tRowSelectedArchive,\n\t\tFormationEventRepository,\n\n\t\t{\n\t\t\tprovide: FormationCommandInvoker,\n\t\t\tuseClass: FormationDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: FormationWarehouse,\n\t\t\tuseClass: FormationDomainWarehouse\n\t\t},\n\t\tRowSelectionModeArchive\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FormationApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../../formation/core/api/type/row-selection-type.archive';\nimport { FormationApiModule } from '../core/api/formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\t// constructor(@Optional() sourceApiModule: SourceApiModule) {\n\t// \tsuper();\n\t// \tif (sourceApiModule === null) {\n\t// \t\tthrow new Error('SourceApiModule is required');\n\t// \t}\n\t// }\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/api/structure.id';\nimport { CompositionId } from '../../../composition/core/api/composition.id';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from '../core/api/panel/info/structure.info-panel.archive';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gate/structure.gateway';\nimport { StructureReadModelRoot } from '../core/api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/edit/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../formation/core/api/formation.event-repository';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../formation/core/api/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus, hermesTimer } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../formation/core/api/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../formation/core/api/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationFacade } from '../../../l10n/core/api/translation.facade';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\nimport { StyleModifier } from '../../../common/cdk/dom/style/style-modifier';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureInitialValuesReadyArchive } from '../../core/api/structure.initial-values-ready.archive';\nimport { SummariesFeatureModule } from '../../summaries/feature/summaries.feature-module';\nimport { ColumnAutoConfigurator } from '../../../composition/core/api/column/auto/column-auto.configurator';\nimport { FormationFeatureModule } from '../../formation/feature/formation.feature-module';\n\n\n/** @internal */\nexport function structureIdFactoryForGrid(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactoryForGrid(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactoryForGrid(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'../../../composition/feature/style/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t{\n\t\t\tprovide: StructureId,\n\t\t\tuseFactory: structureIdFactoryForGrid,\n\t\t\tdeps: [\n\t\t\t\tStructureIdGenerator\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionId,\n\t\t\tuseFactory: compositionIdFactoryForGrid,\n\t\t\tdeps: [\n\t\t\t\tStructureIdGenerator\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaReadModelRootId,\n\t\t\tuseFactory: schemaIdFactoryForGrid,\n\t\t\tdeps: [\n\t\t\t\tStructureIdGenerator\n\t\t\t]\n\t\t},\n\n\t\tSchemaCssClassManager,\n\t\tStructureCellEditCloseAllService,\n\t\tStructureCellEditStore,\n\t\tStructureEditModeArchive,\n\t\tStructureInfoPanelArchive,\n\t\tStructureInfoPanelConfigService,\n\n\t\tStructureColumnMenuConfigArchive,\n\n\t\tPagingFeatureModule.forComponent(),\n\t\tSortingFeatureModule.forComponent(),\n\t\tFieldFeatureModule.forComponent(),\n\t\tFormationFeatureModule.forComponent(),\n\t\tSearchFeatureModule.forComponent(),\n\t\tSourceFeatureModule.forComponent(),\n\t\tSchemaFeatureModule.forComponent(),\n\t\tSummariesFeatureModule.forComponent(),\n\t\tTranslationFeatureModule.forComponent(),\n\n\t\tRowSelectEnabledRepository,\n\t\tStructureHeaderTopEnabledArchive,\n\t\tStructureHeaderBottomEnabledArchive,\n\t\tStructureRowDetailConfigArchive,\n\t\tStructureRowDetailService,\n\t\tStructureTitlePanelConfigArchive,\n\t\tStructureFooterPanelConfigArchive,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, OnDestroy, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationFacade,\n\t\t\t\tstructureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\tcolumnAutoConfigurator: ColumnAutoConfigurator,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly detectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly injector: Injector,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdetectorRef,\n\t\t\telementRef,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tcolumnAutoConfigurator,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService,\n\t\t\tstructureInitialValuesReadyArchive\n\t\t);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tstructureCommandService.create(this.structureId);\n\t\tcompositionCommandDispatcher.create(this.compositionId);\n\t\tschemaCommandDispatcher.create(this.schemaId);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureComponent>) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.subscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\tthis.structure = structureReadModelRoot;\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.detectorRef.detectChanges();\n\t\t\t}\n\t\t);\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\n\t\tthis.structureInitialValuesReadyArchive\n\t\t\t.next(this.structureId, true);\n\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\thermesTimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getHost().setWidth(width);\n\t\t\t}\n\t\t);\n\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure';\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValueCollectionModel } from '../../../../../filter/core/api/unique/unique-value-collection.model';\nimport { TranslationFacade } from '../../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../../l10n/core/api/translation';\nimport { hermesSwitchMap } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/core/api/composition.id';\nimport { CompositionCommandInvoker } from '../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../structure.column-config.service';\n\n\n@Component({\n\tselector: 'div[gui-column-config]',\n\ttemplateUrl: './structure.column-config.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tprivate readonly structureColumnConfigService: StructureColumnConfigService;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationFacade: TranslationFacade,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnConfigService = this.injector.get(StructureColumnConfigService);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValueCollectionModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.structureColumnMenuConfigArchive\n\t\t\t\t.on()\n\t\t\t\t.pipe(\n\t\t\t\t\thermesSwitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\t\tthis.config = config;\n\t\t\t\t\t\treturn this.translationFacade.onTranslation();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t}\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\thideColumn(): void {\n\t\tthis.compositionCommandInvoker.disableColumn(this.column.getColumnDefinitionId(), this.compositionId);\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveLeft(): void {\n\t\tthis.compositionCommandInvoker.moveLeft(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(): void {\n\t\tthis.compositionCommandInvoker.moveRight(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\thighlightColumn(): void {\n\t\tthis.compositionCommandInvoker.highlightColumn(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-config';\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, FabricPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { Reactive } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\t\tthis.close();\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: FabricPlacement.BOTTOM,\n\t\t\t\t\toffset: -34,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../formation/core/api/formation.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-columns][columns]',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-columns';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-filters][columns]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell gui-flex gui-justify-between\n\\t gui-overflow-hidden gui-relative gui-py-0 gui-px-6 gui-box-border\n\\t gui-leading-4 gui-whitespace-nowrap gui-overflow-ellipsis\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent extends PureComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn '';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class VerticalFormationWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onRowHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onContainerHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onTopMargin(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onScrollBarPosition(structureId: StructureId): HermesObservable<number>;\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../formation/core/api/row-selected/row-selection';\nimport { RowSelectionTypeArchive } from '../../../formation/core/api/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-header]',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.styleModifier = new StyleModifier(elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.containerRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.filterWarehouse.onFilteringEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.compositionWarehouse.onGroups(this.compositionId),\n\t\t\t(collection: GroupCollection) => {\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.styleModifier.getElement(this.filtersRef.nativeElement).setHeight(headerHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header';\n\t}\n\n}\n","import { HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new HermesReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): HermesObservable<T> {\n\t\treturn this.subject$.toObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-filter';\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { VerticalFormationModel } from '../domain-read/vertical-formation.model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { PagingModel } from '../../../../paging/core/api/paging.model';\nimport { SourceIsLoadingModel } from '../../../../source/core/domain-read/source-is-loading.model';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationModel } from '../../../../vertical-formation/core/domain-read/vertical-formation.model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: PagingModel;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: SourceIsLoadingModel;\n\n\tprivate readonly verticalFormation: VerticalFormationModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: PagingModel,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: SourceIsLoadingModel,\n\t\t\t\tverticalFormation: VerticalFormationModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): PagingModel {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): SourceIsLoadingModel {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly source: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(source: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.source = source;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetSourceItem(): any {\n\t\treturn this.source;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../paging/core/domain-read/paging.converter';\nimport { SourceConverter } from '../../../../source/core/domain/source.converter';\nimport { VerticalFormationConverter } from '../../../../vertical-formation/core/domain/vertical-formation.converter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.sourceItem, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'RowHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, null, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n\tDomainEvent,\n\tDomainEventBus,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesMap,\n\tHermesObservable,\n\tHermesReplaySubject,\n\tReactive\n} from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationModel } from './vertical-formation.model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { PageChangedEvent } from '../../../paging/core/domain/page/page-changed.event';\nimport { PagingSetEvent } from '../../../paging/core/domain/set/paging-set.event';\nimport { UniqueFilterUnselectedEvent } from '../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterSelectedEvent } from '../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { ActiveFiltersSetEvent } from '../../../filter/core/domain/core/active-filters-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationModel>();\n\n\tprivate readonly verticalFormation$ = new HermesReplaySubject<Map<string, VerticalFormationModel>>(1);\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvents([\n\t\t\t\t\tStructureCreatedEvent,\n\t\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\t\tOriginSetEvent,\n\t\t\t\t\tStructureHeightSetEvent,\n\t\t\t\t\tRowHeightSetEvent,\n\t\t\t\t\tSchemaThemeSetEvent, // TODO\n\t\t\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\t\t\tScrollPositionSetEvent,\n\t\t\t\t\tSearchPhraseSetDomainEvent as any,\n\t\t\t\t\tUniqueFilterUnselectedEvent,\n\t\t\t\t\tAllUniqueFilterUnselectedEvent,\n\t\t\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\t\t\tUniqueFilterSelectedEvent,\n\t\t\t\t\tPageChangedEvent,\n\t\t\t\t\tPagingSetEvent,\n\t\t\t\t\tActiveFiltersSetEvent\n\t\t\t\t]\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationModel) => v.isEnabled()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationModel) => v.getRowHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationModel) => v.getViewPortHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationModel) => v.getTopMargin()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): HermesObservable<VerticalFormationModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((idToVerticalFormation: Map<string, VerticalFormationModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((idToVerticalFormation: Map<string, VerticalFormationModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../formation/core/api/formation.command-invoker';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../formation/core/api/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/domain-read/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../formation/core/api/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../formation/core/api/row-selected/row-selection';\nimport { RowSelectToggleType } from '../../../formation/core/domain/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\nimport { fromRxJsObservable, toRxJsObservable } from '@generic-ui/hermes';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { CellEditorManager } from '../../core/domain/edit/cell-editor.manager';\n\n\n@Component({\n\tselector: 'div[gui-structure-content]',\n\ttemplateUrl: './structure-content.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing: CellEditorManager;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandInvoker: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.structureEditModeArchive.on(),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.structureWarehouse.onEditManager(this.structureId),\n\t\t\t(manager: CellEditorManager) => {\n\t\t\t\tthis.cellEditing = manager;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.schemaRowClassArchive.on(),\n\t\t\t(schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.schemaRowStyleArchive.on(),\n\t\t\t(schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\tcombineLatest(\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onPhrase(this.structureId)),\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onHighlight(this.structureId))\n\t\t\t\t)\n\t\t\t),\n\t\t\t(args: Array<any>) => {\n\n\t\t\t\tconst searchPhrase = args[0],\n\t\t\t\t\thighlighting = args[1];\n\n\t\t\t\tthis.highlighting = highlighting;\n\t\t\t\tthis.searchPhrase = searchPhrase;\n\n\t\t\t\tif (!this.highlighting) {\n\t\t\t\t\tthis.searchPhrase = '';\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tconst height = index * this.rowHeight;\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandInvoker.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE, this.structureId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-content';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../formation/core/api/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../../../../formation/core/domain/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../formation/core/api/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { RowSelectedReadModel } from '../../../../formation/core/api/row-selected/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { StyleModifier } from '../../../../../common/cdk/dom/style/style-modifier';\nimport { ClassModifier } from '../../../../../common/cdk/dom/class/class-modifier';\nimport { CssClassModifier } from '../../../../common/css-class/css-class.modifier';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { CellEditorManager } from '../../../core/domain/edit/cell-editor.manager';\nimport { ifChanged } from '../../../../../common/cdk/component/check.input';\n\n\n@Component({\n\tselector: 'div[gui-structure-row]',\n\ttemplateUrl: './structure-row.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: CellEditorManager;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t\tthis.classModifier = new ClassModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowComponent>) {\n\n\t\tifChanged(changes.entity, () => {\n\t\t\tthis.checkSelectedItem();\n\t\t\tthis.updateRowClass(changes.entity.previousValue);\n\t\t\tthis.updateRowStyle(changes.entity.previousValue);\n\t\t});\n\n\t\tifChanged(changes.rowClass, () => {\n\t\t\tthis.updateRowClass();\n\t\t});\n\n\t\tifChanged(changes.rowStyle, () => {\n\t\t\tthis.updateRowStyle();\n\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-row';\n\t}\n\n\tprivate calculateRowStyle(entity: ItemEntity): string {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\t\t\treturn this.rowStyle.style || '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\t\t\treturn this.rowStyle.styleFunction(entity.getSourceItem(), entity.getPosition());\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tprivate updateRowStyle(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst rowStylesToRemove = this.calculateRowStyle(prevEntity);\n\n\t\t\tthis.removeRowStyles(rowStylesToRemove);\n\t\t}\n\n\t\tconst rowStylesToAdd = this.calculateRowStyle(this.entity);\n\n\t\tthis.renderRowStyles(rowStylesToAdd);\n\t}\n\n\tprivate removeRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().removeStyleByName(separatedStyles[0].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().setStyleByName(separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowClass(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst toRemoveClass = this.calculateRowClass(prevEntity);\n\n\t\t\tif (toRemoveClass) {\n\t\t\t\tthis.classModifier.getHost().remove(toRemoveClass);\n\t\t\t}\n\t\t}\n\n\t\tconst toAddClass = this.calculateRowClass(this.entity);\n\n\t\tif (toAddClass) {\n\t\t\tthis.classModifier.getHost().add(toAddClass);\n\t\t}\n\t}\n\n\tprivate calculateRowClass(entity: ItemEntity): string {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(entity.getSourceItem(), entity.getPosition()) || '';\n\t\t\t}\n\t\t}\n\n\t\treturn clazz;\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\nimport { hermesTimer } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnId } from '../../../../../composition/core/api/column/column.id';\nimport { CellEditorManager } from '../../../core/domain/edit/cell-editor.manager';\n\n\n@Component({\n\tselector: 'div[gui-structure-cell][entity][cell]',\n\ttemplateUrl: './structure.cell.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditorManager: CellEditorManager;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\trowIndex: number;\n\n\t@Input()\n\tcolumnIndex: number;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tisHighlighted: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.subscribe(\n\t\t\tthis.compositionWarehouse.onHighlightedColumn(new ColumnId(this.cell.columnDefinitionId.toString()), this.compositionId),\n\t\t\t(value: boolean) => {\n\t\t\t\tthis.isHighlighted = value;\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.cellEditCloseAllService.onCloseAll(),\n\t\t\t() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t);\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditorManager.isEnabled(\n\t\t\tthis.cell.getValue(this.entity),\n\t\t\tthis.entity.getSourceItem(),\n\t\t\tthis.rowIndex\n\t\t\t) &&\n\t\t\tthis.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\thermesTimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell';\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { fromRxJsObservable, hermesEmpty, HermesObservable } from '@generic-ui/hermes';\nimport { Observable, Observer } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\n\ndeclare const ResizeObserver: any;\n\nexport type ObservedSize = {\n\tbottom: number;\n\theight: number;\n\tleft: number;\n\tright: number;\n\ttop: number;\n\twidth: number;\n\tx: number;\n\ty: number;\n};\n\n@Injectable()\nexport class ResizeDetector {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t}\n\n\ton(element: HTMLElement): HermesObservable<ObservedSize> {\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\n\t\t\treturn fromRxJsObservable(\n\t\t\t\t(\n\t\t\t\t\tnew Observable((observer: Observer<any>) => {\n\n\t\t\t\t\t\tconst resizeObserver = new ResizeObserver((entries: any) => {\n\n\t\t\t\t\t\t\tif (entries && entries.length > 0) {\n\t\t\t\t\t\t\t\tobserver.next(entries[0].contentRect);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tresizeObserver.observe(element);\n\n\t\t\t\t\t\treturn () => resizeObserver.disconnect();\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tthrottleTime(25)\n\t\t\t\t\t)\n\t\t\t);\n\n\t\t}\n\n\t\treturn hermesEmpty();\n\t}\n\n\tdestroy(element: HTMLElement) {\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../formation/core/api/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport {\n\tfromRxJsObservable,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesFromEvent,\n\thermesMap,\n\tHermesSubject,\n\thermesTakeUntil,\n\ttoRxJsObservable\n} from '@generic-ui/hermes';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { ObservedSize, ResizeDetector } from '../../../../common/cdk/resize-detector/resize.detector';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-container]',\n\ttemplateUrl: './structure-container.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new HermesSubject<void>();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\tprivate readonly structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onContainerHeight(this.structureId),\n\t\t\t(containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\ttoRxJsObservable(this.structureInitialValuesReadyArchive.once(this.structureId))\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tflatMap(() => {\n\t\t\t\t\t\t\treturn combineLatest(\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.sourceWarehouse.onEntities(this.structureId)),\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.compositionWarehouse.onTemplateColumns(this.compositionId))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t),\n\t\t\t(arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onResizeWidth(this.compositionId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\n\t\t\tthis.subscribeWithoutRender(\n\t\t\t\tthis.resizeDetector\n\t\t\t\t\t.on(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\t\thermesMap((size: ObservedSize) => size.width),\n\t\t\t\t\t\thermesDistinctUntilChanged()\n\t\t\t\t\t),\n\t\t\t\t(width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onVerticalScrollEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.structureWarehouse\n\t\t\t\t.on(this.structureId)\n\t\t\t\t.pipe(\n\t\t\t\t\thermesFilter((str: StructureReadModelRoot) => {\n\t\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onScrollBarPosition(this.structureId),\n\t\t\t(scrollPosition: number) => {\n\n\t\t\t\tthis.elRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elRef.nativeElement);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-container';\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.styleModifier.getHost().setHeight(height);\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setPaddingTop(topMargin);\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setHeight(sourceHeight);\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandInvoker.setContainerWidth(width, this.compositionId);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\thermesFromEvent(this.elRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesTakeUntil(this.scrollObservation$)\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop, this.structureId);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'div[gui-structure-quick-filters]',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { PagingModel } from '../../../paging/core/api/paging.model';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../../core/api/panel/info/structure.info-panel.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\n\nimport { StructureInfoPanelConfig } from '../../core/api/panel/info/structure.info-panel.config';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { StructureBannerPanelConfig } from '../panel/banner-panels/structure-banner-panel.config';\nimport { SummariesWarehouse } from '../../../summaries/core/api/summaries.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-structure-blueprint]',\n\ttemplateUrl: './structure.blueprint.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent implements OnInit {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tprivate pagingReadModel: PagingModel;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly summariesWarehouse: SummariesWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.structureHeaderTopEnabledArchive.on(),\n\t\t\t(topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.structureHeaderBottomEnabledArchive.on(),\n\t\t\t(bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: PagingModel) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: PagingModel) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.filterWarehouse.onQuickFiltersEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.summariesWarehouse.onBottomEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.bottomSummariesPanelEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.summariesWarehouse.onTopEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.topSummariesPanelEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.structureTitlePanelConfigArchive.on(),\n\t\t\t(titlePanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.structureFooterPanelConfigArchive.on(),\n\t\t\t(footerPanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-blueprint';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, { fieldId, filterTypeId, value }, 'FilterAddedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../formation/core/domain/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../api/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly hermesStructure$ = new HermesReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(structureId: StructureId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(structureId.getId());\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\n\t\treturn this.hermesStructure$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\t\t\t\t\t\t   return structureIdToStructure.get(structureId.getId());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.hermesStructure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, position, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tstatic readonly ROW_HEIGHT = 42;\n\n\tstatic readonly HIDDEN_ITEMS_TOP = 5;\n\n\tstatic readonly HIDDEN_ITEMS_BOTTOM = 2;\n\n\n\tprivate rowHeight: number = VerticalFormation.ROW_HEIGHT;\n\n\tprivate hiddenItemsTop: number = VerticalFormation.HIDDEN_ITEMS_TOP;\n\n\tprivate hiddenItemsBottom: number = VerticalFormation.HIDDEN_ITEMS_BOTTOM;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private readonly logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FieldEntity } from '../field/field.entity';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<FieldEntity>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<FieldEntity> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../api/structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeModel } from '../../../api/type/filter-type.model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterModel } from '../../../api/active/active-filter.model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterModel } from '../../../api/active/active-filter.model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../api/row-selected/row-selection';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterManager } from '../../sorting/core/domain/sorter.manager';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../formation/core/domain/core/formation.manager';\nimport { StructureId } from '../api/structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/config/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { Sorter } from '../../sorting/core/domain/sorter';\nimport { FilterConfig } from '../../filter/core/api/config/filter.config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filter/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../formation/core/domain/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../formation/core/domain/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../formation/core/domain/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../formation/core/api/row-selected/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../formation/core/domain/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.key';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterManager: SorterManager;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterManager,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterManager = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterManager.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<Sorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterManager.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterManager.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<Sorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterManager.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterManager.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterManager.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FieldEntity } from '../../../field/core/domain/field/field.entity';\n\nexport class Sorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: FieldEntity;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: FieldEntity,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): FieldEntity {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Sorter } from './sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldEntity } from '../../../field/core/domain/field/field.entity';\n\n\nexport class SorterManager {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, Sorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: FieldEntity): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: FieldEntity, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: FieldEntity, direction = true): void {\n\t\tthis.addSorter(field.getId(), new Sorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: Sorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = Array.from(entities);\n\n\t\tfor (const sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<Sorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: Sorter, sorterTwo: Sorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { FieldEntity } from '../../../../field/core/domain/field/field.entity';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: FieldEntity) {\n\n\t\tfor (const value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { FieldEntity } from '../../../../field/core/domain/field/field.entity';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: FieldEntity): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.find(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (const entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<FieldEntity>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<FieldEntity>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (const field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: FieldEntity): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.find(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (const notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.find(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.find(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.find(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.find(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<FieldEntity>): Map<string, Array<UniqueValue>> {\n\n\t\tconst map = new Map();\n\n\t\tfor (const field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: FieldEntity): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .find(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from '../api/structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterManager } from '../../sorting/core/domain/sorter.manager';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterManager = new SorterManager(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from '../../../summaries/core/domain-read/enabled/summaries-enabled-archive.service';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.summariesEnabledArchive.init(structureId);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport abstract class VerticalFormationCommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract enableVirtualScroll(structureId: StructureId): void;\n\n\tabstract disableVirtualScroll(structureId: StructureId): void;\n\n\tabstract scrollToTop(structureId: StructureId): void;\n\n\tabstract scrollToBottom(structureId: StructureId): void;\n\n\tabstract scrollToIndex(index: number, structureId: StructureId): void;\n\n\tabstract setScrollPosition(position: number, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from '../api/structure.id';\nimport { CreateStructureCommand } from './create-structure/create-structure.command';\nimport { FilterConfig } from '../../filter/core/api/config/filter.config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filter/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { StructureCommandInvoker } from '../api/structure.command-invoker';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { CellEditConfig } from '../../grid/core/api/edit/cell-edit.config';\nimport { StructureCellEditArchive } from '../../grid/feature/edit/structure.cell-edit.archive';\nimport { CellEditorManager } from '../../grid/core/domain/edit/cell-editor.manager';\nimport { VerticalFormationCommandInvoker } from '../../vertical-formation/core/api/vertical-formation.command-invoker';\n\n@Injectable()\nexport class StructureDomainCommandInvoker extends StructureCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly verticalFormationCommandInvoker: VerticalFormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\t// REMOVE\n\tenableVirtualScroll(structureId: StructureId): void {\n\t\tthis.verticalFormationCommandInvoker.enableVirtualScroll(structureId);\n\t}\n\n\t// REMOVE\n\tdisableVirtualScroll(structureId: StructureId): void {\n\t\tthis.verticalFormationCommandInvoker.disableVirtualScroll(structureId);\n\t}\n\n\t// REMOVE\n\tscrollToTop(structureId: StructureId): void {\n\t\tthis.verticalFormationCommandInvoker.scrollToTop(structureId);\n\t}\n\n\t// REMOVE\n\tscrollToBottom(structureId: StructureId): void {\n\t\tthis.verticalFormationCommandInvoker.scrollToBottom(structureId);\n\t}\n\n\t// REMOVE\n\tscrollToIndex(index: number, structureId: StructureId): void {\n\t\tthis.verticalFormationCommandInvoker.scrollToIndex(index, structureId);\n\t}\n\n\t// REMOVE\n\tsetScrollPosition(position: number, structureId: StructureId): void {\n\t\tthis.verticalFormationCommandInvoker.setScrollPosition(position, structureId);\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.structureFilterCommandService.setConfig(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\t// REMOVE\n\tsetContainerHeight(height: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\t// REMOVE\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n\tsetCellEdit(cellEdit: CellEditConfig, structureId: StructureId): void {\n\t\tthis.structureCellEditArchive.next(structureId, new CellEditorManager(cellEdit));\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\nimport { StructureDomainCommandInvoker } from '../../../core/domain/structure.domain-command-invoker';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\n\n\nconst commandProviders = [\n\tinMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\tinMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\tHermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\tinMemoryStructureProviders,\n\n\tcommandProviders,\n\treadProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\t{\n\t\tprovide: StructureCommandInvoker,\n\t\tuseClass: StructureDomainCommandInvoker\n\t},\n\n\tStructureInitialValuesReadyArchive\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(source: any): ItemEntity;\n\tcreate(source: Array<any>): Array<ItemEntity>;\n\tcreate(source: any): any {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createEntities(source);\n\t\t} else {\n\t\t\treturn this.createEntity(source);\n\t\t}\n\t}\n\n\tcreateEntities(source: Array<any>): Array<ItemEntity> {\n\t\treturn source.map((source: any) => this.createEntity(source));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.sourceItem, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-top-panel]',\n\ttemplate: `\n\n\t\t<div gui-search-bar\n\t\t\t class=\"gui-flex gui-items-center gui-h-full gui-w-3/5 gui-mr-auto\"></div>\n\n\t\t<!--\t\t<div gui-filter-menu-trigger></div>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-p-6');\n\t\tthis.addClassToHost('gui-border-b');\n\t\tthis.addClassToHost('gui-border-b-solid');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-top-panel';\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/menu/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { StructureColumnConfigService } from '../structure.column-config.service';\nimport { StructureColumnMenuConfig } from '../config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureColumnMenuConfigArchive } from '../config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-trigger]',\n\ttemplateUrl: './structure.column-config-trigger.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.subscribe(\n\t\t\tthis.structureColumnMenuConfigArchive.on(),\n\t\t\t(config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t}\n\t\t);\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-trigger';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-sort]',\n\ttemplateUrl: './structure.column-config-sort.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.subscribe(\n\t\t\tthis.compositionReadModelService.onSortOrder(this.column.getFieldId(), this.compositionId),\n\t\t\t(sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t}\n\t\t);\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-sort';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-column-hide]',\n\ttemplateUrl: './structure.column-config-column-hide.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigColumnHideComponent extends PureComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Output()\n\tcolumnHidden = new EventEmitter<void>();\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t}\n\n\thideColumn(): void {\n\t\tthis.columnHidden.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-column-hide';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-column-config-column-move][column]',\n\ttemplateUrl: './structure.column-config-column-move.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigColumnMoveComponent extends PureComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Output()\n\tmovedLeft = new EventEmitter<void>();\n\n\t@Output()\n\tmovedRight = new EventEmitter<void>();\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t}\n\n\tmoveLeft(): void {\n\t\tthis.movedLeft.emit();\n\t}\n\n\tmoveRight(): void {\n\t\tthis.movedRight.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-column-move';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-menu-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-menu-arrow-icon]',\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuArrowIconComponent extends PureComponent {\n\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-arrow-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValueCollectionModel } from '../../core/api/unique/unique-value-collection.model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueModel } from '../../core/api/unique/unique-value.model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'div[gui-unique-value-list][fieldId]',\n\ttemplateUrl: './unique-value-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'../style/unique-value-list.ngx.scss'\n\t]\n})\nexport class UniqueValueListComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueModel> = [];\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandInvoker: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValueCollectionModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandInvoker.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandInvoker.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-unique-value-list';\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() filterApiModule: FilterApiModule) {\n\t// \tsuper();\n\t// \tif (filterApiModule === null) {\n\t// \t\tthrow new Error('FilterApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './trigger/structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ifChanged } from '../../../../../../common/cdk/component/check.input';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditComponent>) {\n\n\t\tifChanged(changes.entity, () => {\n\t\t\tthis.initEditContext();\n\t\t});\n\n\t\tifChanged(changes.cell, () => {\n\t\t\tthis.initEditContext();\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit';\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ifChanged } from '../../../../../../common/cdk/component/check.input';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit-boolean][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditBooleanComponent>) {\n\n\t\tifChanged(changes.entity, () => {\n\t\t\tthis.initEditContext();\n\t\t});\n\n\t\tifChanged(changes.cell, () => {\n\t\t\tthis.initEditContext();\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit-boolean';\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n}\n","import { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ChangeDetectorRef, Directive, ElementRef, OnInit } from '@angular/core';\nimport { StructureBannerPanelConfig } from './structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n@Directive()\nexport abstract class StructureBannerPanel extends SmartComponent implements OnInit {\n\n\tbannerPanel: string | (() => string);\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tabstract onBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig>;\n\n\tabstract getSelectorName(): string;\n\n\tabstract getPanelTitle(): string;\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.onBannerPanelConfig(),\n\t\t\t(config: StructureBannerPanelConfig) => {\n\n\t\t\t\tthis.bannerPanel = config.template;\n\n\t\t\t\tif (typeof this.bannerPanel === 'function') {\n\t\t\t\t\tthis.bannerPanel = this.bannerPanel();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-structure-title-panel]',\n\ttemplateUrl: './structure.title-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureTitlePanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-title-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Title panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-structure-footer-panel]',\n\ttemplateUrl: './structure.footer-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureFooterPanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-footer-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Footer panel';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { ifChanged } from '../../../../common/cdk/component/check.input';\n\n\n@Component({\n\tselector: 'div[gui-empty-source][items]',\n\ttemplateUrl: './empty-source.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class EmptySourceComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-py-23');\n\t\tthis.addClassToHost('gui-px-6');\n\t}\n\n\tngOnChanges(changes: NgChanges<EmptySourceComponent>) {\n\n\t\tifChanged(changes.items, () => {\n\t\t\tif (this.items.length === 0) {\n\t\t\t\tthis.removeClassFromHost('gui-hidden');\n\t\t\t\tthis.addClassToHost('gui-block');\n\t\t\t} else {\n\t\t\t\tthis.removeClassFromHost('gui-block');\n\t\t\t\tthis.addClassToHost('gui-hidden');\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-empty-source';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { FeatureModule } from '@generic-ui/hermes';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../../formation/core/api/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { FormationWarehouse } from '../../../../../formation/core/api/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../formation/core/api/row-selected/row-selected.read-model';\nimport { RowSelectionModeArchive } from '../../../../../formation/core/api/mode/row-selection-mode.archive';\nimport { RowSelectionMode } from '../../../../../formation/core/api/row-selected/row-selection';\n\n@Component({\n\tselector: 'div[gui-select-all]',\n\ttemplateUrl: './select-all.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SelectAllComponent extends SmartComponent implements OnInit {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeArchive,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribe(\n\t\t\tthis.formationWarehouse.onMode(this.structureId),\n\t\t\t(mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribe(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-select-all';\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionArchive extends AggregateArchive<number> {\n\n\tstatic readonly DEFAULT_POSITION = 0;\n\n\tconstructor() {\n\t\tsuper(VerticalFormationScrollBarPositionArchive.DEFAULT_POSITION);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionArchive } from './vertical-formation.scroll-bar-position.archive';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetVerticalScrollEnabledCommand } from './set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollBarPositionCommand } from './scroll-bar/set-scroll-bar-position.command';\nimport { SetScrollPositionCommand } from './scroll-position/set-scroll-position.command';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetVirtualScrollEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, enabled));\n\t}\n\n\tscrollTo(position: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, position));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\nimport { VerticalFormationDispatcher } from './vertical-formation.dispatcher';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory,\n\t\tVerticalFormationDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\tHermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { VerticalFormationRepository } from './vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionArchive } from './scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\nimport { VerticalFormationWarehouse } from '../api/vertical-formation.warehouse';\n\n\n@Injectable()\nexport class VerticalFormationDomainWarehouse extends VerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t\tsuper();\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormationCommandInvoker } from '../api/vertical-formation.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationDispatcher } from './vertical-formation.dispatcher';\n\n\n@Injectable()\nexport class VerticalFormationDomainCommandInvoker extends VerticalFormationCommandInvoker {\n\n\tconstructor(private readonly verticalFormationDispatcher: VerticalFormationDispatcher) {\n\t\tsuper();\n\t}\n\n\tenableVirtualScroll(structureId: StructureId): void {\n\t\tthis.verticalFormationDispatcher.setVirtualScrollEnabled(true, structureId);\n\t}\n\n\tdisableVirtualScroll(structureId: StructureId): void {\n\t\tthis.verticalFormationDispatcher.setVirtualScrollEnabled(false, structureId);\n\t}\n\n\tscrollToTop(structureId: StructureId): void {\n\t\tthis.verticalFormationDispatcher.scrollTo(0, structureId);\n\t}\n\n\tscrollToBottom(structureId: StructureId): void {\n\t\tthis.verticalFormationDispatcher.scrollTo(Number.MAX_SAFE_INTEGER, structureId);\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId): void {\n\t\tthis.verticalFormationDispatcher.scrollTo(index, structureId);\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId): void {\n\t\tthis.verticalFormationDispatcher.setScrollPosition(position, structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from '../domain/vertical-formation.converter';\nimport { VerticalFormationRepository } from '../domain-read/vertical-formation.repository';\nimport { VerticalFormationWarehouse } from './vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionArchive } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { VerticalFormationDomainWarehouse } from '../domain-read/vertical-formation.domain-warehouse';\nimport { VerticalFormationCommandInvoker } from './vertical-formation.command-invoker';\nimport { VerticalFormationDomainCommandInvoker } from '../domain/vertical-formation.domain-command-invoker';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\t{\n\t\t\tprovide: VerticalFormationWarehouse,\n\t\t\tuseClass: VerticalFormationDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: VerticalFormationCommandInvoker,\n\t\t\tuseClass: VerticalFormationDomainCommandInvoker\n\t\t},\n\t\tVerticalFormationScrollBarPositionArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t// \tsuper();\n\t// \tif (verticalFormationApiModule === null) {\n\t// \t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t// \t}\n\t// }\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tconst staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => {\n\t\t\t\treturn columnWidth.isTypeAuto() ||\n\t\t\t\t\tcolumnWidth.isTypePercentage() ||\n\t\t\t\t\t(columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH);\n\t\t\t});\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, payload, 'CompositionContainerWidthSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = Array.from(this.columns);\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tconst newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (const column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width;\n\t\tconst autoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tconst column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (const column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, activeColumns, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t// this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (const param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tstatic fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected align: ColumnAlign;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../api/composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(source: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createColumns(source);\n\t\t} else {\n\t\t\treturn this.createColumn(source);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\tdataType = field.getDataType(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined;\n\n\t\tlet view: ViewEntity,\n\t\t\tenabled: boolean;\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tconst columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tconst columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract findById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\t\t}\n\n\t}\n\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../../api/composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n\tpublish(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../../api/composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private readonly columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly name: string,\n\t\t\t\tpublic template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getSourceItem());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getSourceItem());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tgetClasses(): string {\n\t\treturn 'gui-cell-highlighted';\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity);\n\t\t\tconst lowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tconst positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += '</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tprivate readonly name: string,\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\ttoHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header || '';\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\ttoContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.name,\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private readonly viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate readonly editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.getColumnConfig().name,\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.isSortingEnabled()\n\t\t);\n\n\t\tif (column.getCellView() === CellView.NG_TEMPLATE) {\n\t\t\tcolumnDef.cellTemplate = column.getColumnConfig().templateRef;\n\t\t} else {\n\t\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\t}\n\n\t\tif (typeof column.getHeader() === 'function') {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\t\t}\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\tactiveColumn.getColumnConfig().name,\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.isSortingEnabled()\n\t\t);\n\n\t\tif (activeColumn.getCellView() === CellView.NG_TEMPLATE) {\n\t\t\tcolumnDef.cellTemplate = activeColumn.getColumnConfig().templateRef;\n\t\t} else {\n\t\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\t}\n\n\t\tif (typeof activeColumn.getHeader() === 'function') {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\t\t}\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.toHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.toHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.toContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionReadModelRootId } from '../../../api/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, HermesObservable, Optional, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>>;\n\n\tabstract find(compositionId: CompositionId): Optional<CompositionReadModeRoot>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject, Optional } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new HermesReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tfind(compositionId: CompositionId): Optional<CompositionReadModeRoot> {\n\n\t\tconst key = compositionId.getId();\n\n\t\treturn Optional.of(this.compositionIdToComposition.get(key));\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../../api/composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { ColumnId } from '../../api/column/column.id';\n\nexport class ColumnHighlightManager {\n\n\tprivate enabled = true;\n\n\tprivate highlightedColumns: Set<string> = new Set(); // should be set of ColumnId\n\n\tisHighlighted(columnId: ColumnId): boolean {\n\t\treturn this.highlightedColumns.has(columnId.toString());\n\t}\n\n\ttoggle(columnId: ColumnId): void {\n\t\tif (this.highlightedColumns.has(columnId.toString())) {\n\t\t\tthis.highlightedColumns.delete(columnId.toString());\n\t\t} else {\n\t\t\tthis.highlightedColumns.add(columnId.toString());\n\t\t}\n\t}\n\n\tremove(columnId: ColumnId): void {\n\t\tthis.highlightedColumns.delete(columnId.toString());\n\t}\n}\n","import { AggregateArchive } from '@generic-ui/hermes';\nimport { ColumnHighlightManager } from './column-highlight.manager';\nimport { Injectable } from '@angular/core';\nimport { Override } from '../../../../common/cdk/decorators';\nimport { CompositionId } from '../../api/composition.id';\nimport { ColumnId } from '../../api/column/column.id';\n\n@Injectable()\nexport class ColumnHighlightArchive extends AggregateArchive<ColumnHighlightManager> {\n\n\tconstructor() {\n\t\tsuper(new ColumnHighlightManager());\n\t}\n\n\ttoggle(key: CompositionId, value: ColumnId) {\n\t\tthis.find(key)\n\t\t\t.ifPresent((manager) => {\n\t\t\t\tmanager.toggle(value);\n\t\t\t\tthis.next(key, manager);\n\t\t\t});\n\t}\n\n\t@Override\n\tprotected equals(a: ColumnHighlightManager, b: ColumnHighlightManager): boolean {\n\t\treturn false;\n\t}\n\n\t@Override\n\tprotected createDefaultValue(defaultValue: ColumnHighlightManager): ColumnHighlightManager {\n\t\treturn new ColumnHighlightManager();\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from './composition.key';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\nimport { ColumnHighlightArchive } from './highlight/column-highlight.archive';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tinMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory,\n\t\tColumnHighlightArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\tHermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\tHermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupArchive extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], false);\n\n\tconstructor() {\n\t\tsuper(CompositionGroupArchive.default);\n\t}\n\n}\n","import { CompositionDispatcher } from './composition.dispatcher';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionId } from '../api/composition.id';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../api/column/column-definition-id';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionCommandInvoker } from '../api/composition.command-invoker';\nimport { Injectable } from '@angular/core';\nimport { ColumnHighlightArchive } from './highlight/column-highlight.archive';\n\n@Injectable()\nexport class CompositionDomainCommandInvoker extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupArchive,\n\t\t\t\tprivate readonly columnHighlightArchive: ColumnHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tcreate(compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\thighlightColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.columnHighlightArchive.toggle(compositionId, new ColumnId(columnDefinitionId.getId()));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionEventRepository } from '../api/composition.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainEventRepository extends CompositionEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CompositionReadModelRootRepository } from './composition.read-model-root-repository';\nimport { CompositionGroupArchive } from './group/composition-group.archive';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { GroupCollection } from '../api/group/group.collection';\nimport { CompositionWarehouse } from '../api/composition.warehouse';\nimport { Injectable } from '@angular/core';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { ColumnId } from '../api/column/column.id';\nimport { ColumnHighlightArchive } from '../domain/highlight/column-highlight.archive';\nimport { ColumnHighlightManager } from '../domain/highlight/column-highlight.manager';\nimport { ColumnDefinition } from './definition/column-definition';\n\n@Injectable()\nexport class CompositionDomainWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupArchive: CompositionGroupArchive,\n\t\t\t\tprivate readonly columnHighlightArchive: ColumnHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tonWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   hermesMap((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId): HermesObservable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId): HermesObservable<GroupCollection> {\n\t\treturn this.compositionGroupArchive.on(compositionId);\n\t}\n\n\tonHighlightedColumn(columnId: ColumnId, compositionId: CompositionId): HermesObservable<boolean> {\n\t\treturn this.columnHighlightArchive\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((manager: ColumnHighlightManager) => manager.isHighlighted(columnId))\n\t\t\t\t   );\n\t}\n\n\tfindColumnNames(compositionId: CompositionId): ReadonlyArray<string> {\n\n\t\tlet names: Array<string> = [];\n\n\t\tthis.compositionRepository\n\t\t\t.find(compositionId)\n\t\t\t.ifPresent((value) => {\n\t\t\t\tnames = value.getAllColumns().map((cd: ColumnDefinition) => cd.getName());\n\t\t\t});\n\n\t\treturn names;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { ColumnAutoConfigurator } from '../../../api/column/auto/column-auto.configurator';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n@Injectable()\nexport class DomainColumnAutoConfigurator extends ColumnAutoConfigurator {\n\n\tconfigure(source: ReadonlyArray<any>): ReadonlyArray<ColumnConfig | MultiColumnConfig> {\n\n\t\tif (source !== undefined && source !== null && Array.isArray(source) && source.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst rawItem = source[0];\n\n\t\treturn Object.keys(rawItem)\n\t\t\t\t\t .map((key, index) => {\n\n\t\t\t\t\t\t return this.toColumnConfig(key, rawItem);\n\t\t\t\t\t });\n\t}\n\n\tprivate toColumnConfig(key: string, rawItem: any): ColumnConfig {\n\t\treturn {\n\t\t\tfield: this.getField(key),\n\t\t\theader: this.getHeader(key),\n\t\t\ttype: this.getType(key, rawItem)\n\t\t} as ColumnConfig;\n\t}\n\n\tprivate getField(key: string): string {\n\t\treturn key;\n\t}\n\n\tprivate getHeader(key: string): string {\n\t\treturn key[0].toUpperCase() + key.slice(1);\n\t}\n\n\tprivate getType(key: string, rawItem: any): DataType {\n\n\t\tif (typeof rawItem[key] === 'string') {\n\t\t\treturn DataType.STRING;\n\t\t} else if (typeof rawItem[key] === 'number') {\n\t\t\treturn DataType.NUMBER;\n\t\t} else if (rawItem[key] instanceof Date) {\n\t\t\treturn DataType.DATE;\n\t\t} else if (typeof rawItem[key] === 'boolean') {\n\t\t\treturn DataType.BOOLEAN;\n\t\t} else {\n\t\t\treturn DataType.UNKNOWN;\n\t\t}\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from '../domain/composition.key';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport { inMemoryCompositionProviders, inMemoryCompositionReadModelProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionDomainCommandInvoker } from '../domain/compositon.domain-command-invoker';\nimport { CompositionDomainEventRepository } from '../domain/composition.domain-event-repository';\nimport { CompositionDomainWarehouse } from '../domain-read/composition.domain-warehouse';\nimport { ColumnAutoConfigurator } from './column/auto/column-auto.configurator';\nimport { DomainColumnAutoConfigurator } from '../domain/column/auto/domain.column-auto.configurator';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\tinMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\tinMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupArchive,\n\n\t\t{\n\t\t\tprovide: CompositionCommandInvoker,\n\t\t\tuseClass: CompositionDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionWarehouse,\n\t\t\tuseClass: CompositionDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionEventRepository,\n\t\t\tuseClass: CompositionDomainEventRepository\n\t\t},\n\t\t{\n\t\t\tprovide: ColumnAutoConfigurator,\n\t\t\tuseClass: DomainColumnAutoConfigurator\n\t\t}\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule { // extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ChangeDetectorRef, Directive, ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n@Directive()\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, Directive, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { fromRxJsObservable, hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n@Directive()\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: NgChanges<InputEditTemplateComponent<any>>) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\thermesFromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tfromRxJsObservable(\n\t\t\tthis.filterForm\n\t\t\t\t.controls[this.filterFieldName]\n\t\t\t\t.valueChanges\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-string-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-number-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-boolean-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\nimport { StreamCloser } from '../../../../../common/cdk/reactive/stream-closer';\nimport { hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-date-edit';\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column[header]',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n\theaderTemplate: TemplateRef<any>;\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { CellValue } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div class=\"gui-h-full gui-flex gui-items-center\"\n\t\t\t [innerHTML]=\"safeHTML\">\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent extends PureComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private readonly sanitizer: DomSanitizer,\n\t\t\t\tprivate readonly elRef: ElementRef) {\n\t\tsuper(elRef);\n\n\t\tthis.addClassToHost('gui-h-full');\n\t\tthis.addClassToHost('gui-w-full');\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-function-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { ifChanged } from '../../../../../common/cdk/component/check.input';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<BarViewComponent>) {\n\n\t\tifChanged(changes.value, () => {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-bar-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-percentage-view';\n\t}\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\t\tsuper(elementRef);\n\n\t\tif (isBold !== null) {\n\t\t\tthis.addClassToHost('gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.addClassToHost('gui-italic');\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-text-view';\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column/column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: [\n\t\texportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\t// constructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t// \tsuper();\n\t// \tif (compositionApiModule === null) {\n\t// \t\tthrow new Error('CompositionApiModule is required.');\n\t// \t}\n\t// }\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../formation/core/api/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-groups][groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent extends PureComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-groups';\n\t}\n\n}\n","import { Directive, EventEmitter, OnDestroy } from '@angular/core';\n\nimport { NgChanges } from './ng-changes';\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\n@Directive()\nexport abstract class Gate<T = any> implements OnDestroy {\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tisDefined(propertyName: string, changes: NgChanges<T>): boolean {\n\t\treturn changes[propertyName] !== undefined && changes[propertyName].currentValue !== undefined;\n\t}\n\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(value);\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from '../../core/api/search-config';\nimport { SearchEventRepository } from '../../core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../core/api/search.command-invoker';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n@Directive()\nexport abstract class SearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly searchEventRepository: SearchEventRepository,\n\t\t\t\t\t\t  protected readonly searchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SearchingGate>) {\n\n\t\tif (this.isDefined('searching', changes)) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandInvoker.setSearchingConfig(searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.searchEventRepository.onSearchPhrase(this.structureId.toReadModelRootId()),\n\t\t\tthis.searchPhraseChanged\n\t\t);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[searching]'\n})\nexport class StructureSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureHeaderTopEnabledArchive } from '../../../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../../../header/structure-header-bottom-enabled.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]'\n})\nexport class StructureColumnHeaderGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\tconstructor(private readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnHeaderGate>) {\n\n\t\tif (this.isDefined('columnHeaderTop', changes)) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (this.isDefined('columnHeaderBottom', changes)) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { PagingConfig } from '../../core/api/config/paging-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingCommandInvoker } from '../../core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../core/api/paging.event-repository';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n@Directive()\nexport abstract class PagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly compositionId: CompositionId,\n\t\t\t\t\t\t  protected readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\t\t\t  protected readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.compositionId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageSizeChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageSizeChanged\n\t\t);\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { PagingConfig } from '../../../../paging/core/api/config/paging-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { PagingDisplayModeArchive } from '../../../../paging/feature/mode/paging-display-mode.archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\n\n\n@Directive({\n\tselector: 'gui-structure[paging]'\n})\nexport class StructurePagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(structureId, compositionId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n\t@Override\n\tngOnChanges(changes: NgChanges<StructurePagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.pagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.structureId);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { RowSelection } from '../../core/api/row-selected/row-selection';\nimport { SelectedRow } from '../../core/api/row-selected/selected-row';\nimport { FormationEventRepository } from '../../core/api/formation.event-repository';\nimport { FormationCommandInvoker } from '../../core/api/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../core/api/type/row-selection-type.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Directive()\nexport abstract class SelectionGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly formationEventService: FormationEventRepository,\n\t\t\t\t\t\t  protected readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\t\t\t  protected readonly rowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SelectionGate>) {\n\n\t\tif (this.isDefined('rowSelection', changes)) {\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getSource()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectionGate } from '../../../../formation/feature/gate/selection.gate';\nimport { FormationEventRepository } from '../../../../formation/core/api/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../../formation/core/api/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../../../formation/core/api/type/row-selection-type.archive';\n\n\n@Directive({\n\tselector: 'gui-structure[rowSelection], gui-structure[selectionGate]'\n})\nexport class StructureSelectionGate extends SelectionGate {\n\n\t@Input()\n\tselectionGate: void;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper(structureId, formationEventService, formationCommandDispatcher, rowSelectionTypeArchive);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiLocalization } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[localization]'\n})\nexport class StructureL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\tconstructor(private readonly translationService: TranslationFacade) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { StructureTitlePanelConfigArchive } from '../../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureBannerPanelConfig } from '../../panel/banner-panels/structure-banner-panel.config';\n\n@Directive({\n\tselector: 'gui-structure[titlePanel][footerPanel]'\n})\nexport class StructurePanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttitlePanel: StructureBannerPanelConfig;\n\n\t@Input()\n\tfooterPanel: StructureBannerPanelConfig;\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructurePanelGate>) {\n\n\t\tif (this.isDefined('titlePanel', changes)) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (this.isDefined('footerPanel', changes)) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { RowDetailConfig } from '../../../row-detail/row-detail.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureRowDetailConfigArchive } from '../../../row-detail/structure.row-detail.config-archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowDetail]'\n})\nexport class StructureRowDetailGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\tconstructor(private readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowDetailGate>) {\n\n\t\tif (this.isDefined('rowDetail', changes)) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../../../header/menu/config/structure.column-menu-config.archive';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnMenu]'\n})\nexport class StructureColumnMenuGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\tconstructor(private readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnMenuGate>) {\n\n\t\tif (this.isDefined('columnMenu', changes)) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SummariesConfig } from '../../core/api/summaries-config';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { SummariesCommandInvoker } from '../../core/api/summaries.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ifChanged } from '../../../../common/cdk/component/check.input';\n\n\n@Directive({\n\tselector: 'gui-structure[summaries]'\n})\nexport class StructureSummariesGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSummariesGate>) {\n\n\t\tifChanged(changes.summaries, () => {\n\t\t\tthis.summariesCommandInvoker.setConfig(this.summaries, this.structureId);\n\t\t});\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { InfoPanelConfig } from '../../../../core/api/panel/info/info-panel.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureInfoPanelConfigService } from '../../../../core/api/panel/info/structure.info-panel-config.service';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[infoPanel]'\n})\nexport class StructureInfoPanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\tconstructor(protected readonly structureInfoPanelConfigService: StructureInfoPanelConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureInfoPanelGate>) {\n\n\t\tif (this.isDefined('infoPanel', changes)) {\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowClass } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowClass } from '../../../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowClassArchive } from '../../../../../../schema/core/api/styling/schema.row-class.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowClass]'\n})\nexport class StructureRowClassGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\tconstructor(private readonly schemaRowClassArchive: SchemaRowClassArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowClassGate>) {\n\n\t\tif (this.isDefined('rowClass', changes)) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaCommandInvoker } from '../../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../../../schema/core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowColoring]'\n})\nexport class StructureRowColoringGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowColoringGate>) {\n\n\t\tif (this.isDefined('rowColoring', changes)) {\n\t\t\tthis.schemaCommandInvoker.setRowColoring(this.rowColoring, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onRowColoring(this.schemaId),\n\t\t\tthis.rowColoringChanged\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowStyle } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowStyle } from '../../../../../../schema/core/api/styling/schema.row-style';\nimport { SchemaRowStyleArchive } from '../../../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowStyle]'\n})\nexport class StructureRowStyleGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\tconstructor(private readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowStyleGate>) {\n\n\t\tif (this.isDefined('rowStyle', changes)) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\t}\n\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { SchemaCommandInvoker } from '../../../core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { Directive, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n\n@Directive({\n\tselector: 'gui-structure[verticalGrid][horizontalGrid]'\n})\nexport class ThemeGridGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ThemeGridGate>): void {\n\n\t\tif (this.isDefined('verticalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setVerticalGrid(this.verticalGrid, this.schemaId);\n\t\t}\n\n\t\tif (this.isDefined('horizontalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setHorizontalGrid(this.horizontalGrid, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onHorizontalGridChanged(this.schemaId),\n\t\t\tthis.horizontalGridChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onVerticalGridChanged(this.schemaId),\n\t\t\tthis.verticalGridChanged\n\t\t);\n\t}\n}\n","import { Directive, Input, OnChanges, OnInit } from '@angular/core';\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Directive({\n\tselector: 'gui-structure[loading]'\n})\nexport class SourceLoadingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tloading: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandInvoker: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SourceLoadingGate>): void {\n\n\n\t\tif (this.isDefined('loading', changes)) {\n\t\t\tthis.sourceCommandInvoker.setLoading(this.loading, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t}\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { Directive, Input, OnChanges } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[virtualScroll]'\n})\nexport class VerticalFormationGate extends Gate implements OnChanges {\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<VerticalFormationGate>): void {\n\n\t\tif (this.isDefined('virtualScroll', changes)) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandInvoker.enableVirtualScroll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.structureCommandInvoker.disableVirtualScroll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SortingConfig } from '../../core/api/sorting-config';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { SortingCommandInvoker } from '../../core/api/sorting.command-invoker';\nimport { ifChanged } from '../../../../common/cdk/component/check.input';\n\n\n@Directive({\n\tselector: 'gui-structure[sorting]'\n})\nexport class StructureSortingGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandInvoker: SortingCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSortingGate>) {\n\n\t\tifChanged(changes.sorting, () => {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandInvoker.setSortingConfig(sorting, this.structureId);\n\t\t});\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { FilterConfig } from '../../core/api/config/filter.config';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ifChanged } from '../../../../common/cdk/component/check.input';\n\n@Directive({\n\tselector: 'gui-structure[filtering]'\n})\nexport class StructureFilterGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureFilterGate>) {\n\n\t\tifChanged(changes.filtering, () => {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setFilterConfig(filtering, this.structureId);\n\t\t});\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { QuickFiltersConfig } from '../../core/api/quick-filter/quick-filters.config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ifChanged } from '../../../../common/cdk/component/check.input';\n\n@Directive({\n\tselector: 'gui-structure[quickFilters]'\n})\nexport class StructureQuickFiltersGate extends Gate implements OnChanges {\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureQuickFiltersGate>) {\n\n\t\tifChanged(changes.quickFilters, () => {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setQuickFiltersConfig(quickFilters, this.structureId);\n\t\t});\n\n\t}\n\n}\n","import { StructureSearchingGate } from './searching/structure-searching.gate';\nimport { StructureColumnHeaderGate } from './column/header/structure-column-header.gate';\nimport { StructurePagingGate } from './paging/structure-paging.gate';\nimport { StructureSelectionGate } from './source/structure-selection.gate';\nimport { StructureL10nGate } from './l10n/structure-l10n.gate';\nimport { StructurePanelGate } from './panel/structure-panel.gate';\nimport { StructureRowDetailGate } from './row/detail/structure-row-detail.gate';\nimport { StructureColumnMenuGate } from './column/menu/structure-column-menu.gate';\nimport { StructureSummariesGate } from '../../../summaries/feature/gate/structure-summaries.gate';\nimport { StructureInfoPanelGate } from './panel/info/structure-info-panel.gate';\nimport { StructureRowClassGate } from './row/class/structure-row-class.gate';\nimport { StructureRowColoringGate } from './row/coloring/structure-row-coloring.gate';\nimport { StructureRowStyleGate } from './row/style/structure-row-style.gate';\nimport { ThemeGridGate } from '../../../../schema/feature/gate/grid/theme-grid.gate';\nimport { SourceLoadingGate } from './source/source-loading.gate';\nimport { VerticalFormationGate } from '../../../vertical-formation/feature/gate/vertical-formation.gate';\nimport { StructureSortingGate } from '../../../sorting/feature/gate/structure-sorting.gate';\nimport { StructureFilterGate } from '../../../filter/feature/gate/structure-filter.gate';\nimport { StructureQuickFiltersGate } from '../../../filter/feature/gate/structure-quick-filters.gate';\n\nexport const structureGates = [\n\tStructureColumnHeaderGate,\n\tStructurePagingGate,\n\tStructureSearchingGate,\n\t// StructureSourceGate,\n\tStructureSelectionGate,\n\tStructureL10nGate,\n\tStructurePanelGate,\n\tStructureRowDetailGate,\n\tStructureColumnMenuGate,\n\tStructureSummariesGate,\n\tStructureInfoPanelGate,\n\tStructureRowClassGate,\n\tStructureRowStyleGate,\n\tStructureRowColoringGate,\n\tThemeGridGate,\n\tStructureSortingGate,\n\tSourceLoadingGate,\n\tStructureFilterGate,\n\tStructureQuickFiltersGate,\n\tVerticalFormationGate\n];\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModifier } from './css-class.modifier';\n\n@NgModule({\n\tproviders: [\n\t\tCssClassModifier\n\t]\n})\nexport class CssClassModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModule } from './css-class/css-class.module';\n\n\n@NgModule({\n\timports: [\n\t\tCssClassModule\n\t]\n})\nexport class StructureSharedModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDetector } from './resize.detector';\n\n@NgModule({\n\tproviders: [\n\t\tResizeDetector\n\t]\n})\nexport class ResizeDetectorModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/config/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/banner-panels/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../source/feature/empty/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\nimport { structureGates } from '../../feature/gate/structure.gates';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { SourceFeatureModule } from '../../../source/feature/source.feature-module';\nimport { StructureSharedModule } from '../../../common/structure-shared.module';\nimport { SanitizeModule } from '../../../../common/cdk/sanitize/sanitize.module';\nimport { ResizeDetectorModule } from '../../../../common/cdk/resize-detector/resize-detector.module';\nimport { StructureCellEditArchive } from '../../feature/edit/structure.cell-edit.archive';\nimport { FormationFeatureModule } from '../../../formation/feature/formation.feature-module';\nimport { FormationDomainModule } from '../../../formation/core/domain/formation.domain-module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\tPagingDomainModule.commandHandlers(),\n\t\t\tSortingDomainModule.commandHandlers(),\n\t\t\tFieldDomainModule.commandHandlers(),\n\t\t\tSearchDomainModule.commandHandlers(),\n\t\t\tFilterDomainModule.commandHandlers(),\n\t\t\tSourceDomainModule.commandHandlers(),\n\t\t\tFormationDomainModule.commandHandlers(),\n\t\t\tSummariesDomainModule.commandHandlers(),\n\t\t\tVerticalFormationDomainModule.commandHandlers(),\n\t\t\tstructureCommandHandlers\n\t\t], [\n\t\t\tstructureDomainEventHandlers,\n\t\t\tSearchDomainModule.domainEventHandlers(),\n\t\t\tFilterDomainModule.domainEventHandlers(),\n\t\t\tSourceDomainModule.domainEventHandlers(),\n\t\t\tFormationDomainModule.domainEventHandlers(),\n\t\t\tSummariesDomainModule.domainEventHandlers(),\n\t\t\tFieldDomainModule.domainEventHandlers(),\n\t\t\tVerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\tfabricImports,\n\tResizeDetectorModule,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tFormationFeatureModule,\n\tSearchFeatureModule,\n\tFilterMenuFeatureModule,\n\tSourceFeatureModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureSharedModule,\n\n\tStructureInfoPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule,\n\tSanitizeModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\n\tstructureGates\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\tfabricImports,\n\tPagingFeatureModule,\n\tstructureGates\n];\n\n@NgModule({\n\timports: [\n\t\timports\n\t],\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tprivate static readonly HERMES_API = 'hermesApi';\n\n\tstatic exportDeclarations = Array.from(exportDeclarations);\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders<StructureModule> {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: 'structure'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: StructureDefinition,\n\t\t\t\t\tuseFactory: createStructureDefinition\n\t\t\t\t},\n\t\t\t\tItemEntityFactory,\n\t\t\t\tStructureThemeConverter,\n\n\t\t\t\tStructureIdGenerator,\n\n\t\t\t\tStructureCellEditArchive,\n\n\t\t\t\tstructureProviders\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow[StructureModule.HERMES_API].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GuiGridComponent } from '../../feature/grid/gui.grid.component';\n\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\n\nimport { GuiGridIdGenerator } from '../../feature/grid/register/gui.grid-id.generator';\nimport { GuiGridRegister } from '../../feature/grid/register/gui.grid.register';\nimport { GuiGridColumnComponent } from '../../feature/grid/column/gui.grid-column.component';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiGridComponent,\n\tGuiGridColumnComponent\n];\n\nconst providers = [\n\tGuiGridIdGenerator,\n\tGuiGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiGridComponent,\n\tGuiGridColumnComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiGridComponent,\n\tGuiGridColumnComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiGridModule {\n\n\tstatic entryComponents = Array.from(entryComponents);\n\n\tstatic exportDeclarations = Array.from(exportDeclarations);\n\n\tstatic elementComponents = Array.from(elementComponents);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {DynamicallyCreatedComponent as ɵqr} from './common/cdk/component/dynamically-created-component';\nexport {Gate as ɵrc} from './common/cdk/component/gate';\nexport {GuiComponent as ɵfs} from './common/cdk/component/gui-component';\nexport {IconComponent as ɵhe} from './common/cdk/component/icon-component';\nexport {PureComponent as ɵfy} from './common/cdk/component/pure-component';\nexport {SmartComponent as ɵfr} from './common/cdk/component/smart-component';\nexport {StaticComponent as ɵhf} from './common/cdk/component/static-component';\nexport {Override as ɵni} from './common/cdk/decorators';\nexport {ConsoleLogger as ɵpd} from './common/cdk/logger/console.logger';\nexport {Logger as ɵk} from './common/cdk/logger/logger';\nexport {LoggerModule as ɵpc} from './common/cdk/logger/logger.module';\nexport {NumberFormatterModule as ɵkr} from './common/cdk/number-formatter/number-formatter.module';\nexport {NumberFormatterPipe as ɵks} from './common/cdk/number-formatter/number-formatter.pipe';\nexport {ResizeDetectorModule as ɵfd} from './common/cdk/resize-detector/resize-detector.module';\nexport {ResizeDetector as ɵfe} from './common/cdk/resize-detector/resize.detector';\nexport {SafePipe as ɵoo} from './common/cdk/sanitize/safe.pipe';\nexport {SanitizeModule as ɵon} from './common/cdk/sanitize/sanitize.module';\nexport {ColumnAutoConfigurator as ɵol} from './composition/core/api/column/auto/column-auto.configurator';\nexport {ColumnDefinitionId as ɵmc} from './composition/core/api/column/column-definition-id';\nexport {CompositionApiModule as ɵmp} from './composition/core/api/composition.api-module';\nexport {CompositionCommandInvoker as ɵkv} from './composition/core/api/composition.command-invoker';\nexport {CompositionEventRepository as ɵoj} from './composition/core/api/composition.event-repository';\nexport {CompositionId as ɵhy} from './composition/core/api/composition.id';\nexport {CompositionWarehouse as ɵhs} from './composition/core/api/composition.warehouse';\nexport {Group as ɵof} from './composition/core/api/group/group';\nexport {GroupCollection as ɵoe} from './composition/core/api/group/group.collection';\nexport {GroupId as ɵog} from './composition/core/api/group/group.id';\nexport {CompositionDomainWarehouse as ɵoi} from './composition/core/domain-read/composition.domain-warehouse';\nexport {CompositionReadModelRootConverter as ɵnu} from './composition/core/domain-read/composition.read-model-root-converter';\nexport {CompositionReadModelRootRepository as ɵob} from './composition/core/domain-read/composition.read-model-root-repository';\nexport {CellContext as ɵly} from './composition/core/domain-read/definition/cell-context';\nexport {CellTemplateWithContext as ɵlx} from './composition/core/domain-read/definition/cell-template-with-context';\nexport {CellValue as ɵma,CellValueType as ɵlz} from './composition/core/domain-read/definition/cell-value';\nexport {ColumnDefinitionFactory as ɵnv} from './composition/core/domain-read/definition/column-definition.factory';\nexport {EditCommunicationComponent as ɵot} from './composition/core/domain-read/edit/edit-communication.component';\nexport {EditTemplateFactory as ɵoa} from './composition/core/domain-read/edit/edit-template.factory';\nexport {EditTemplateRepository as ɵnz} from './composition/core/domain-read/edit/edit-template.repository';\nexport {EditTemplatesComponent as ɵoq} from './composition/core/domain-read/edit/edit-templates.component';\nexport {BooleanEditTemplateComponent as ɵov} from './composition/core/domain-read/edit/template/boolean-edit-template.component';\nexport {DateEditTemplateComponent as ɵow} from './composition/core/domain-read/edit/template/date-edit-template.component';\nexport {InputEditTemplateComponent as ɵos} from './composition/core/domain-read/edit/template/input-edit-template.component';\nexport {NumberEditTemplateComponent as ɵou} from './composition/core/domain-read/edit/template/number-edit-template.component';\nexport {StringEditTemplateComponent as ɵor} from './composition/core/domain-read/edit/template/string-edit-template.component';\nexport {CompositionGroupArchive as ɵod} from './composition/core/domain-read/group/composition-group.archive';\nexport {TemplateFactory as ɵny} from './composition/core/domain-read/template/template.factory';\nexport {BarViewComponent as ɵoz} from './composition/core/domain-read/view/bar/bar-view.component';\nexport {FunctionViewComponent as ɵoy} from './composition/core/domain-read/view/function/function-view.component';\nexport {PercentageViewComponent as ɵpa} from './composition/core/domain-read/view/percentage/percentage-view.component';\nexport {TextViewComponent as ɵpb} from './composition/core/domain-read/view/text/text-view.component';\nexport {ViewTemplateFactory as ɵnx} from './composition/core/domain-read/view/view-template.factory';\nexport {ViewTemplateRepository as ɵnw} from './composition/core/domain-read/view/view-template.repository';\nexport {ViewTemplatesComponent as ɵop} from './composition/core/domain-read/view/view-templates.component';\nexport {DomainColumnAutoConfigurator as ɵom} from './composition/core/domain/column/auto/domain.column-auto.configurator';\nexport {ColumnAlign as ɵme} from './composition/core/domain/column/column-align';\nexport {ColumnEntityFactory as ɵms} from './composition/core/domain/column/column-entity.factory';\nexport {ColumnFieldFactory as ɵng} from './composition/core/domain/column/field/colum-field.factory';\nexport {CompositionMoveLeftColumnCommandHandler as ɵnp} from './composition/core/domain/column/move/left/composition.move-left-column.command-handler';\nexport {CompositionMoveRightColumnCommandHandler as ɵnq} from './composition/core/domain/column/move/right/composition.move-right-column.command-handler';\nexport {ColumnPresentationConverter as ɵmt} from './composition/core/domain/column/presentation/column.presentation.converter';\nexport {SetColumnsCommandHandler as ɵnj} from './composition/core/domain/column/set-columns/set-columns.command-handler';\nexport {CompositionSetColumnEnabledCommandHandler as ɵnn} from './composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler';\nexport {CompositionChangeSortStatusCommandHandler as ɵno} from './composition/core/domain/column/sort/composition-change-sort-status.command-handler';\nexport {CompositionChangeSortStatusEventHandler as ɵns} from './composition/core/domain/column/sort/composition-change-sort-status.event-handler';\nexport {SortOrder as ɵmd} from './composition/core/domain/column/sort/sort-order';\nexport {CompositionAggregateFactory as ɵmr} from './composition/core/domain/composition.aggregate-factory';\nexport {CompositionAggregateRepository as ɵmw} from './composition/core/domain/composition.aggregate-repository';\nexport {CompositionDispatcher as ɵne} from './composition/core/domain/composition.dispatcher';\nexport {CompositionDomainEventRepository as ɵok} from './composition/core/domain/composition.domain-event-repository';\nexport {CompositionDomainModule as ɵna} from './composition/core/domain/composition.domain-module';\nexport {CompositionEventConverter as ɵnf} from './composition/core/domain/composition.event-converter';\nexport {compositionKey as ɵmq} from './composition/core/domain/composition.key';\nexport {CompositionDomainCommandInvoker as ɵoh} from './composition/core/domain/compositon.domain-command-invoker';\nexport {CreateCompositionCommandHandler as ɵmz} from './composition/core/domain/create/create-composition.command-handler';\nexport {CompositionGroupFactory as ɵmu} from './composition/core/domain/group/composition.group.factory';\nexport {SetGroupsCommandHandler as ɵnr} from './composition/core/domain/group/set-groups/set-groups.command-handler';\nexport {ColumnHighlightArchive as ɵnh} from './composition/core/domain/highlight/column-highlight.archive';\nexport {SetCompositionResizeWidthCommandHandler as ɵnl} from './composition/core/domain/width/resize-width/set-composition-resize-width.command-handler';\nexport {SetCompositionContainerWidthCommandHandler as ɵnm} from './composition/core/domain/width/set-container-width/set-composition-container-width.command-handler';\nexport {SetCompositionWidthCommandHandler as ɵnk} from './composition/core/domain/width/set-width/set-composition-width.command-handler';\nexport {InMemoryCompositionReadStore as ɵnt} from './composition/core/infrastructure/in-memory/api/in-memory.composition.read-store';\nexport {InMemoryCompositionRepository as ɵoc} from './composition/core/infrastructure/in-memory/api/in-memory.composition.repository';\nexport {InMemoryCompositionAggregateRepository as ɵmv} from './composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nexport {InMemoryCompositionAggregateStore as ɵmx} from './composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store';\nexport {inMemoryCompositionCommandProviders as ɵnb,inMemoryCompositionProviders as ɵnd,inMemoryCompositionReadModelProviders as ɵnc} from './composition/core/infrastructure/in-memory/in-memory.composition.providers';\nexport {InMemoryCompositionStore as ɵmy} from './composition/core/infrastructure/in-memory/in-memory.composition.store';\nexport {ColumnQueryComponent as ɵox} from './composition/feature/column/column-query.component';\nexport {CompositionFeatureModule as ɵmo} from './composition/feature/composition.feature-module';\nexport {GuiGridGateway as ɵse} from './gui/grid/feature/grid/gui.grid-gateway';\nexport {guiGridStructureDefinition as ɵsf} from './gui/grid/feature/grid/gui.grid-structure-definition';\nexport {GuiGridIdGenerator as ɵsh} from './gui/grid/feature/grid/register/gui.grid-id.generator';\nexport {GuiGridRegister as ɵsg} from './gui/grid/feature/grid/register/gui.grid.register';\nexport {TranslationApiModule as ɵd} from './l10n/core/api/translation.api-module';\nexport {TranslationFacade as ɵf} from './l10n/core/api/translation.facade';\nexport {TranslationDomainFacade as ɵg} from './l10n/core/domain/translation.domain-facade';\nexport {TranslationFeatureModule as ɵc} from './l10n/feature/translation.feature-module';\nexport {TranslationPipe as ɵe} from './l10n/feature/translation.pipe';\nexport {SchemaApiModule as ɵjl} from './schema/core/api/schema.api-module';\nexport {SchemaCommandInvoker as ɵkf} from './schema/core/api/schema.command-invoker';\nexport {SchemaEventRepository as ɵkk} from './schema/core/api/schema.event-repository';\nexport {SchemaReadModelRootId as ɵld} from './schema/core/api/schema.read-model-root-id';\nexport {SchemaWarehouse as ɵki} from './schema/core/api/schema.warehouse';\nexport {SchemaRowClassArchive as ɵkm} from './schema/core/api/styling/schema.row-class.archive';\nexport {SchemaRowStyleArchive as ɵkn} from './schema/core/api/styling/schema.row-style.archive';\nexport {SchemaCssClassesEventHandler as ɵkc} from './schema/core/domain-read/css-classes/schema-css-classes.event-handler';\nexport {SchemaCssClassesRepository as ɵkd} from './schema/core/domain-read/css-classes/schema.css-classes.repository';\nexport {SchemaHorizontalGridRepository as ɵjz} from './schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository';\nexport {SchemaRowColoringRepository as ɵka} from './schema/core/domain-read/row-coloring/schema.row-coloring.repository';\nexport {SchemaDomainWarehouse as ɵkj} from './schema/core/domain-read/schema.domain-warehouse';\nexport {SchemaThemeRepository as ɵjy} from './schema/core/domain-read/theme/schema.theme.repository';\nexport {SchemaVerticalGridRepository as ɵkb} from './schema/core/domain-read/vertical-grid/schema.vertical-grid.repository';\nexport {CreateSchemaCommandHandler as ɵjs} from './schema/core/domain/create/create-schema.command-handler';\nexport {SchemaAggregateFactory as ɵjn} from './schema/core/domain/create/schema.aggregate-factory';\nexport {SetSchemaHorizontalGridCommandHandler as ɵjw} from './schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nexport {SetSchemaVerticalGridCommandHandler as ɵjx} from './schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler';\nexport {SetRowColoringCommandHandler as ɵjv} from './schema/core/domain/row-coloring/set-row-coloring.command-handler';\nexport {SchemaAggregateRepository as ɵjp} from './schema/core/domain/schema.aggregate-repository';\nexport {SchemaDispatcher as ɵke} from './schema/core/domain/schema.dispatcher';\nexport {SchemaDomainCommandInvoker as ɵkg} from './schema/core/domain/schema.domain-command-invoker';\nexport {SchemaDomainEventRepository as ɵkl} from './schema/core/domain/schema.domain-event-repository';\nexport {SchemaDomainModule as ɵjt} from './schema/core/domain/schema.domain-module';\nexport {schemaKey as ɵjm} from './schema/core/domain/schema.key';\nexport {SetSchemaThemeCommandHandler as ɵju} from './schema/core/domain/theme/set-schema-theme.command-handler';\nexport {InMemorySchemaAggregateRepository as ɵjo} from './schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository';\nexport {InMemorySchemaAggregateStore as ɵjq} from './schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store';\nexport {InMemorySchemaStore as ɵjr} from './schema/core/infrastructure/in-memory/in-memory.schema.store';\nexport {ThemeGridGate as ɵrs} from './schema/feature/gate/grid/theme-grid.gate';\nexport {StructureDialogSchemaManagerComponent as ɵle} from './schema/feature/manager/dialog/structure.dialog-schema-manager.component';\nexport {StructureDialogSchemaManagerService as ɵlg} from './schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nexport {StructureSchemaManagerIconComponent as ɵlf} from './schema/feature/manager/manager-icon/structure.schema-manager-icon.component';\nexport {SchemaManagerModule as ɵlb} from './schema/feature/manager/schema-manager.module';\nexport {StructureSchemaMangerComponent as ɵlc} from './schema/feature/manager/structure.schema-manger.component';\nexport {SchemaFeatureModule as ɵjk} from './schema/feature/schema.feature-module';\nexport {CssClassModifier as ɵft} from './structure/common/css-class/css-class.modifier';\nexport {CssClassModule as ɵkp} from './structure/common/css-class/css-class.module';\nexport {StructureSharedModule as ɵko} from './structure/common/structure-shared.module';\nexport {structureKey as ɵh} from './structure/core/api/structre.key';\nexport {StructureCommandInvoker as ɵkh} from './structure/core/api/structure.command-invoker';\nexport {StructureId as ɵfu} from './structure/core/api/structure.id';\nexport {StructureInitialValuesReadyArchive as ɵpo} from './structure/core/api/structure.initial-values-ready.archive';\nexport {CreateStructureCommandHandler as ɵbb} from './structure/core/domain/create-structure/create-structure-command-handler.service';\nexport {StructureCreatedEventHandler as ɵfb} from './structure/core/domain/create-structure/structure-created.event-handler';\nexport {StructureAggregateRepository as ɵy} from './structure/core/domain/structure-aggregate.repository';\nexport {StructureAggregateFactory as ɵi} from './structure/core/domain/structure.aggregate-factory';\nexport {StructureDomainCommandInvoker as ɵsd} from './structure/core/domain/structure.domain-command-invoker';\nexport {InMemoryStructureReadStore as ɵje} from './structure/core/infrastructure/in-memory/api/in-memory-structure.read-store';\nexport {InMemoryStructureRepository as ɵsc} from './structure/core/infrastructure/in-memory/api/in-memory.structure.repository';\nexport {InMemoryStructureAggregateRepository as ɵx} from './structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nexport {InMemoryStructureAggregateStore as ɵz} from './structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store';\nexport {inMemoryStructureCommandProviders as ɵrz,inMemoryStructureProviders as ɵsb,inMemoryStructureReadProviders as ɵsa} from './structure/core/infrastructure/in-memory/in-memory.structure.providers';\nexport {InMemoryStructureStore as ɵba} from './structure/core/infrastructure/in-memory/in-memory.structure.store';\nexport {FieldApiModule as ɵgi} from './structure/field/core/api/field.api-module';\nexport {FieldCommandInvoker as ɵgj} from './structure/field/core/api/field.command-invoker';\nexport {FieldWarehouse as ɵgl} from './structure/field/core/api/field.warehouse';\nexport {FieldArchive as ɵbr} from './structure/field/core/domain-read/field.archive';\nexport {FieldDomainWarehouse as ɵgm} from './structure/field/core/domain-read/field.domain-warehouse';\nexport {FieldConverter as ɵbs} from './structure/field/core/domain-read/init/field.converter';\nexport {FieldsInitedEventHandler as ɵbq} from './structure/field/core/domain-read/init/fields-inited.event-handler';\nexport {FieldCollectionFactory as ɵt} from './structure/field/core/domain/field-collection.factory';\nexport {FieldDispatcher as ɵbo} from './structure/field/core/domain/field.dispatcher';\nexport {FieldDomainCommandInvoker as ɵgk} from './structure/field/core/domain/field.domain-command-invoker';\nexport {FieldDomainModule as ɵbn} from './structure/field/core/domain/field.domain-module';\nexport {DataFieldFactory as ɵw} from './structure/field/core/domain/field/data/data-field.factory';\nexport {FieldEntityIdGenerator as ɵv} from './structure/field/core/domain/field/field-entity-id.generator';\nexport {FieldEntityFactory as ɵu} from './structure/field/core/domain/field/field.entity-factory';\nexport {FieldId as ɵmb} from './structure/field/core/domain/field/field.id';\nexport {InitFieldsCommandHandler as ɵbp} from './structure/field/core/domain/init/init-fields.command-handler';\nexport {FieldFeatureModule as ɵgh} from './structure/field/feature/field.feature-module';\nexport {FilterIntegration as ɵhr} from './structure/filter/core/api-integration/filter.integration';\nexport {FilterContainerRef as ɵib} from './structure/filter/core/api/config/filter-container-ref';\nexport {filterContainerToken as ɵia} from './structure/filter/core/api/config/filter-container-token';\nexport {FilterApiModule as ɵhm} from './structure/filter/core/api/filter.api-module';\nexport {FilterCommandInvoker as ɵhn} from './structure/filter/core/api/filter.command-invoker';\nexport {FilterWarehouse as ɵhp} from './structure/filter/core/api/filter.warehouse';\nexport {FilterTypeCollectionModel as ɵcw} from './structure/filter/core/api/type/filter-type-collection.model';\nexport {FilterTypeModel as ɵcx} from './structure/filter/core/api/type/filter-type.model';\nexport {UniqueValueCollectionModel as ɵdd} from './structure/filter/core/api/unique/unique-value-collection.model';\nexport {UniqueValueModel as ɵde} from './structure/filter/core/api/unique/unique-value.model';\nexport {ActiveFilterArchive as ɵda} from './structure/filter/core/domain-read/active/active-filter.archive';\nexport {ActiveFiltersSetEventHandler as ɵcz} from './structure/filter/core/domain-read/active/active-filters-set.event-handler';\nexport {ConfigFilterSetEventHandler as ɵcs} from './structure/filter/core/domain-read/config/config-filter-set.event-handler';\nexport {FilterEnabledArchive as ɵct} from './structure/filter/core/domain-read/config/filter-enabled.archive';\nexport {FilterDomainWarehouse as ɵhq} from './structure/filter/core/domain-read/filter.domain-warehouse';\nexport {ConfigQuickFilterSetEventHandler as ɵcq} from './structure/filter/core/domain-read/quick-filter/config-quick-filter-set.event-handler';\nexport {QuickFilterEnabledArchive as ɵcr} from './structure/filter/core/domain-read/quick-filter/quick-filter-enabled.archive';\nexport {FilterTypeArchive as ɵcv} from './structure/filter/core/domain-read/type/filter-type.archive';\nexport {FilterTypeConfigFilterSetEventHandler as ɵcu} from './structure/filter/core/domain-read/type/filter-type.config-filter-set.event-handler';\nexport {UniqueFilterCalculatedEventHandler as ɵdb} from './structure/filter/core/domain-read/unique/unique-filter-calculated.event-handler';\nexport {UniqueValueCollectionArchive as ɵdc} from './structure/filter/core/domain-read/unique/unique-value-collection.archive';\nexport {SetConfigFilterCommandHandler as ɵcg} from './structure/filter/core/domain/config/set-config-filter.command-handler';\nexport {AddFilterCommandHandler as ɵcj} from './structure/filter/core/domain/core/add/add-filter.command-handler';\nexport {RemoveAllFiltersCommandHandler as ɵck} from './structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler';\nexport {RemoveFilterCommandHandler as ɵcl} from './structure/filter/core/domain/core/remove/remove-filter.command-handler';\nexport {FilterDispatcher as ɵcf} from './structure/filter/core/domain/filter.dispatcher';\nexport {FilterDomainCommandInvoker as ɵho} from './structure/filter/core/domain/filter.domain-command-invoker';\nexport {FilterDomainModule as ɵce} from './structure/filter/core/domain/filter.domain-module';\nexport {FilterManagerFactory as ɵr} from './structure/filter/core/domain/filter.manager-factory';\nexport {SetConfigQuickFilterCommandHandler as ɵch} from './structure/filter/core/domain/quick/set-config-quick-filter.command-handler';\nexport {ToggleFilterCommandHandler as ɵci} from './structure/filter/core/domain/toggle/toggle-filter.command-handler';\nexport {FilterTypeId as ɵcy} from './structure/filter/core/domain/type/filter-type.id';\nexport {FilterTypeFieldsInitedEventHandler as ɵdg} from './structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler';\nexport {SelectAllUniqueFilterCommandHandler as ɵcn} from './structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler';\nexport {SelectUniqueFilterCommandHandler as ɵcm} from './structure/filter/core/domain/unique/select/select-unique-filter.command-handler';\nexport {UniqueValueId as ɵdf} from './structure/filter/core/domain/unique/unique-value-id';\nexport {UnselectAllUniqueFilterCommandHandler as ɵcp} from './structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler';\nexport {UnselectUniqueFilterCommandHandler as ɵco} from './structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler';\nexport {ActiveFilterListComponent as ɵhu} from './structure/filter/feature/active-filters/active-filter-list.component';\nexport {ActiveFilterListModule as ɵht} from './structure/filter/feature/active-filters/active-filter-list.module';\nexport {ActiveSearchComponent as ɵhv} from './structure/filter/feature/active-filters/search/active-search.component';\nexport {StructureFilterGate as ɵrv} from './structure/filter/feature/gate/structure-filter.gate';\nexport {StructureQuickFiltersGate as ɵrw} from './structure/filter/feature/gate/structure-quick-filters.gate';\nexport {FilterMenuActiveFiltersComponent as ɵig} from './structure/filter/feature/menu/active-filters/filter-menu-active-filters.component';\nexport {ColumnSelectorComponent as ɵic} from './structure/filter/feature/menu/column-selector/column-selector.component';\nexport {FieldSelectorComponent as ɵif} from './structure/filter/feature/menu/field-selector/field-selector.component';\nexport {FilterMenuTriggerComponent as ɵhz} from './structure/filter/feature/menu/filter-menu-trigger.component';\nexport {FilterMenuComponent as ɵhx} from './structure/filter/feature/menu/filter-menu.component';\nexport {FilterMenuFeatureModule as ɵhl} from './structure/filter/feature/menu/filter-menu.feature-module';\nexport {FilterTypeSelectorComponent as ɵid} from './structure/filter/feature/menu/filter-selector/filter-type-selector.component';\nexport {FilterIconComponent as ɵhw} from './structure/filter/feature/menu/icon/filter-icon.component';\nexport {FilterValueComponent as ɵie} from './structure/filter/feature/menu/value/filter-value.component';\nexport {UniqueValueListComponent as ɵlu} from './structure/filter/feature/unique/unique-value-list.component';\nexport {UniqueValueListModule as ɵlt} from './structure/filter/feature/unique/unique-value-list.module';\nexport {FormationApiModule as ɵgo} from './structure/formation/core/api/formation.api-module';\nexport {FormationCommandInvoker as ɵgq} from './structure/formation/core/api/formation.command-invoker';\nexport {FormationEventRepository as ɵgp} from './structure/formation/core/api/formation.event-repository';\nexport {FormationWarehouse as ɵgs} from './structure/formation/core/api/formation.warehouse';\nexport {RowSelectionModeArchive as ɵec} from './structure/formation/core/api/mode/row-selection-mode.archive';\nexport {SelectionModeSetEventHandler as ɵeb} from './structure/formation/core/api/mode/selection-mode-set.event-handler';\nexport {RowSelectedArchive as ɵdz} from './structure/formation/core/api/row-selected/row-selected.archive';\nexport {RowSelectedReadModel as ɵea} from './structure/formation/core/api/row-selected/row-selected.read-model';\nexport {SelectedRow as ɵqu} from './structure/formation/core/api/row-selected/selected-row';\nexport {SelectedRowChangedEventHandler as ɵdy} from './structure/formation/core/api/row-selected/selected-row-changed.event-handler';\nexport {RowSelectEnabledRepository as ɵpm} from './structure/formation/core/api/set-enabled/row-select-enabled.repository';\nexport {RowSelectionTypeArchive as ɵgu} from './structure/formation/core/api/type/row-selection-type.archive';\nexport {FormationDomainWarehouse as ɵgt} from './structure/formation/core/domain-read/formation.domain-warehouse';\nexport {FormationManagerFactory as ɵm} from './structure/formation/core/domain/core/formation.manager-factory';\nexport {FormationDispatcher as ɵds} from './structure/formation/core/domain/formation.dispatcher';\nexport {FormationDomainCommandInvoker as ɵgr} from './structure/formation/core/domain/formation.domain-command-invoker';\nexport {FormationDomainModule as ɵdr} from './structure/formation/core/domain/formation.domain-module';\nexport {SetSelectionModeCommandHandler as ɵdu} from './structure/formation/core/domain/mode/set-selection-mode.command-handler';\nexport {SelectAllRowsCommandHandler as ɵdv} from './structure/formation/core/domain/select-all/select-all-rows.command-handler';\nexport {SetEnabledSelectionCommandHandler as ɵdt} from './structure/formation/core/domain/set-enabled/set-enabled-selection.command-handler';\nexport {ToggleSelectedRowCommandHandler as ɵdx} from './structure/formation/core/domain/toggle/toggle-selected-row.command-handler';\nexport {UnselectAllRowsCommandHandler as ɵdw} from './structure/formation/core/domain/unselect-all/unselect-all-rows.command-handler';\nexport {FormationFeatureModule as ɵgn} from './structure/formation/feature/formation.feature-module';\nexport {SelectionGate as ɵri} from './structure/formation/feature/gate/selection.gate';\nexport {CellEditConfig as ɵhk} from './structure/grid/core/api/edit/cell-edit.config';\nexport {StructureInfoPanelConfigService as ɵpk} from './structure/grid/core/api/panel/info/structure.info-panel-config.service';\nexport {StructureInfoPanelArchive as ɵlm} from './structure/grid/core/api/panel/info/structure.info-panel.archive';\nexport {StructureInfoPanelConfigConverter as ɵlp} from './structure/grid/core/api/panel/info/structure.info-panel.config-converter';\nexport {StructureReadModelRepository as ɵfm} from './structure/grid/core/api/read/structure.read-model-repository';\nexport {StructureReadModelRootConverter as ɵjf} from './structure/grid/core/api/read/structure.read-model-root-converter';\nexport {STRUCTURE_CSS_CLASS_NAME as ɵqp} from './structure/grid/core/api/structure-tokens';\nexport {StructureModule as ɵb,createStructureDefinition as ɵa} from './structure/grid/core/api/structure.module';\nexport {structureCommandHandlers as ɵey,structureDomainEventHandlers as ɵez,structureProviders as ɵfa} from './structure/grid/core/api/structure.providers';\nexport {StructureWarehouse as ɵhh} from './structure/grid/core/api/structure.warehouse';\nexport {CellEditorManager as ɵhj} from './structure/grid/core/domain/edit/cell-editor.manager';\nexport {StructureBlueprintComponent as ɵqo} from './structure/grid/feature/blueprint/structure.blueprint.component';\nexport {StructureDialogColumnManagerComponent as ɵkw} from './structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component';\nexport {StructureDialogColumnManagerService as ɵkz} from './structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service';\nexport {StructureColumnManagerIconComponent as ɵky} from './structure/grid/feature/column-manager/icon/structure.column-manager-icon.component';\nexport {StructureMenuColumnManagerComponent as ɵkx} from './structure/grid/feature/column-manager/menu/structure.menu-column-manager.component';\nexport {StructureColumnManagerComponent as ɵku} from './structure/grid/feature/column-manager/structure.column-manager.component';\nexport {StructureColumnManagerModule as ɵkt} from './structure/grid/feature/column-manager/structure.column-manager.module';\nexport {StructureCellEditBooleanComponent as ɵqk} from './structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component';\nexport {StructureCellEditComponent as ɵqj} from './structure/grid/feature/content/cell/edit/structure.cell-edit.component';\nexport {StructureCellComponent as ɵqi} from './structure/grid/feature/content/cell/structure.cell.component';\nexport {StructureRowComponent as ɵqh} from './structure/grid/feature/content/row/structure-row.component';\nexport {StructureContainerComponent as ɵql} from './structure/grid/feature/content/structure-container.component';\nexport {StructureContentComponent as ɵqg} from './structure/grid/feature/content/structure-content.component';\nexport {StructureCellEditCloseAllService as ɵpr} from './structure/grid/feature/edit/structure.cell-edit-close-all.service';\nexport {StructureCellEditArchive as ɵhi} from './structure/grid/feature/edit/structure.cell-edit.archive';\nexport {StructureCellEditStore as ɵpl} from './structure/grid/feature/edit/structure.cell-edit.store';\nexport {StructureEditModeArchive as ɵpj} from './structure/grid/feature/edit/structure.edit-mode.archive';\nexport {StructureColumnHeaderGate as ɵrb} from './structure/grid/feature/gate/column/header/structure-column-header.gate';\nexport {StructureColumnMenuGate as ɵrm} from './structure/grid/feature/gate/column/menu/structure-column-menu.gate';\nexport {StructureL10nGate as ɵrj} from './structure/grid/feature/gate/l10n/structure-l10n.gate';\nexport {StructurePagingGate as ɵrd} from './structure/grid/feature/gate/paging/structure-paging.gate';\nexport {StructureInfoPanelGate as ɵro} from './structure/grid/feature/gate/panel/info/structure-info-panel.gate';\nexport {StructurePanelGate as ɵrk} from './structure/grid/feature/gate/panel/structure-panel.gate';\nexport {StructureRowClassGate as ɵrp} from './structure/grid/feature/gate/row/class/structure-row-class.gate';\nexport {StructureRowColoringGate as ɵrr} from './structure/grid/feature/gate/row/coloring/structure-row-coloring.gate';\nexport {StructureRowDetailGate as ɵrl} from './structure/grid/feature/gate/row/detail/structure-row-detail.gate';\nexport {StructureRowStyleGate as ɵrq} from './structure/grid/feature/gate/row/style/structure-row-style.gate';\nexport {StructureSearchingGate as ɵrf} from './structure/grid/feature/gate/searching/structure-searching.gate';\nexport {SourceLoadingGate as ɵru} from './structure/grid/feature/gate/source/source-loading.gate';\nexport {StructureSelectionGate as ɵrh} from './structure/grid/feature/gate/source/structure-selection.gate';\nexport {structureGates as ɵra} from './structure/grid/feature/gate/structure.gates';\nexport {StructureGateway as ɵpi} from './structure/grid/feature/gate/structure.gateway';\nexport {SelectAllComponent as ɵqf} from './structure/grid/feature/header/column/select-all/select-all.component';\nexport {StructureHeaderColumnsComponent as ɵqb} from './structure/grid/feature/header/column/structure-header-columns.component';\nexport {StructureHeaderFiltersComponent as ɵqc} from './structure/grid/feature/header/filters/structure-header-filters.component';\nexport {StructureHeaderFilterComponent as ɵqe} from './structure/grid/feature/header/filters/structure.header-filter.component';\nexport {StructureHeaderGroupsComponent as ɵqd} from './structure/grid/feature/header/group/structure-header-groups.component';\nexport {StructureColumnConfigComponent as ɵlv} from './structure/grid/feature/header/menu/config/structure.column-config.component';\nexport {StructureColumnMenuConfigArchive as ɵlw} from './structure/grid/feature/header/menu/config/structure.column-menu-config.archive';\nexport {StructureColumnMenuArrowIconComponent as ɵml} from './structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component';\nexport {StructureColumnMenuIconComponent as ɵmk} from './structure/grid/feature/header/menu/icon/structure.column-menu-icon.component';\nexport {StructureColumnConfigColumnHideComponent as ɵmi} from './structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component';\nexport {StructureColumnConfigColumnMoveComponent as ɵmj} from './structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component';\nexport {StructureColumnConfigSortComponent as ɵmh} from './structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component';\nexport {StructureColumnConfigService as ɵmg} from './structure/grid/feature/header/menu/structure.column-config.service';\nexport {StructureColumnMenuModule as ɵls} from './structure/grid/feature/header/menu/structure.column-menu.module';\nexport {StructureColumnConfigTriggerComponent as ɵmf} from './structure/grid/feature/header/menu/trigger/structure.column-config-trigger.component';\nexport {StructureQuickFiltersComponent as ɵqn} from './structure/grid/feature/header/quick-filters/structure.quick-filters.component';\nexport {StructureHeaderBottomEnabledArchive as ɵpn} from './structure/grid/feature/header/structure-header-bottom-enabled.archive';\nexport {StructureHeaderTopEnabledArchive as ɵps} from './structure/grid/feature/header/structure-header-top-enabled.archive';\nexport {StructureHeaderComponent as ɵqa} from './structure/grid/feature/header/structure-header.component';\nexport {StructureFooterPanelComponent as ɵqz} from './structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nexport {StructureFooterPanelConfigArchive as ɵpw} from './structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nexport {StructureBannerPanel as ɵqy} from './structure/grid/feature/panel/banner-panels/structure-banner-panel';\nexport {StructureTitlePanelComponent as ɵqx} from './structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component';\nexport {StructureTitlePanelConfigArchive as ɵpv} from './structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive';\nexport {StructureInfoIconComponent as ɵlo} from './structure/grid/feature/panel/info/icon/structure.info-icon.component';\nexport {StructureInfoModalComponent as ɵln} from './structure/grid/feature/panel/info/info-modal/structure-info-modal.component';\nexport {StructureInfoPanelComponent as ɵll} from './structure/grid/feature/panel/info/structure.info-panel.component';\nexport {StructureInfoPanelModule as ɵkq} from './structure/grid/feature/panel/info/structure.info-panel.module';\nexport {StructureTopPanelComponent as ɵlr} from './structure/grid/feature/panel/top/structure.top-panel.component';\nexport {StructureTopPanelModule as ɵlq} from './structure/grid/feature/panel/top/structure.top-panel.module';\nexport {StructureRowDetailConfigArchive as ɵpt} from './structure/grid/feature/row-detail/structure.row-detail.config-archive';\nexport {StructureRowDetailService as ɵpu} from './structure/grid/feature/row-detail/structure.row-detail.service';\nexport {StructureRowDetailViewComponent as ɵqq} from './structure/grid/feature/row-detail/view/structure.row-detail-view.component';\nexport {structureRowDetailViewItem as ɵqs,structureRowDetailViewTemplate as ɵqt} from './structure/grid/feature/row-detail/view/structure.row-detail-view.tokens';\nexport {SchemaCssClassManager as ɵpq} from './structure/grid/feature/schema/schema-css-class.manager';\nexport {StructureThemeConverter as ɵla} from './structure/grid/feature/schema/structure.theme.converter';\nexport {structureComponentToken as ɵpx} from './structure/grid/feature/structure-component-token';\nexport {StructureDefinition as ɵpy} from './structure/grid/feature/structure-definition';\nexport {fabricImports as ɵfc} from './structure/grid/feature/structure-fabric.imports';\nexport {StructureIdGenerator as ɵpp} from './structure/grid/feature/structure-id.generator';\nexport {structureParentComponent as ɵqm} from './structure/grid/feature/structure-parent-component';\nexport {StructureComponent as ɵph,compositionIdFactoryForGrid as ɵpf,schemaIdFactoryForGrid as ɵpg,structureIdFactoryForGrid as ɵpe} from './structure/grid/feature/structure.component';\nexport {PagingApiModule as ɵfg} from './structure/paging/core/api/paging.api-module';\nexport {PagingCommandInvoker as ɵfh} from './structure/paging/core/api/paging.command-invoker';\nexport {PagingEventRepository as ɵfn} from './structure/paging/core/api/paging.event-repository';\nexport {PagingWarehouse as ɵfj} from './structure/paging/core/api/paging.warehouse';\nexport {PagingConverter as ɵfp} from './structure/paging/core/domain-read/paging.converter';\nexport {PagingDomainWarehouse as ɵfk} from './structure/paging/core/domain-read/paging.domain-warehouse';\nexport {PagingDomainEventRepository as ɵfo} from './structure/paging/core/domain-read/paging.domain.event-repository';\nexport {PagingRepository as ɵfl} from './structure/paging/core/domain-read/paging.repository';\nexport {ChangePagesizeCommandHandler as ɵbh} from './structure/paging/core/domain/change-pagesize/change-pagesize.command-handler';\nexport {NextPageCommandHandler as ɵbf} from './structure/paging/core/domain/next-page/next-page.command-handler';\nexport {PagingDispatcher as ɵbd} from './structure/paging/core/domain/paging.dispatcher';\nexport {PagingDomainModule as ɵbc} from './structure/paging/core/domain/paging.domain-module';\nexport {PagingDomainCommandInvoker as ɵfi} from './structure/paging/core/domain/paging.domain.command-invoker';\nexport {PagingManagerFactory as ɵj} from './structure/paging/core/domain/paging.manager-factory';\nexport {PrevPageCommandHandler as ɵbg} from './structure/paging/core/domain/prev-page/prev-page.command-handler';\nexport {SetPagingCommandHandler as ɵbe} from './structure/paging/core/domain/set/set-paging.command-handler';\nexport {AlternativePagingNavigatorComponent as ɵgb} from './structure/paging/feature/advanced/navigator/alternative-paging-navigator.component';\nexport {AlternativePagingPagesComponent as ɵgc} from './structure/paging/feature/advanced/pages/alternative-paging-pages.component';\nexport {PagingNavigatorComponent as ɵfx} from './structure/paging/feature/basic/navigator/paging-navigator.component';\nexport {PagingStatsComponent as ɵga} from './structure/paging/feature/basic/stats/paging-stats.component';\nexport {PagingGate as ɵre} from './structure/paging/feature/gate/paging.gate';\nexport {PagingDisplayModeArchive as ɵfw} from './structure/paging/feature/mode/paging-display-mode.archive';\nexport {PagingDefinition as ɵpz} from './structure/paging/feature/paging-definition';\nexport {PagingComponent as ɵfq} from './structure/paging/feature/paging.component';\nexport {PagingFeatureModule as ɵff} from './structure/paging/feature/paging.feature-module';\nexport {PagingSelectComponent as ɵfz} from './structure/paging/feature/select/paging-select.component';\nexport {SearchApiModule as ɵgw} from './structure/search/core/api/search.api-module';\nexport {SearchCommandInvoker as ɵgx} from './structure/search/core/api/search.command-invoker';\nexport {SearchEventRepository as ɵhb} from './structure/search/core/api/search.event-repository';\nexport {SearchWarehouse as ɵgz} from './structure/search/core/api/search.warehouse';\nexport {SearchDomainEventRepository as ɵhc} from './structure/search/core/domain-read/search.domain-event-repository';\nexport {SearchDomainWarehouse as ɵha} from './structure/search/core/domain-read/search.domain-warehouse';\nexport {SetConfigSearchingCommandHandler as ɵbx} from './structure/search/core/domain/config/set-config-searching.command-handler';\nexport {ConfigSearchingSetEventHandler as ɵcc} from './structure/search/core/domain/enabled/config-searching-set.event-handler';\nexport {SearchingEnabledArchive as ɵcd} from './structure/search/core/domain/enabled/searching-enabled.archive';\nexport {SearchHighlightArchive as ɵbv} from './structure/search/core/domain/highlight/search-highlight.archive';\nexport {SearchPhraseSetEventHandler as ɵca} from './structure/search/core/domain/phrase/search-phrase-set.event-handler';\nexport {SearchPhraseArchive as ɵcb} from './structure/search/core/domain/phrase/search-phrase.archive';\nexport {StructureSetSearchPhraseCommandHandler as ɵby} from './structure/search/core/domain/phrase/set-phrase/structure.set-search-phrase.command-handler';\nexport {SearchPlaceholderArchive as ɵbw} from './structure/search/core/domain/placeholder/search-placeholder.archive';\nexport {SearchDispatcher as ɵbu} from './structure/search/core/domain/search.dispatcher';\nexport {SearchDomainCommandInvoker as ɵgy} from './structure/search/core/domain/search.domain-command-invoker';\nexport {SearchDomainModule as ɵbt} from './structure/search/core/domain/search.domain-module';\nexport {SearchManagerFactory as ɵs} from './structure/search/core/domain/search.manager-factory';\nexport {SearchingGate as ɵrg} from './structure/search/feature/gate/searching.gate';\nexport {SearchIconComponent as ɵhd} from './structure/search/feature/icon/search-icon.component';\nexport {SearchComponent as ɵhg} from './structure/search/feature/search.component';\nexport {SearchFeatureModule as ɵgv} from './structure/search/feature/search.feature-module';\nexport {SortingApiModule as ɵge} from './structure/sorting/core/api/sorting.api-module';\nexport {SortingCommandInvoker as ɵgf} from './structure/sorting/core/api/sorting.command-invoker';\nexport {SetSortOrderCommandHandler as ɵbm} from './structure/sorting/core/domain/order/set-sort-order.command-handler';\nexport {SetSortingCommandHandler as ɵbl} from './structure/sorting/core/domain/set-config/set-sorting.command-handler';\nexport {SortingDispatcher as ɵbj} from './structure/sorting/core/domain/sorting.dispatcher';\nexport {SortingDomainCommandInvoker as ɵgg} from './structure/sorting/core/domain/sorting.domain-command-invoker';\nexport {SortingDomainModule as ɵbi} from './structure/sorting/core/domain/sorting.domain-module';\nexport {ToggleSortCommandHandler as ɵbk} from './structure/sorting/core/domain/toggle/toggle-sort.command-handler';\nexport {StructureSortingGate as ɵrt} from './structure/sorting/feature/gate/structure-sorting.gate';\nexport {SortingFeatureModule as ɵgd} from './structure/sorting/feature/sorting.feature-module';\nexport {SourceEventService as ɵin} from './structure/source/core/api/edit/source-event.service';\nexport {SourceApiModule as ɵii} from './structure/source/core/api/source.api-module';\nexport {SourceCommandInvoker as ɵik} from './structure/source/core/api/source.command-invoker';\nexport {SourceWarehouse as ɵfv} from './structure/source/core/api/source.warehouse';\nexport {SourceDomainWarehouse as ɵim} from './structure/source/core/domain-read/source.domain-warehouse';\nexport {ItemEntityFactory as ɵry} from './structure/source/core/domain/core/item/item.entity-factory';\nexport {SourceManagerFactory as ɵl} from './structure/source/core/domain/core/source.manager-factory';\nexport {SourceSetLoadingCommandHandler as ɵdj} from './structure/source/core/domain/loading/source-set-loading.command-handler';\nexport {DeleteOriginItemCommandHandler as ɵdm} from './structure/source/core/domain/origin/delete/delete-origin-item.command-handler';\nexport {StructureEditSourceItemCommandHandler as ɵdl} from './structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler';\nexport {OriginId as ɵqw} from './structure/source/core/domain/origin/origin-id';\nexport {OriginItemEntity as ɵqv} from './structure/source/core/domain/origin/origin-item-entity';\nexport {SetOriginCommandHandler as ɵdk} from './structure/source/core/domain/origin/set-origin/set-origin.command-handler';\nexport {StructureOriginChangedEventHandler as ɵdn} from './structure/source/core/domain/origin/structure.origin-changed.event-handler';\nexport {StructureSourceOriginArchive as ɵdo} from './structure/source/core/domain/origin/structure.source-origin.archive';\nexport {StructurePreparedItemsArchive as ɵdq} from './structure/source/core/domain/prepared/structure.prepared-items.archive';\nexport {StructurePreparedItemsEventHandler as ɵdp} from './structure/source/core/domain/prepared/structure.prepared-items.event-handler';\nexport {SourceConverter as ɵij} from './structure/source/core/domain/source.converter';\nexport {SourceDispatcher as ɵdi} from './structure/source/core/domain/source.dispatcher';\nexport {SourceDomainEventPublisher as ɵbz} from './structure/source/core/domain/source.domain-event.publisher';\nexport {SourceDomainModule as ɵdh} from './structure/source/core/domain/source.domain-module';\nexport {SourceDomainCommandInvoker as ɵil} from './structure/source/core/domain/source.domain.command-invoker';\nexport {ActiveFilterMenuTriggerDirective as ɵli} from './structure/source/feature/counter/filter/active-filter-menu-trigger.directive';\nexport {ActiveFilterMenuComponent as ɵlk} from './structure/source/feature/counter/filter/active-filter-menu.component';\nexport {ActiveFilterService as ɵlj} from './structure/source/feature/counter/filter/active-filter.service';\nexport {SourceCounterFeatureModule as ɵlh} from './structure/source/feature/counter/source-counter.feature-module';\nexport {EmptySourceComponent as ɵmn} from './structure/source/feature/empty/empty-source.component';\nexport {EmptySourceFeatureModule as ɵmm} from './structure/source/feature/empty/empty-source.feature-module';\nexport {SourceFeatureModule as ɵih} from './structure/source/feature/source.feature-module';\nexport {SummariesApiModule as ɵip} from './structure/summaries/core/api/summaries.api-module';\nexport {SummariesCommandInvoker as ɵiq} from './structure/summaries/core/api/summaries.command-invoker';\nexport {SummariesEventRepository as ɵiv} from './structure/summaries/core/api/summaries.event-repository';\nexport {SummariesWarehouse as ɵix} from './structure/summaries/core/api/summaries.warehouse';\nexport {StructureSummariesConfigArchive as ɵit} from './structure/summaries/core/domain-read/config/structure.summaries-config.archive';\nexport {StructureSummariesPanelConfigConverter as ɵis} from './structure/summaries/core/domain-read/config/structure.summaries-panel.config-converter';\nexport {StructureSummariesEnabledSetEventHandler as ɵem} from './structure/summaries/core/domain-read/enabled/structure.summaries-enabled-set.event-handler';\nexport {SummariesEnabledArchive as ɵen} from './structure/summaries/core/domain-read/enabled/summaries-enabled-archive.service';\nexport {SummariesDomainEventRepository as ɵiw} from './structure/summaries/core/domain-read/summaries.domain-event-repository';\nexport {SummariesDomainWarehouse as ɵiy} from './structure/summaries/core/domain-read/summaries.domain-warehouse';\nexport {BooleanSummariesCalculator as ɵef} from './structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator';\nexport {DateSummariesCalculator as ɵeg} from './structure/summaries/core/domain/calculation/date/date-summaries.calculator';\nexport {NumberSummariesCalculator as ɵeh} from './structure/summaries/core/domain/calculation/number/number-summaries.calculator';\nexport {StringSummariesCalculator as ɵei} from './structure/summaries/core/domain/calculation/string/string-summaries.calculator';\nexport {SummariesCalculator as ɵq} from './structure/summaries/core/domain/calculation/summaries.calculator';\nexport {SUMMARIES_CALCULATORS as ɵp} from './structure/summaries/core/domain/calculation/summaries.calculators.token';\nexport {UnknownSummariesCalculator as ɵej} from './structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator';\nexport {StructureSummariesPanelConfig as ɵiu} from './structure/summaries/core/domain/config/structure.summaries-panel.config';\nexport {StructureSetSummariesEnabledCommandHandler as ɵel} from './structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler';\nexport {SummariesDispatcher as ɵek} from './structure/summaries/core/domain/summaries.dispatcher';\nexport {SummariesDomainCommandInvoker as ɵir} from './structure/summaries/core/domain/summaries.domain-command-invoker';\nexport {SummariesDomainModule as ɵed} from './structure/summaries/core/domain/summaries.domain-module';\nexport {SummariesManagerFactory as ɵo} from './structure/summaries/core/domain/summaries.manager.factory';\nexport {provideSummariesCalculator as ɵee} from './structure/summaries/core/domain/summaries.providers';\nexport {StructureSummariesGate as ɵrn} from './structure/summaries/feature/gate/structure-summaries.gate';\nexport {StructureSummariesPanelComponent as ɵiz} from './structure/summaries/feature/panel/structure.summaries-panel.component';\nexport {SummariesFeatureModule as ɵio} from './structure/summaries/feature/summaries.feature-module';\nexport {VerticalFormationApiModule as ɵjb} from './structure/vertical-formation/core/api/vertical-formation.api-module';\nexport {VerticalFormationCommandInvoker as ɵji} from './structure/vertical-formation/core/api/vertical-formation.command-invoker';\nexport {VerticalFormationWarehouse as ɵjg} from './structure/vertical-formation/core/api/vertical-formation.warehouse';\nexport {ScrollBarPositionSetEventHandler as ɵew} from './structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nexport {VerticalFormationScrollBarPositionArchive as ɵex} from './structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive';\nexport {VerticalFormationDomainWarehouse as ɵjh} from './structure/vertical-formation/core/domain-read/vertical-formation.domain-warehouse';\nexport {VerticalFormationRepository as ɵjd} from './structure/vertical-formation/core/domain-read/vertical-formation.repository';\nexport {StructureSetHeightCommandHandler as ɵeu} from './structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler';\nexport {SetScrollBarPositionCommandHandler as ɵev} from './structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler';\nexport {SetScrollPositionCommandHandler as ɵeq} from './structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler';\nexport {SetVerticalScrollEnabledCommandHandler as ɵer} from './structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler';\nexport {SetRowHeightBasedOnThemeCommandHandler as ɵes} from './structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nexport {SetRowHeightCommandHandler as ɵet} from './structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler';\nexport {VerticalFormationConverter as ɵjc} from './structure/vertical-formation/core/domain/vertical-formation.converter';\nexport {VerticalFormationDispatcher as ɵep} from './structure/vertical-formation/core/domain/vertical-formation.dispatcher';\nexport {VerticalFormationDomainCommandInvoker as ɵjj} from './structure/vertical-formation/core/domain/vertical-formation.domain-command-invoker';\nexport {VerticalFormationDomainModule as ɵeo} from './structure/vertical-formation/core/domain/vertical-formation.domain-module';\nexport {VerticalFormationFactory as ɵn} from './structure/vertical-formation/core/domain/vertical-formation.factory';\nexport {VerticalFormationGate as ɵrx} from './structure/vertical-formation/feature/gate/vertical-formation.gate';\nexport {VerticalFormationFeatureModule as ɵja} from './structure/vertical-formation/feature/vertical-formation.feature-module';"],"names":["GuiDataType","GuiCellView","GuiNumberCellView","GuiStringCellView","GuiBooleanCellView","GuiDateCellView","GuiTheme","GuiRowColoring","GuiSortingOrder","GuiPagingDisplay","GuiColumnAlign","GuiRowSelectionType","GuiRowSelectionMode","ColumnAlign","Injectable","Component","ContentChild","TemplateRef","Input","EventEmitter","Directive","ContentChildren","Output","InjectionToken","_a","EntityId","hermesMap","hermesFilter","hermesTake","hermesSwitchMap","isPlatformBrowser","ViewEncapsulation","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","HermesSubject","hermesTakeUntil","Archive","ReadModelRootId","AggregateId","ChangeDetectionStrategy","EventRepository","DomainEventBus","DomainEvent","AggregateEvent","Command","CommandDispatcher","AggregateRepository","DomainEventPublisher","HermesModule","DomainModule","NgModule","CommonModule","ReadModelObject","Reactive","singleFromObservable","ApiModule","Pipe","HermesReplaySubject","FeatureModule","FabricModule","Theme","Injector","FabricDialogService","declarations","FabricDrawerService","FormBuilder","Entity","AggregateArchive","Optional","ReactiveFormsModule","DomSanitizer","fromRxJsObservable","debounceTime","RandomStringGenerator","hermesDistinctUntilChanged","toRxJsObservable","zip","AggregateRoot","AggregateFactory","InMemoryStore","InMemoryAggregateStore","AggregateStoreRegister","CreateAggregateCommand","EventDrivenRepository","FabricModalThemeService","hermesTimer","SortOrder","FabricPlacement","FabricInlineDialogService","ReadModelRoot","InMemoryReadModelStore","combineLatest","Observable","throttleTime","hermesEmpty","flatMap","hermesFromEvent","NgZone","DomainObject","KeyMap","Placement","HermesId","ComponentFactoryResolver","CellValueType","ReadModelEntity","ReadModelEntityId","ReadModelRootRepository","Attribute","Renderer2","exportDeclarations","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","imports","entryComponents","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED"],"mappings":"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"}