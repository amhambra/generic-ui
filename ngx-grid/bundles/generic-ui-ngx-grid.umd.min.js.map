{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/global-structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/sort-status.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/composition-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/init-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/init-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition-event.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.event-service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/global-composition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-column-header.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/structure-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/schema-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/schema-top-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/schema-bottom-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/column-header.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/column-manager/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","FABRIC","MATERIAL","LIGHT","DARK","NONE","EVEN","ODD","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnAggregationConverter","convert","aggregationConfig","columnAggregationConfig","undefined","enabled","aggregationTypes","convertAggregationTypes","configAggregationTypes","_this","forEach","aggregationType","convertAggregationType","AggregationType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnConverter","columnTypeConverter","columnAggregationConverter","columnViewConverter","config","map","convertColumn","guiColumn","columnConfig","header","field","width","aggregation","GridThemeConverter","theme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","onPageChange","page","emit","onPageSizeChange","pageSize","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","paging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","complete","takeUntil","SmartComponent","PagingRepository","structureRepository","on","onStructure","pipe","filter","structure","getId","toString","getPaging","StructureRepository","StructureId","id","AggregateId","globalStructureId","PagingReadModelService","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","payload","Command","ChangePagesizeCommand","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","PagingCommandService","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","pagerTop","changePagerBottom","pagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","SourceReadModelService","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","StructurePagingComponent","pagingQueryService","pagingCommandService","sourceQueryService","alternativeDisplay","subscribe","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","pageSizes","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSize","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoModalComponent","StructureInfoPanelComponent","dialog","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","openInfo","open","FabricDialogService","StructureInfoPanelModule","entryComponents","ViewTemplatesComponent","getTemplate","textTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","read","TemplateRef","ChangedValueEmitter","subject$","select","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","numberTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","checkboxRef","querySelector","debounceTime","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","getById","aggregateId","save","aggregate","CompositionAggregateRepository","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","injector","Injector","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ASC","DESC","ViewEntity","columnView","templateFunction","getCellView","getTemplateFunction","ColumnEntity","columnId","columnField","sortStatus","SortStatus","getColumnConfig","getColumnId","setEnabled","getField","getHeader","getDataType","setSortStatus","setView","getView","CellTemplateWithContext","viewTemplate","editTemplate","context","fieldId","getFieldId","getSortStatus","isAscSort","isDescSort","isNoSort","CellContext","FieldId","CellTemplateWithAccessor","editable","accessor","columnFieldId","ColumnDefinition","sort","setHeader","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","entity","getAccessor","getColumn","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","column","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","getWidth","createColumns","Composition","uid","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","getAllColumns","getActiveHeaderColumns","getHeaderColumns","getTemplateColumns","getContainerWidth","isReady","isResizeWidthEnabled","composition","equalsByColumns","ReadModel","CompositionConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","toReadModel","InMemoryReadModelStore","CompositionInitedEvent","DomainEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getCompositionId","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","domainEventBus","inMemoryCompositionQueryStore","composition$","ofEvent","event","DomainEventBus","CompositionRepository","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionQueryProviders","inMemoryCompositionProviders","ColumnId","ColumnEntityFactory","data","isArray","createColumn","params","columnEntity","RandomStringGenerator","generate","convertWidth","columnEntities","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","AggregateEvent","CompositionContainerWidthSetAggregateEvent","compositionId","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","PERCENTAGE","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","setWidth","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","Number","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","setContainerWidth","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","setColumns","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","changeSort","sortParams","param","direction","this_1","sortParams_1","sortParams_1_1","moveLeft","findColumnIndex","move","moveRight","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","getConfig","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionAggregate","columnsParams","resizeWidthEnabled","columnFactory","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","setResizeWidth","enableColumn","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","RootAggregate","Boolean","Aggregate","CompositionAggregateFactory","InitCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","CompositionChangeSortStatusCommand","getSortParams","CompositionSetColumnEnabledCommand","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","init","setColumnEnabled","InitCompositionCommandHandler","compositionAggregateRepository","compositionAggregateFactory","domainEventPublisher","handle","command","compositionAggregate","DomainEventPublisher","CommandHandler","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","getAggregateId","SetColumnsCommandHandler","compositionEventConverter","setColumnsParams","publishEvents","events","getEvents","domainEvents","publish","SetCompositionWidthCommandHandler","columnConverter","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","CompositionChangeSortStatusCommandHandler","ColumnField","getValue","ColumnFieldFactory","CompositionEventService","onColumnsChanged","onWidthChanged","onContainerWidthChanged","getPayload","CompositionId","globalCompositionId","CompositionReadModelService","compositionRepository","onWidth","onContainerWidth","onWidthForEachColumn","onHeaderColumns","onAllColumns","onSortOrder","onTemplateColumns","onResizeWidth","CompositionCommandService","compositionDispatcher","disableColumn","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","CompositionSetColumnEnabledCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","commandProviders","COMMAND_HANDLERS","multi","readProviders","DOMAIN_EVENT_HANDLERS","compositionProviders","components","exportDeclarations","CompositionModule","ReactiveFormsModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedAggregateEvent","PagesizeChangedAggregateEvent","PagingAggregate","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","pagingConfig","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","PagingAggregateFactory","createDefault","createFromConfig","Logger","LocalPagingCommandService","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingReadModelService","Observable","SetSchemaCommand","height","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SetSchemaThemeCommand","SetRowColoringCommand","coloring","ChangeSchemaTopHeaderCommand","ChangeSchemaBottomHeaderCommand","SchemaDispatcher","setSchema","changeVerticalGrid","changeHorizontalGrid","setTheme","setRowColoring","changeTopHeader","changeBottomHeader","SchemaRepository","getSchema","SchemaReadModelService","schemaRepository","onSchema","onSingleSchema","onHeight","schema","getHeight","onContainerHeight","getContainerHeight","onCssClasses","getCssClasses","onColumnHeader","getColumnHeader","SchemaCommandService","schemaDispatcher","schemaQueryService","setHeight","toggleVerticalGrid","css","verticalGrid","grid","toggleHorizontalGrid","horizontalGrid","toggleTopHeader","columnHeader","isTopHeaderEnabled","toggleBottomHeader","isBottomHeaderEnabled","LocalSchemaCommandService","setDefaultSchema","MAX_SAFE_INTEGER","LocalSchemaReadModelService","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","FormationDispatcher","setDefault","toggleSelectedRow","FormationCommandService","formationDispatcher","setDefaultFormation","LocalFormationCommandService","FormationRepository","onFormation","getFormation","FormationReadModelService","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationReadModelService","StructureSetConfigFilterCommand","filterConfig","StructureToggleFilterCommand","externalFilterId","filterValue","StructureFilterCommandService","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","InitStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","StructureSetConfigSearchingCommand","searchConfig","InitFieldsCommand","StructureSetSearchPhraseCommand","phrase","SetSortOrderCommand","sortOrder","getSortOrder","StructureCommandService","structureFilterCommandService","sourceDispatcher","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setSearchingConfig","search","LocalStructureCommandService","StructureReadModelService","onVerticalScrollEnabled","isVerticalScrollEnabled","LocalStructureReadModelService","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandService","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandService","LocalSourceReadModelService","LocalCompositionCommandService","LocalCompositionReadModelService","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","renderer","createRenderer","cssHostRef","classes","diff","updateState","renderCssClasses","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","SchemaRowColoring","RendererFactory2","Archive","archive$","BehaviorSubject","onValue","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureAggregationPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureAggregationArchive","StructureAggregationPanelConfigConverter","StructureSetAggregationEnabledCommand","StructureAggregationCommandService","setAggregationEnabled","StructureAggregationConfigService","structureAggregationPanelConfigConverter","structureAggregationArchive","structureAggregationCommandService","aggregationPanelConfig","structureComponentToken","ENTER","StructureGateway","structureCommandService","pagingEventService","sourceCommandService","sourceEventService","schemaCommandService","compositionCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureAggregationConfigService","structureCellEditStore","structureColumnMenuConfigArchive","simpleChanges","nextConfig","editMode","cellEditing","autoResizeWidth","columnHeaderBottom","loading","maxHeight","virtualScroll","sorting","filtering","quickFilters","searching","onItemSelected","skip","onSourceEdited","values","state","StructureCellEditState","NextPageEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","getData","SelectedRowToggledEvent","FormationEventService","structureQueryService","str","getSelectedEntities","StructureColumnMenuConfig","isMainEnabled","isSort","isFilter","isColumns","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","structureIdFactory","generator","compositionIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","compositionQueryService","schemaReadModelService","schemaStylesManager","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","structureHeight","isLoaderVisible","offsetWidth","timer","setStyle","[class.gui-structure-border]","[id]","Renderer2","StructureColumnConfigComponent","compositionReadModelService","StructureColumnConfigService","inlineDialogService","parent","InlineDialogPlacement","Top","close","FabricInlineDialogService","StructureHeaderColumnsComponent","isSortAsc","isSortDesc","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterReadModelRepository","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","headerColumns","filterRowEnabled","containerRef","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationQueryService","rowsList","clearSelectedRows","getIds","strippedId","selectedRowEl","trackByFn","translateY","selectedElements","querySelectorAll","el","ItemEntity","version","getUiId","getVersion","getPosition","isEven","isOdd","equalsById","Entity","StructureRowComponent","StructureCellComponent","inEditMode","cellEditingEnabled","enterEditMode","exitEditMode","forceCheck","valueChanges$","status$","cell","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","combineLatest","combine","sourceSizeHeight","observe","recalculateContainer","enableScrollObservation","disableScrollObservation","containerHeight","topMargin","getTopMargin","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","selectSearchingEnabled","StructureSearchReadModelRepository","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topAggregationPanelEnabled","bottomAggregationPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","pagingReadModel","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","StructureAggregationsChangedEvent","getAggregations","StructureAggregationUiEventsRepository","onAggregationsChanged","StructureAggregationPanelComponent","structureAggregationUiEventsRepository","sourceReadModelService","sourceEmpty","aggregations","isAggregateTypePresent","InMemoryStructureStore","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","StructureAggregateRepository","SelectedRowsList","rowIds","isRowSelected","Formation","selectedRows","selectedRowsList","FormationConverter","rows","SchemaCssClass","getRowColoring","Schema","verticalGridEnabled","horizontalGridEnabled","getTheme","isVerticalGridEnabled","isHorizontalGridEnabled","SchemaColumnHeader","SchemaConverter","convertColumnHeader","isHeaderOnTop","isHeaderOnBottom","PagingConverter","Source","SourceConverter","VerticalFormationReadModel","viewportHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","calcFullHeight","Structure","selectedIds","some","isReadyToDisplay","StructureConverter","formationConverter","schemaConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","schemaAggregate","pagingAggregate","sourceQuery","sourceCoordinator","getVerticalFormation","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","StructureInitedEvent","SetSourceLoadingEvent","SchemaSetEvent","SchemaThemeSetEvent","SchemaHorizontalGridSetEvent","SchemaVerticalGridSetEvent","SchemaTopHeaderChangedEvent","SchemaBottomHeaderChangedEvent","RowColoringSetEvent","PagingSetEvent","FormationSetEvent","VerticalScrollEnabledSetEvent","ScrollPositionSetEvent","OriginSetEvent","getOrigin","StructureFilterToggledEvent","StructureSearchPhraseSetDomainEvent","InMemoryStructureRepository","inMemoryStructureQueryStore","structureIdToStructure","structure$","has","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","VerticalRange","VerticalFormation","scrollPosition","rowHeight","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","itemsInViewport","floor","hiddenElements","abs","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setRowHeight","setLogger","VerticalFormationFactory","vf","AGGREGATION_CALCULATORS","StructureAggregationsChangedAggregateEvent","aggregatedValues","AggregationManager","calculators","calculations","calc","from","add","remove","update","AggregationManagerFactory","StructureFilter","filterId","getFilterValue","setFilterValue","filterString","filterNumber","filterBoolean","toLowerCase","indexOf","FilterId","FilterSettings","filteringEnabled","isFilteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","FieldIdGenerator","Field","aggregationEnabled","accessorMethod","possibleAggregations","assignPossibleAggregations","assignAggregations","getKey","isAggregation","isAggregationEnabled","assignDefaultAggregations","UnknownField","NumberField","StringField","BooleanField","DateField","FieldFactory","fieldIdGenerator","columnType","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureSorter","rank","sorterId","getRank","hasDirection","changeDirection","setDirection","entityOne","entityTwo","valueOne","valueTwo","sortNumber","sortBoolean","sortString","sortUnknown","strOne","strTwo","localeCompare","numOne","numTwo","booleanOne","booleanTwo","sureBoolTwo","a","SorterId","SorterCollection","sorters","setConfig","multiSorting","clear","sorter","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","ColumnHeaderEntity","setHeaderTop","setHeaderBottom","SchemaAggregate","headerHeight","pagerHeight","active","calculateContainerHeight","setVerticalGrid","setHorizontalGrid","getHeaderHeight","getPagerHeight","SearchManager","searchFields","addSearchPhrase","searchPhrase","searchableFields","removeSearchFilters","searchedItems","Set","e_1","StructurePreparedEntitiesSetAggregateEvent","getPreparedItems","StructureAggregate","sourceManager","aggregationManager","sorterCollection","filterCollection","searchManager","fieldCollection","filterManager","calculateSource","editParams","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","createFields","toggleFilter","removeSearchPhrase","searchedEntities","ents","ae","SchemaAggregateFactory","FormationAggregateFactory","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","aggregationManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","schemaAggregateFactory","sorterContainer","filterContainer","fieldContainer","InitStructureCommandHandler","structureAggregateRepository","structureAggregateFactory","SetVerticalScrollEnabledCommandHandler","SetScrollPositionCommandHandler","InitFieldsCommandHandler","ToggleSortCommandHandler","publishSortEvent","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","getEnabled","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","StructurePreparedEntitiesSetEvent","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureAggregationsChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureAggregationEnabledSetEvent","StructureSetAggregationEnabledCommandHandler","structureSourceDomainEventPublisher","AggregationCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","AggregatedValues","BooleanAggregatedValues","truthy","falsy","BooleanAggregationCalculator","booleanValue","truthyForField","falsyForField","DateAggregatedValues","DateAggregationCalculator","NumberAggregatedValues","min","max","average","median","setValueWithPrecision","toFixed","NumberAggregationCalculator","numberValue","sumForField","minForField","maxForField","StringAggregatedValues","StringAggregationCalculator","UnknownAggregatedValues","UnknownAggregationCalculator","provideAggregationCalculator","clazz","aggregationProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","SetPagingCommandHandler","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","newPageSize","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingProviders","SetSchemaVerticalGridCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaThemeCommandHandler","ChangeSchemaBottomHeaderCommandHandler","ChangeSchemaTopHeaderCommandHandler","SetRowColoringCommandHandler","SetSchemaCommandHandler","schemaProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","console","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceRepository","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","searchForm","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureMenuColumnManagerComponent","enabledColumnsCount","reduce","accumulator","toggleColumn","stopPropagation","[class.gui-structure-menu-column-manager]","StructureColumnConfigSortComponent","placement","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuModule","createStructureDefinition","HermesModule","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$1","elementComponents","GridModule","imports$1","declarations$2","providers$1","entryComponents$1"],"mappings":"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GAAiC,CACpC,CACCnuC,QAASqrB,EAAAA,iBACTlO,SAAUs+B,GACVnwB,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAUy+B,GACVtwB,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAU0+B,GACVvwB,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAU2+B,GACVxwB,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAU4+B,GACVzwB,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAU++B,GACV5wB,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAUk/B,GACV/wB,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAUo/B,GACVjxB,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAUu/B,GACVpxB,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAUw/B,GACVrxB,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAUkgC,GACV/xB,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAUolC,GACVj3B,OAAO,GACL,CACFtrB,QAASqrB,EAAAA,iBACTlO,SAAUqlC,GACVl3B,OAAO,GAER8lB,GACAkE,GACA5B,GACAiH,GACAhH,GACA9gB,GACA8hB,IAEGkL,IAGEt0B,GAAax1B,EAAA,CAClB,CACCiK,QAASwrB,EAAAA,sBACTrO,SAAU2iC,GACVx0B,OAAO,GACL,CACFtrB,QAASwrB,EAAAA,sBACTrO,SAAU4iC,GACVz0B,OAAO,GACL,CACFtrB,QAASwrB,EAAAA,sBACTrO,SAAU6iC,GACV10B,OAAO,GACL,CACFtrB,QAASwrB,EAAAA,sBACTrO,SAAUijC,GACV90B,OAAO,IAEL8iB,GAA8B,CACjChD,GACA1J,GACAL,GACAG,GACAyF,GACAE,GACAtR,GACAqqB,GACAnqB,KAGY0sB,GAAkB1sD,EAC3Bs4C,GAEAjjB,GACAG,GAAa,CAEhB4O,GACAwO,GAEAiS,GACAjP,GAEAlW,GAC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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\taggregation?: GuiColumnAggregation;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumns?: boolean;\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/command/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../lib/composition/domain/column-aggregation.config';\nimport { AggregationType } from '../../../../../lib/structure/domain/structure/command/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/structure/domain/schema/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/structure/ui-api/schema/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","import { EventEmitter, Input, Output, OnChanges, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn, GuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{after: any, before: any}> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn  this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation, PLATFORM_ID, Inject } from '@angular/core';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs/';\n\nimport { AggregateId } from '@generic-ui/hermes';\nimport { Structure } from './structure';\n\n\n\nexport abstract class StructureRepository {\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<Structure>;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Paging } from './paging';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { StructureId } from './structure-id';\n\nexport const globalStructureId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Paging } from '../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class PagingReadModelService {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { PagingConfig } from '../../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { PagingConfig } from '../paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class PagingCommandService {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class SourceReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = globalStructureId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = globalStructureId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate pagingCommandService: PagingCommandService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","export class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, Input, OnChanges, Output, EventEmitter } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, Input, EventEmitter, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { Component, ChangeDetectionStrategy, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\t\t\t<p>Generic UI Grid</p>\n\t\t\t<p>version 0.5.6</p>\n\n\t\t\t<p>Links:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/\">Website</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<p>Feedback:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t</li>\n\n\t\t\t</ul>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\t\t\t\n\t\t\t<p *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\n\t\t\t<p *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\t\t\t\n\t\t</ng-container>\n\t\t<div>\n\t\t\t<p (click)=\"openInfo()\">\n\t\t\t\t<button>i</button>\n\t\t\t\tInfo\n\t\t\t</p>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate dialog: FabricDialogService,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo() {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t{{ element }}\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t{{ element }}\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-bold\">{{ element }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-italic\">{{ element }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\" >\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\" >\n\t\t\t<gui-function-view [element]=\"element\" ></gui-function-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\tselect(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { Inject, ChangeDetectionStrategy, ViewEncapsulation, Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<gui-checkbox #checkbox\n\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t  (changed)=\"toggle($event)\"></gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.checkboxRef.nativeElement.querySelector('input[type=\"checkbox\"]');\n\n\t\tinputElement.focus();\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(400),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { Component, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryAggregateStore, AggregateStoreRegister, AggregateId } from '@generic-ui/hermes';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository {\n\n\tabstract getById(compositionId: CompositionId): CompositionAggregate;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): CompositionAggregate {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../cell-view';\n\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortStatus {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from '../../cell-view';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { CellView } from '../../cell-view';\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { SortStatus } from './sort/sort-status';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\nexport class ColumnEntity {\n\n\tcolumnId: ColumnId;\n\n\tcolumnField: ColumnField;\n\n\theader?: string | HeaderTemplate;\n\n\tsortStatus = SortStatus.NONE;\n\n\t// REMOVE\n\twidth?: number;\n\n\tsortable?: boolean;\n\n\tprivate enabled: boolean = true;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\theader?: string | HeaderTemplate,\n\t\t\t\tview?: ViewEntity,\n\t\t\t\twidth?: number) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate{\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortStatus): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { SortStatus } from '../../command/column/sort/sort-status';\nimport { ColumnId } from '../../command/column/column.id';\n\n\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly sortStatus: SortStatus,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortStatus {\n\t\treturn this.sortStatus;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../command/column/field/column-field.id';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId) {\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnField } from '../../command/column/field/column-field';\nimport { SortStatus } from '../../command/column/sort/sort-status';\nimport { HeaderTemplate } from '../../column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { ColumnId } from '../../command/column/column.id';\n\n\nexport class ColumnDefinition {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortStatus;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnId: ColumnId,\n\t\t\t\tenabled: boolean,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tsort: SortStatus = SortStatus.NONE) {\n\t\tthis.field = field;\n\t\tthis.columnId = columnId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.sortStatus = sort;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(this.headerTemplate, this.editTemplate, headerCellContext, this.width, fieldId, this.columnId, this.sortStatus, this.enabled);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tlet accessor = (entity: any) => {\n\t\t\treturn this.templateFunction(this.field.getAccessor()(entity));\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(this.cellTemplate, this.editTemplate, true, accessor, this.width, this.field.getId());\n\t}\n\n\tgetColumn(): any {\n\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../command/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../cell-view';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../command/column/active/active-column.entity';\n\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tcolumn.getColumnId(),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.sortStatus\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.width;\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tactiveColumn.getColumnId(),\n\t\t\ttrue, // remove\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.getSortStatus()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModel, AggregateId } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\n\n\nexport class Composition extends ReadModel {\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: Composition): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionAggregate } from './command/composition.aggregate';\nimport { Composition } from './read/composition';\nimport { ColumnEntity } from './command/column/column.entity';\nimport { ColumnDefinition } from './read/definition/column-definition';\nimport { ActiveColumnEntity } from './command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {}\n\n\tconvert(aggregate: CompositionAggregate): Composition {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\tid = aggregate.getId();\n\n\t\treturn new Composition(id, ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Composition } from '../../../domain/read/composition';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionConverter } from '../../../domain/composition.converter';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<Composition, CompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): Composition {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../composition-id';\nimport { Composition } from './composition';\n\n\nexport abstract class CompositionRepository {\n\n\tabstract on(compositionId: CompositionId): Observable<Composition>;\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionInitedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, takeUntil, tap } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionRepository } from '../../../domain/read/composition.repository';\nimport { Composition } from '../../../domain/read/composition';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionInitedEvent } from '../../../domain/command/init/composition-inited.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/command/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/command/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/command/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/command/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/command/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/command/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/command/column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionRepository implements OnDestroy {\n\n\tprivate readonly composition$ = new ReplaySubject<Composition>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionQueryStore: InMemoryCompositionReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tCompositionInitedEvent,\n\t\t\t\tCompositionResizeWidthSetEvent,\n\t\t\t\tCompositionColumnsSetEvent,\n\t\t\t\tCompositionContainerWidthSetEvent,\n\t\t\t\tCompositionWidthSetEvent,\n\t\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\t\tCompositionColumnMovedRightEvent,\n\t\t\t\tCompositionChangeSortStatusEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst composition = this.inMemoryCompositionQueryStore.getById(aggregateId);\n\n\t\t\t\tthis.composition$.next(composition);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Composition> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((composition: Composition) => composition.getId().toString() === aggregateId.toString()),\n\t\t\t\t\t   filter((composition: Composition) => composition.isReady())\n\t\t\t\t   );\n\t}\n\n}\n","import { InMemoryCompositionAggregateStore } from './command/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './command/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionRepository } from '../../domain/read/composition.repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t},\n];\n\nexport const inMemoryCompositionQueryProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","export class ColumnId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(columnId: ColumnId): boolean {\n\t\treturn this.id === columnId.getId();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField();\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.header = columnConfig.header;\n\t\t}\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tcolumnEntity.setView(new ViewEntity(columnConfig.view));\n\t\t}\n\n\t\tif (columnConfig.width !== undefined) {\n\t\t\tcolumnEntity.width = this.convertWidth(columnConfig.width);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortStatus } from '../sort/sort-status';\nimport { CompositionId } from '../../../composition-id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortStatus.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortStatus.ASC : SortStatus.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId());\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getColumnId().equals(columnId));\n\t}\n\n}\n","import { SortStatus } from '../sort/sort-status';\nimport { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../column.config';\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../../cell-view';\nimport { ViewEntity } from '../view.entity';\n\n\nexport class ActiveColumnEntity {\n\n\tprivate columnId: ColumnId;\n\n\tprivate columnField: ColumnField;\n\n\tprivate sortStatus = SortStatus.NONE;\n\n\tprivate width: number;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tprivate config: ColumnConfig;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tview: ViewEntity,\n\t\t\t\tconfig: ColumnConfig) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\n\t\tthis.header = header;\n\t\tthis.view = view;\n\n\t\tthis.config = config;\n\t}\n\n\tgetConfig(): ColumnConfig {\n\t\treturn this.config;\n\t}\n\n\tgetSortStatus(): SortStatus {\n\t\treturn this.sortStatus;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetHeader(): string | HeaderTemplate{\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortStatus): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getColumnId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig()\n\t\t);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateId, AggregateEvent } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from '../column.entity';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { Aggregate, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\n\n\n@RootAggregate\nexport class CompositionAggregate extends Aggregate {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]/tree-content.assert.ts\n\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\t/**\n\t * Autowired\n\t */\n\tprivate readonly columnFactory: ColumnEntityFactory = new ColumnEntityFactory();\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getColumnId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getColumnId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\n@Injectable()\nexport class CompositionAggregateFactory {\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\n\n\nexport class InitCompositionCommand extends Command {\n\n\tconstructor(public readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'InitCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { InitCompositionCommand } from './init/init-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new InitCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CompositionAggregateFactory } from '../composition.aggregate-factory';\nimport { InitCompositionCommand } from './init-composition.command';\nimport { CompositionInitedEvent } from './composition-inited.event';\n\n\n@Injectable()\nexport class InitCompositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly compositionAggregateFactory: CompositionAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitCompositionCommand,\n\t\t\tCompositionInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitCompositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.compositionId;\n\n\t\tconst compositionAggregate = this.compositionAggregateFactory.create(aggregateId);\n\n\t\tthis.compositionAggregateRepository.save(compositionAggregate);\n\t}\n\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent): DomainEvent;\n\tconvert(events: Array<AggregateEvent>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent | Array<AggregateEvent>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Command, DomainEventPublisher, CommandHandler, ExecuteResponse, AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetColumnsCommand);\n\t}\n\n\thandle(command: SetColumnsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tsetColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setColumns(setColumnsParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionWidthCommand,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionResizeWidthCommand,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionResizeWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setResizeWidth(enabled);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse, AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetCompositionContainerWidthCommand);\n\t}\n\n\thandle(command: SetCompositionContainerWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setContainerWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishAggregateEvents(composition.getEvents() as Array<AggregateEvent>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(CompositionChangeSortStatusCommand);\n\t}\n\n\thandle(command: CompositionChangeSortStatusCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tsortParams = command.getSortParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(compositionId);\n\n\t\tconst aggregateEvent = composition.changeSort(sortParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tconst columns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../../structure/domain/source/command/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition-id';\nimport { CompositionColumnsSetEvent } from '../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/command/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { CompositionId } from './composition-id';\n\nexport const globalCompositionId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\n\nimport { CompositionRepository } from '../domain/read/composition.repository';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { Composition } from '../domain/read/composition';\nimport { CellTemplateWithContext } from '../domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain/read/definition/cell-template-with-accessor';\nimport { SortStatus } from '../domain/command/column/sort/sort-status';\nimport { FieldId } from '../../structure/domain/structure/command/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelService {\n\n\tconstructor(private compositionRepository: CompositionRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = globalCompositionId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = globalCompositionId): Observable<SortStatus> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = globalCompositionId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { ColumnParams } from '../domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../domain/command/column/column.id';\n\n\n\n@Injectable()\nexport class CompositionCommandService {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.init(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, true);\n\t}\n\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, false);\n\t}\n\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, columnId);\n\t}\n\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, columnId);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{fieldId: FieldId, direction: boolean}>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{fieldId: FieldId, direction: boolean}>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/domain/structure/command/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/domain/structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from '../data-type/field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../../../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../../structure/domain/structure/command/field/init/fields-inited.event';\nimport { Field } from '../../../../../structure/domain/structure/command/field/data-type/field';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../../../column.config';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n\t// handle(event: DomainEvent): void {\n\t//\n\t// \tif (event instanceof FieldsInitedEvent) {\n\t//\n\t// \t\t// TODO Move to different layer\n\t// \t\tlet fields = event.getFields();\n\t//\n\t// \t\tif (!!fields) {\n\t// \t\t\tfields = [];\n\t// \t\t}\n\t// \t\tconst columnFieldIds = fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t//\n\t// \t\tlet columns = event.columns || [];\n\t//\n\t// \t\tconst params = columns.map((column: ColumnConfig, index: number) => {\n\t// \t\t\tconst columnField = new ColumnField(columnFieldIds[index], fields[index].getAccessorMethod());\n\t//\n\t// \t\t\treturn new ColumnParams(column, columnField);\n\t// \t\t});\n\t//\n\t// \t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t// \t}\n\t// }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\n\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionSetColumnEnabledCommand);\n\t}\n\n\thandle(command: CompositionSetColumnEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcolumnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.enableColumn(columnId, enabled);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionMoveLeftColumnCommand);\n\t}\n\n\thandle(command: CompositionMoveLeftColumnCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcolumnId = command.getColumnId();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.moveLeft(columnId);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionMoveRightColumnCommand);\n\t}\n\n\thandle(command: CompositionMoveRightColumnCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcolumnId = command.getColumnId();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.moveRight(columnId);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionQueryProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionAggregateFactory } from '../domain/command/composition.aggregate-factory';\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { InitCompositionCommandHandler } from '../domain/command/init/init-composition.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/command/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/command/width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/command/width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/command/width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/command/column/sort/composition-change-sort-status.command-handler';\nimport { ColumnEntityFactory } from '../domain/command/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/command/composition-event.converter';\nimport { ColumnFieldFactory } from '../domain/command/column/field/colum-field.factory';\nimport { CompositionEventService } from './composition.event-service';\nimport { CompositionReadModelService } from './composition-read-model.service';\nimport { CompositionCommandService } from './composition.command-service';\nimport { CompositionConverter } from '../domain/composition.converter';\nimport { EditTemplateRepository } from '../domain/read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../domain/read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../domain/read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../domain/read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../domain/read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/command/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/command/column/set-columns/composition-fields-inited.event-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/command/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/command/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/command/column/move/right/composition.move-right-column.command-handler';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tCompositionAggregateFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitCompositionCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetColumnsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionResizeWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionContainerWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionSetColumnEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionMoveLeftColumnCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionMoveRightColumnCommandHandler,\n\t\tmulti: true\n\t},\n\tColumnEntityFactory,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionQueryProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionConverter,\n\n\tCompositionCommandService,\n\tCompositionReadModelService,\n\tCompositionEventService\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\nimport { ViewTemplatesComponent } from '../domain/read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../domain/read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../domain/read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../domain/read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../domain/read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../ui/column-query.component';\nimport { FunctionViewComponent } from '../domain/read/view/function-view.component';\nimport { compositionProviders } from './composition.providers';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tColumnQueryComponent,\n\tFunctionViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\tFunctionViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent{\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { PagingConfigWithId } from '../paging-config-with-id';\nimport { PagingConfig } from '../paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../structure-id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\n\n// Aggregate\nexport class PagingAggregate {\n\n\tprivate readonly events: Array<AggregateEvent> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingAggregate(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingAggregate {\n\n\t\tconst defaultPagingDefinition = PagingAggregate.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingAggregate(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { PagingAggregate } from './paging.aggregate';\nimport { PagingConfigWithId } from '../paging-config-with-id';\n\n\n@Injectable()\nexport class PagingAggregateFactory {\n\n\tconstructor(private logger: Logger) {}\n\n\tcreateDefault(): PagingAggregate {\n\t\treturn PagingAggregate.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingAggregate {\n\t\treturn PagingAggregate.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandService } from '../../../ui-api/paging/paging-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingAggregateFactory } from '../../../domain/paging/command/paging.aggregate-factory';\nimport { PagingDispatcher } from '../../../domain/paging/command/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandService extends PagingCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingAggregateFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingReadModelService } from '../../../ui-api/paging/paging-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingRepository } from '../../../domain/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n\n@Injectable()\nexport class LocalPagingReadModelService extends PagingReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetSchemaCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly height: number) {\n\t\tsuper(structureId, 'SetSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaVerticalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\nimport { SchemaTheme } from '../../schema-theme';\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetSchemaThemeCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SchemaRowColoring } from '../../../schema-row-coloring';\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly coloring: SchemaRowColoring) {\n\t\tsuper(structureId, 'SetRowColoringCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaTopHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaTopHeaderCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaBottomHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaBottomHeaderCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SetSchemaCommand } from './set/set-schema.command';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\nimport { SchemaTheme } from '../schema-theme';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { globalStructureId } from '../../global-structure-id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SetRowColoringCommand } from './coloring/set/set-row-coloring.command';\nimport { ChangeSchemaTopHeaderCommand } from './column-header/top/change-schema-top-header.command';\nimport { ChangeSchemaBottomHeaderCommand } from './column-header/bottom/change-schema-bottom-header.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSchema(structureId: StructureId, height: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaCommand(structureId, height));\n\t}\n\n\tchangeVerticalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(structureId, enabled));\n\t}\n\n\tchangeHorizontalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(structureId, enabled));\n\t}\n\n\tsetTheme(structureId: StructureId, theme: SchemaTheme): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(structureId, theme));\n\t}\n\n\tsetRowColoring(structureId: StructureId = globalStructureId, coloring: SchemaRowColoring): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(structureId, coloring));\n\t}\n\n\tchangeTopHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaTopHeaderCommand(structureId, enabled));\n\t}\n\n\tchangeBottomHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaBottomHeaderCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from './schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SchemaRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Schema } from '../../domain/schema/read/schema';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelService {\n\n\tconstructor(private schemaRepository: SchemaRepository) {\n\t}\n\n\tonSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.schemaRepository.on(structureId);\n\t}\n\n\tonSingleSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.onSchema(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getContainerHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(structureId: StructureId = globalStructureId): Observable<SchemaCssClass> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getColumnHeader();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaCommandService implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject<void>();\n\n\tconstructor(private schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete()\n\t}\n\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tsetHeight(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tchangeVerticalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeVerticalGrid(structureId, enabled);\n\t}\n\n\tchangeHorizontalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeHorizontalGrid(structureId, enabled);\n\t}\n\n\tsetTheme(theme: SchemaTheme, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setTheme(structureId, theme);\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setRowColoring(structureId, coloring);\n\t}\n\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeTopHeader(structureId, enabled);\n\t}\n\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeBottomHeader(structureId, enabled);\n\t}\n\n\ttoggleVerticalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.verticalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeVerticalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleHorizontalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.horizontalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeHorizontalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleTopHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isTopHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeTopHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n\ttoggleBottomHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isBottomHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeBottomHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCommandService } from '../../../ui-api/schema/schema-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaDispatcher } from '../../../domain/schema/command/schema.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandService extends SchemaCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaQueryService: SchemaReadModelService,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, schemaQueryService);\n\t}\n\n\tsetDefaultSchema(): void {\n\t\tsuper.setSchema(Number.MAX_SAFE_INTEGER, this.structureId);\n\t}\n\n\t@Override\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSchema(height, this.structureId);\n\t}\n\n\t@Override\n\tsetHeight(height: number): void {\n\t\tsuper.setHeight(height, this.structureId);\n\t}\n\n\t@Override\n\tchangeVerticalGrid(enabled: boolean): void {\n\t\tsuper.changeVerticalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeHorizontalGrid(enabled: boolean): void {\n\t\tsuper.changeHorizontalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleVerticalGrid(): void {\n\t\tsuper.toggleVerticalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleHorizontalGrid(): void {\n\t\tsuper.toggleHorizontalGrid(this.structureId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setRowColoring(coloring, this.structureId);\n\t}\n\n\t@Override\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeTopHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeBottomHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleTopHeader(): void {\n\t\tsuper.toggleTopHeader(this.structureId);\n\t}\n\n\t@Override\n\ttoggleBottomHeader(): void {\n\t\tsuper.toggleBottomHeader(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaRepository } from '../../../domain/schema/read/schema-repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Schema } from '../../../domain/schema/read/schema';\nimport { SchemaCssClass } from '../../../domain/schema/read/schema-css-class';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaColumnHeader } from '../../../domain/schema/read/schema-column-header';\n\n\n\n@Injectable()\nexport class LocalSchemaReadModelService extends SchemaReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaRepository: SchemaRepository) {\n\t\tsuper(schemaRepository);\n\t}\n\n\t@Override\n\tonSchema(): Observable<Schema> {\n\t\treturn super.onSchema(this.structureId);\n\t}\n\n\t@Override\n\tonHeight(): Observable<number> {\n\t\treturn super.onHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonSingleSchema(): Observable<Schema> {\n\t\treturn super.onSingleSchema(this.structureId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.structureId);\n\t}\n\n\t@Override\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn super.onColumnHeader(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure-id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationDispatcher } from '../../../domain/formation/command/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandService extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Formation } from './formation';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { Formation } from '../../domain/formation/read/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = globalStructureId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../domain/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelService extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FilterConfig } from '../../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly fieldId: FieldId,\n\t\t\t\tpublic readonly externalFilterId: string,\n\t\t\t\tpublic readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/command/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/command/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class InitStructureCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'InitStructureCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortingConfig } from '../../../../../ui-api/structure/sorting-config';\nimport { SortStatus } from '../../../../../../composition/domain/command/column/sort/sort-status';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { QuickFiltersConfig } from '../../../../../ui-api/structure/filter/quick-filters.config';\n\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SearchConfig } from '../../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortStatus } from '../../../../../../composition/domain/command/column/sort/sort-status';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortStatus) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortStatus {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { InitStructureCommand } from '../../domain/structure/command/init/init-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/command/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { ToggleSortCommand } from '../../domain/structure/command/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { StructureSetConfigSearchingCommand } from '../../domain/structure/command/search/config/structure.set-config-searching.command';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/command/field/init/init-fields.command';\nimport { StructureSetSearchPhraseCommand } from '../../domain/structure/command/search/set/structure.set-search-phrase.command';\nimport { SortStatus } from '../../../composition/domain/command/column/sort/sort-status';\nimport { SetSortOrderCommand } from '../../domain/structure/command/sort/order/set-sort-order.command';\n\n\n@Injectable()\nexport class StructureCommandService {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tinit(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n\n@Injectable()\nexport class LocalStructureCommandService extends StructureCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tinit(): void {\n\t\tsuper.init(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\n\n\n@Injectable()\nexport class StructureReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = globalStructureId): Observable<Structure> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../domain/structure/read/structure';\n\n\n@Injectable()\nexport class LocalStructureReadModelService extends StructureReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<Structure> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId)\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/domain/command/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n\n@Injectable()\nexport class SourceCommandService extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = globalStructureId): void {\n\n\t\tconst itemId$ = this.sourceQueryService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandService extends SourceCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceQueryService: SourceReadModelService) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceQueryService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../../domain/source/read/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelService extends SourceReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandService } from '../../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionDispatcher } from '../../../../composition/domain/command/composition.dispatcher';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { ColumnParams } from '../../../../composition/domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../../../../composition/domain/command/column/column.id';\n\n\n@Injectable()\nexport class LocalCompositionCommandService extends CompositionCommandService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.init(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.enableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.disableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveLeft(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveRight(columnId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionRepository } from '../../../../composition/domain/read/composition.repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n\n@Injectable()\nexport class LocalCompositionReadModelService extends CompositionReadModelService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortStatus> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { LocalPagingCommandService } from './paging/local-paging-command.service';\nimport { LocalPagingReadModelService } from './paging/local-paging-read-model.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { LocalSchemaCommandService } from './schema/local-schema-command.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { LocalSchemaReadModelService } from './schema/local-schema-read-model.service';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandService } from './formation/local-formation-command.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelService } from './formation/local-formation-read-model.service';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { LocalStructureCommandService } from './structure/local-structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { LocalStructureReadModelService } from './structure/local-structure-read-model.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { LocalSourceCommandService } from './source/local-source-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { LocalSourceReadModelService } from './source/local-source-read-model.service';\nimport { LocalCompositionCommandService } from './composition/local-composition-command.service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { LocalCompositionReadModelService } from './composition/local-composition-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\n\nexport const localProviders = [\n\t{ provide: PagingCommandService, useClass: LocalPagingCommandService},\n\t{ provide: PagingReadModelService, useClass: LocalPagingReadModelService},\n\t{ provide: SchemaCommandService, useClass: LocalSchemaCommandService},\n\t{ provide: SchemaReadModelService, useClass: LocalSchemaReadModelService},\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandService},\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelService},\n\t{ provide: StructureCommandService, useClass: LocalStructureCommandService},\n\t{ provide: StructureReadModelService, useClass: LocalStructureReadModelService},\n\t{ provide: SourceCommandService, useClass: LocalSourceCommandService},\n\t{ provide: SourceReadModelService, useClass: LocalSourceReadModelService},\n\n\t{ provide: CompositionCommandService, useClass: LocalCompositionCommandService },\n\t{ provide: CompositionReadModelService, useClass: LocalCompositionReadModelService},\n];\n","import { ElementRef, Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaCssClassManager implements OnDestroy {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(private rendererFactory2: RendererFactory2,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tinit(elementRef: ElementRef, structureId: StructureId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject, Subject, BehaviorSubject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n\n@Injectable()\nexport class StructureAggregationCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandService } from '../../../ui-api/structure/aggregation/structure.aggregation.command-service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandService,\n\t\t\t\tprivate structureId: StructureId) {}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import {\n\tEventEmitter,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tSimpleChanges\n} from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure-id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\n\n\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandService,\n\t\tprotected pagingCommandService: PagingCommandService,\n\t\tprotected pagingEventService: PagingEventService,\n\t\tprotected sourceCommandService: SourceCommandService,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandService: SchemaCommandService,\n\t\tprotected compositionCommandService: CompositionCommandService,\n\t\tprotected compositionEventService: CompositionEventService,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeTopHeader(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeBottomHeader(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId)\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.schemaCommandService.setHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined  && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch(state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { NextPageEvent } from '../../domain/paging/command/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/command/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/command/page/page-changed.event';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/command/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingQueryService: PagingReadModelService) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/command/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take, switchMap } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelService } from '../structure/structure-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureQueryService: StructureReadModelService) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureQueryService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: Structure) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columns\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columns: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columns);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSort(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilter(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumns(): boolean {\n\t\treturn this.columns;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilter()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumns()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure-id';\nimport { CompositionId } from '../../composition/domain/composition-id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { SchemaColumnHeader } from '../domain/schema/read/schema-column-header';\nimport { Structure } from '../domain/structure/read/structure';\nimport { PagingCommandService } from '../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../ui-api/source/source-command.service';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandService } from '../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../ui-api/structure/structure-read-model.service';\nimport { CompositionReadModelService } from '../../composition/ui-api/composition-read-model.service';\nimport { SchemaReadModelService } from '../ui-api/schema/schema-read-model.service';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'../../composition/ui/composition.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t// '[style.min-height.px]': 'structureHeight',\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tstructureHeight: number;\n\n\tprivate columnHeader: SchemaColumnHeader;\n\n\tprivate structure: Structure;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandService,\n\t\t\t\tpagingEventService: PagingEventService,\n\t\t\t\tsourceCommandService: SourceCommandService,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandService: SchemaCommandService,\n\t\t\t\tcompositionCommandService: CompositionCommandService,\n\t\t\t\tcompositionEventService: CompositionEventService,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandService,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate schemaStylesManager: SchemaCssClassManager) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandService,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive\n\t\t);\n\n\t\tthis.structureCommandService.init();\n\t\tcompositionCommandService.init();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHeight()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((height: number) => {\n\t\t\t\tthis.structureHeight = height;\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onColumnHeader()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columnHeader: SchemaColumnHeader) => {\n\t\t\t\tthis.columnHeader = columnHeader;\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\n\t\t\t\tthis.loaderEnabled = structure.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structure.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.structureId);\n\n\t\tthis.compositionQueryService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\t\t\t\t\t\t<gui-structure-column-config-sort\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilter()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumns()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { InlineDialogPlacement } from '@generic-ui/fabric';\n\n@Injectable()\nexport class StructureColumnConfigService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate inlineDialogService: FabricInlineDialogService) {\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column',\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, injector, InlineDialogPlacement.Top, -8);\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild, ViewEncapsulation, Injector } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext) {\n\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.DESC;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureFilterReadModelRepository {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\t\t\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\" >\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\t\t\n<!--\t\t<ng-container-->\n<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n<!--\t\t</ng-container>-->\n\t\t\n\t\t<button gui-button [primary]=\"true\" >Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.select()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationQueryService: FormationReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationQueryService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\t\treturn `translateY(${index * 30}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { Entity, RandomStringGenerator } from '@generic-ui/hermes';\n\n\n@Entity\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation, SimpleChanges, OnDestroy, OnChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-cell',\n\ttemplate: `\n\n\t\t<span *ngIf=\"!inEditMode\"\n\t\t\t  (click)=\"enterEditMode()\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.template;\n\t\t\t\t\tcontext: { element: cell.accessor(entity) }\">\n\t\t\t</ng-container>\n\t\t</span>\n\t\t\n\t\t<span *ngIf=\"inEditMode\" class=\"gui-cell-edit-mode\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges, OnDestroy {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: any;\n\n\tstatus$: any;\n\n\tactualValue: any;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.cellEditingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inEditMode = true;\n\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.accessor(this.entity),\n\t\t\tfocus: forceCheck\n\t\t};\n\n\t\tthis.observeFieldStatus();\n\t\tthis.observeValueChanges();\n\n\t\tthis.publishEditEnter();\n\n\t\tif (!forceCheck) {\n\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t} else {\n\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t}\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.select()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.select()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import {\n\tComponent,\n\tChangeDetectionStrategy,\n\tViewChild,\n\tElementRef,\n\tRenderer2,\n\tOnDestroy,\n\tAfterViewInit,\n\tChangeDetectorRef,\n\tOnInit,\n\tInject,\n\tOptional,\n\tViewEncapsulation,\n\tNgZone\n} from '@angular/core';\nimport { Subject, combineLatest, fromEvent } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('container', { static: false })\n\tcontainerRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\t/**\n\t\t * TODO One source of truth\n\t\t *\n\t\t * There should only one sub here.\n\t\t */\n\t\tthis.sourceQueryService\n\t\t\t.onEntities()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.setHeight(source.length * 30);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.schemaQueryService.onContainerHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\theight: number = combine[1];\n\n\t\t\t\tconst sourceSizeHeight = source.length * 30;\n\n\t\t\t\tif (sourceSizeHeight > height) {\n\t\t\t\t\tthis.setHeight(height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setHeight(sourceSizeHeight);\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t// never runs ??\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: Structure) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: Structure) => {\n\n\t\t\t\tconst containerHeight = structure.getContainerHeight(),\n\t\t\t\t\ttopMargin = structure.getTopMargin();\n\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', containerHeight + 'px');\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\t\n\t\tQuickFilters\n\t\t\n\t`\n})\nexport class StructureQuickFiltersComponent {}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchingRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../domain/structure/read/searching/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {}\n\n\tonSearchEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.selectSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\n\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: Structure;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isTopHeaderEnabled();\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isBottomHeaderEnabled();\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure.aggregation.ui-events-repository';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-header-cell gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tCount: <span>{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tDistinct: <span>{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&sum;</span> Sum</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div class=\"gui-mean\"><span>_</span><span>X Average</span></div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&and;</span> Min</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&or;</span> Max</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div class=\"gui-median\"><span>~</span><span>X Median</span></div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tTruthy: <span>{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tFalsy: <span>{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryAggregateStore } from '@generic-ui/hermes';\nimport { AggregateStoreRegister } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\n\nexport abstract class StructureAggregateRepository {\n\n\tabstract getById(aggregateId: AggregateId): StructureAggregate;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../domain/structure/command/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): StructureAggregate {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ItemEntity } from '../../../source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { SelectedRowsList } from './selected-rows/selected-rows-list';\n\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './command/formation-aggregate';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaColumnHeader } from './schema-column-header';\nimport { SchemaCssClass } from './schema-css-class';\n\nexport class Schema {\n\n\tconstructor(private readonly width: number,\n\t\t\t\tprivate readonly height: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly theme: SchemaTheme,\n\t\t\t\tprivate readonly columnHeader: SchemaColumnHeader,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGridEnabled;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGridEnabled;\n\t}\n\n\tgetColumnHeader(): SchemaColumnHeader {\n\t\treturn this.columnHeader;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.isVerticalGridEnabled(),\n\t\t\tthis.isHorizontalGridEnabled(),\n\t\t\tthis.getTheme(),\n\t\t\tthis.getRowColoring()\n\t\t);\n\t}\n\n}\n","export class SchemaColumnHeader {\n\n\tconstructor(private readonly top: boolean,\n\t\t\t\tprivate readonly bottom: boolean) {\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaAggregate } from './command/schema-aggregate';\nimport { Schema } from './read/schema';\nimport { ColumnHeaderEntity } from './command/column-header/column-header.entity';\nimport { SchemaColumnHeader } from './read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaConverter {\n\n\tconvert(aggregate: SchemaAggregate): Schema {\n\n\t\tconst columnHeader = aggregate.getColumnHeader();\n\n\t\treturn new Schema(\n\t\t\taggregate.getWidth(),\n\t\t\taggregate.getHeight(),\n\t\t\taggregate.getContainerHeight(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getTheme(),\n\t\t\tthis.convertColumnHeader(columnHeader),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n\tprivate convertColumnHeader(columnHeader: ColumnHeaderEntity): SchemaColumnHeader {\n\t\treturn new SchemaColumnHeader(columnHeader.isHeaderOnTop(), columnHeader.isHeaderOnBottom());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregate } from './command/paging.aggregate';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingAggregate): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","export class Source {\n\n\tconstructor(private readonly loading: boolean) {}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from './command/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","export class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../command/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tcontainerHeight = verticalFormation.calcFullHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, containerHeight, viewportHeight);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { Formation } from '../../formation/read/formation';\nimport { Schema } from '../../schema/read/schema';\nimport { Paging } from '../../paging/read/paging';\nimport { Source } from '../../source/read/source';\nimport { ItemEntity } from '../../source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\n\n\n\nexport class Structure extends ReadModel {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly schema: Schema;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tformation: Formation,\n\t\t\t\tschema: Schema,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.schema = schema;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetSchema(): Schema {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.verticalFormation.getContainerHeight();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\tif (this.getSchema().getHeight() > 150) {\n\t\t\treturn this.getSource().isLoading();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isTopHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.topHeader to presentation\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isBottomHeaderEnabled();\n\t\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.bottomHeader to presentation\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { SchemaConverter } from '../schema/schema.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './read/vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from './command/structure.aggregate';\nimport { Structure } from './read/structure';\nimport { OriginItemEntity } from '../source/command/origin/origin-item-entity';\nimport { ItemEntity } from '../source/item.entity';\n\n\n@Injectable()\nexport class StructureConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate schemaConverter: SchemaConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {}\n\n\tconvert(aggregate: StructureAggregate): Structure {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tschemaAggregate = aggregate.getSchema(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\tsourceQuery = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new Structure(\n\t\t\taggregate.getId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.schemaConverter.convert(schemaAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(sourceQuery),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.id, originItem.getVersion())\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureConverter } from '../../../../domain/structure/structure.converter';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<Structure, StructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): Structure {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureInitedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaTopHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaTopHeaderChangedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaBottomHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaBottomHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowColoringSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { DomainEventBus, DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureInitedEvent } from '../../../../domain/structure/command/init/structure-inited.event';\nimport { SetSourceLoadingEvent } from '../../../../domain/source/command/loading/set-source-loading.event';\nimport { SchemaSetEvent } from '../../../../domain/schema/command/set/schema-set.event';\nimport { SchemaThemeSetEvent } from '../../../../domain/schema/command/theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../../../domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../../domain/schema/command/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaTopHeaderChangedEvent } from '../../../../domain/schema/command/column-header/top/schema-top-header-changed.event';\nimport { SchemaBottomHeaderChangedEvent } from '../../../../domain/schema/command/column-header/bottom/schema-bottom-header-changed.event';\nimport { RowColoringSetEvent } from '../../../../domain/schema/command/coloring/set/row-coloring-set.event';\nimport { PagingSetEvent } from '../../../../domain/paging/command/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../domain/paging/command/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../domain/paging/command/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../domain/paging/command/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../../domain/formation/command/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../domain/structure/command/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../domain/source/command/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../../domain/structure/command/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/command/search/set/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../domain/structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, Structure>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, Structure>>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureInitedEvent,\n\t\t\t\tSetSourceLoadingEvent,\n\t\t\t\tSchemaSetEvent,\n\t\t\t\tSchemaThemeSetEvent,\n\t\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\t\tSchemaVerticalGridSetEvent,\n\t\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\t\tRowColoringSetEvent,\n\t\t\t\tPagingSetEvent,\n\t\t\t\tPrevPageEvent,\n\t\t\t\tNextPageEvent,\n\t\t\t\tPagesizeChangedEvent,\n\t\t\t\tFormationSetEvent,\n\t\t\t\tSelectedRowToggledEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tSortToggledEvent as any,\n\t\t\t\tStructureFilterToggledEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\t\tSortOrderSetEvent as any,\n\t\t\t\tOriginSetEvent as any\n\t\t\t)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst structure = this.inMemoryStructureQueryStore.getById(aggregateId),\n\t\t\t\t\tkey = structure.getId().toString();\n\n\t\t\t\tthis.structureIdToStructure.set(key, structure);\n\n\t\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t\t});\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<Structure> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, Structure>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, Structure>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './commad/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './commad/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../../domain/structure/command/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t},\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class OriginItemEntity {\n\n\tid: string;\n\n\trawData: any;\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: string,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tthis.id = id;\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = {...this.rawData};\n\n\t\treturn new OriginItemEntity(this.id, rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../../structure-id';\nimport { Field } from '../../structure/command/field/data-type/field';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(RandomStringGenerator.generate(), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t})\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { VerticalRange } from './vertical-range';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\n\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 30;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate viewportHeight: number;\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.viewportHeight = viewportHeight;\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.viewportHeight > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.viewportHeight) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.viewportHeight / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.viewportHeight / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && this.viewportHeight === 0) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.viewportHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(height: number): void {\n\t\tthis.rowHeight = height;\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = 0,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Injectable, Inject } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../../structure-id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { Field } from '../field/data-type/field';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: Field;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: Field,\n\t\t\t\tfilterValue: any) {\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\n\t\t\tif (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.filterString(item);\n\t\t\t} else if (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.filterNumber(item);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.filterBoolean(item);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t}\n\n\tprivate filterString(item: OriginItemEntity): boolean {\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity): boolean {\n\t\tconst numberValue = this.field.getValue(item);\n\n\t\treturn numberValue > this.filterValue;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity): boolean {\n\t\tconst booleanValue = this.field.getValue(item);\n\n\t\treturn booleanValue === this.filterValue;\n\t}\n\n}\n","import { Field } from '../field/data-type/field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: Field,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { Field } from '../field/data-type/field';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: Field, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column-aggregation.config';\n\nexport abstract class Field {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class UnknownField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class NumberField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class StringField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class BooleanField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class DateField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from './field';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\n\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): Field {\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t}\n\n\n}\n","import { Field } from './data-type/field';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column.config';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tthis.addField(field);\n\t\t});\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\n\t\t\tlet valueOne = this.direction ? this.field.getValue(entityOne) : this.field.getValue(entityTwo),\n\t\t\t\tvalueTwo = this.direction ? this.field.getValue(entityTwo) : this.field.getValue(entityOne);\n\n\t\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.sortNumber(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.sortBoolean(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.sortString(valueOne, valueTwo);\n\t\t\t} else {\n\t\t\t\treturn this.sortUnknown(valueOne, valueTwo);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate sortString(strOne: string, strTwo: string): number {\n\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tprivate sortNumber(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tprivate sortBoolean(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tprivate sortUnknown(a: any, b: any): number {\n\t\treturn 0;\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\nimport { Field } from '../field/data-type/field';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { SortStatus } from '../../../../../composition/domain/command/column/sort/sort-status';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortStatus): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortStatus.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortStatus.ASC || sortOrder === SortStatus.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortStatus.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","export class ColumnHeaderEntity {\n\n\tconstructor(private top: boolean,\n\t\t\t\tprivate bottom: boolean) {\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.top = enabled;\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.bottom = enabled;\n\t}\n\n\tisHeaderOnTop(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisHeaderOnBottom(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { ColumnHeaderEntity } from './column-header/column-header.entity';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaAggregate {\n\n\tprivate headerHeight = 28;\n\n\tprivate pagerHeight = 35;\n\n\tprivate containerHeight: number;\n\n\tprivate active: boolean = false;\n\n\tprivate horizontalGrid: boolean = true;\n\n\tprivate verticalGrid: boolean = true;\n\n\tprivate columnHeader: ColumnHeaderEntity = new ColumnHeaderEntity(true, false);\n\n\tprivate theme: SchemaTheme = SchemaTheme.FABRIC;\n\n\tprivate rowColoring: SchemaRowColoring = SchemaRowColoring.ODD;\n\n\tconstructor(private width?: number,\n\t\t\t\tprivate height?: number) {\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.height;\n\t\t// return this.containerHeight;\n\t}\n\n\tgetColumnHeader(): ColumnHeaderEntity {\n\t\treturn this.columnHeader;\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderTop(enabled);\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderBottom(enabled);\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tprivate getHeaderHeight(): number {\n\t\treturn this.headerHeight;\n\t}\n\n\tprivate getPagerHeight(): number {\n\t\treturn this.pagerHeight;\n\t}\n\n\tprivate calculateContainerHeight(): void {\n\n\t\tif (!this.height) {\n\t\t\tthis.active = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tthis.containerHeight = this.height - this.getHeaderHeight() - this.getPagerHeight();\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { Field } from '../field/data-type/field';\nimport { DataType } from '../field/data-type/data-type';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn field.getDataType() === DataType.STRING;\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tfor (let field of this.searchFields) {\n\n\t\t\t\tif (this.filterString(entities[i], field)) {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n\tprivate filterString(item: OriginItemEntity, field: Field): boolean {\n\t\tconst value = field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity, field: Field): boolean {\n\t\tconst numberValue = field.getValue(item);\n\n\t\treturn numberValue > this.searchPhrase;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity, field: Field): boolean {\n\t\tconst booleanValue = field.getValue(item);\n\n\t\treturn booleanValue === this.searchPhrase;\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { Aggregate, AggregateEvent, RootAggregate } from '@generic-ui/hermes';\n\nimport { PagingAggregate } from '../../paging/command/paging.aggregate';\nimport { SourceManager } from '../../source/command/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../../formation/command/formation-aggregate';\nimport { SchemaAggregate } from '../../schema/command/schema-aggregate';\nimport { StructureId } from '../../structure-id';\nimport { StructureEditSourceItemParams } from '../../source/command/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/paging-config';\nimport { OriginItemEntity } from '../../source/command/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { Field } from './field/data-type/field';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/command/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n@RootAggregate\nexport class StructureAggregate extends Aggregate {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate schema: SchemaAggregate;\n\n\tprivate pagingAggregate: PagingAggregate;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingAggregate,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection,\n\t\t\t\tschema: SchemaAggregate) {\n\t\tsuper(structureId);\n\t\tthis.pagingAggregate = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t\tthis.schema = schema;\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.getSchema().setHeight(height);\n\n\t\tconst viewportHeight = this.getSchema().getContainerHeight();\n\n\t\tthis.verticalFormation.setViewportHeight(viewportHeight);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tsetSchema(schema: SchemaAggregate): void {\n\t\tthis.schema = schema;\n\t}\n\n\tgetSchema(): SchemaAggregate {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): PagingAggregate {\n\t\treturn this.pagingAggregate;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingAggregate.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingAggregate): void {\n\t\tthis.pagingAggregate = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingAggregate.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingAggregate.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tconst pagingEvents = this.pagingAggregate.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): Array<Field> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\t// TODO Should throw event fields created\n\t\treturn this.fieldCollection.getAllFields();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingAggregate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingAggregate.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingAggregate.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from './schema-aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory {\n\n\tcreate(): SchemaAggregate {\n\t\treturn new SchemaAggregate();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregateFactory } from '../../paging/command/paging.aggregate-factory';\nimport { SourceManagerFactory } from '../../source/command/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../../structure-id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { SchemaAggregateFactory } from '../../schema/command/schema.aggregate-factory';\nimport { FormationAggregateFactory } from '../../formation/command/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingAggregateFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory,\n\t\t\t\tprivate readonly schemaAggregateFactory: SchemaAggregateFactory) {\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tschema = this.schemaAggregateFactory.create(),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\treturn new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer,\n\t\t\tschema\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../structure.aggregate-factory';\nimport { InitStructureCommand } from './init-structure.command';\nimport { StructureInitedEvent } from './structure-inited.event';\n\n\n\n@Injectable()\nexport class InitStructureCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitStructureCommand,\n\t\t\tStructureInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitStructureCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId;\n\n\t\tconst structure = this.structureAggregateFactory.create(aggregateId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\n\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetVerticalScrollEnabledCommand);\n\t}\n\n\thandle(command: SetVerticalScrollEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\n\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetScrollPositionCommand);\n\t}\n\n\thandle(command: SetScrollPositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tposition = command.position;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setScrollPosition(position);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\n\n@Injectable()\nexport class InitFieldsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitFieldsCommand);\n\t}\n\n\thandle(command: InitFieldsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tcompositionId = command.compositionId,\n\t\t\tcolumns = command.columns;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst fields = structure.createFields(columns); // tODO convert don't let dandruff into the domain\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(structureId, compositionId, columns, fields));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSortCommand);\n\t}\n\n\thandle(command: ToggleSortCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst structure = this.structureAggregateRepository.getById(aggregateId);\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\n\n\n@Injectable()\nexport class SetSortingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortingCommand);\n\t}\n\n\thandle(command: SetSortingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsortingConfig = command.getSortingConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSortingConfig(sortingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(structureId));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfilterConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setFilterConfig(filterConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(structureId, filterConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigSearchingCommand);\n\t}\n\n\thandle(command: StructureSetConfigSearchingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsearchingConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSearchingConfig(searchingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(structureId, searchingConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigQuickFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigQuickFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setQuickFiltersConfig(quickFiltersConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureToggleFilterCommand);\n\t}\n\n\thandle(command: StructureToggleFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfieldId: FieldId = command.fieldId,\n\t\t\texternalFieldId: string = command.externalFilterId,\n\t\t\tfilterValue = command.filterValue;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.toggleFilter(fieldId, externalFieldId, filterValue);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(structureId));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../../structure/command/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../../structure/command/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetAggregationEnabledCommand);\n\t}\n\n\thandle(command: StructureSetAggregationEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.setAggregationEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(structureId, enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { Field } from '../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues{\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n}\n","import { Type, Provider } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../command/filter/config/structure.config-filter-set.event';\n\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../command/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../command/filter/quick/structure.config-quick-filter-set.event';\n\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/command/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Field } from '../../../domain/structure/command/field/data-type/field';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/command/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { PagingConfig } from '../../paging-config';\n\n\n@Injectable()\nexport class SetPagingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetPagingCommand,\n\t\t\tPagingSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetPagingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst pagingConfig = command.payload as PagingConfig,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.changePaging(pagingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\n\n\n@Injectable()\nexport class NextPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(NextPageCommand,\n\t\t\tNextPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: NextPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.nextPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\n\n\n@Injectable()\nexport class PrevPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(PrevPageCommand,\n\t\t\tPrevPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: PrevPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.prevPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse, DomainEventPublisher, AggregateEvent } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangePagesizeCommand);\n\t}\n\n\thandle(command: ChangePagesizeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst newPageSize = command.pageSize as number,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.changePageSize(newPageSize);\n\n\t\t// aggregateEvents => DomainEvents\n\n\t\t// DomainEvent\n\t\t// causationId -> aka commandId\n\t\t// correlationId -> actual or previous commandId\n\n\t\t// event publisher should take aggregate events\n\t\t// and convert them to domain events\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\t// TODO\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent) => {\n\t\t\t(event as any).aggregateId = structureId;\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';\nimport { PagingConverter } from '../../domain/paging/paging.converter';\nimport { PagingCommandService } from './paging-command.service';\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { PagingEventService } from './paging-event.service';\n\n\nconst commandProviders = [\n\tPagingDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetPagingCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: NextPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: PrevPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangePagesizeCommandHandler,\n\t\tmulti: true\n\t}\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingAggregateFactory,\n\tPagingConverter,\n\n\tPagingCommandService,\n\tPagingReadModelService,\n\tPagingEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaVerticalGridCommand,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaVerticalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setVerticalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaHorizontalGridCommand,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaHorizontalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHorizontalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { DomainEventPublisher } from '@generic-ui/hermes';\nimport { ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaThemeCommand,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaThemeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst theme = command.theme,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setTheme(theme);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaBottomHeaderCommand } from './change-schema-bottom-header.command';\nimport { SchemaBottomHeaderChangedEvent } from './schema-bottom-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaBottomHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaBottomHeaderCommand,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaBottomHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderBottom(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { DomainEventPublisher } from '@generic-ui/hermes';\nimport { ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaTopHeaderCommand } from './change-schema-top-header.command';\nimport { SchemaTopHeaderChangedEvent } from './schema-top-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaTopHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaTopHeaderCommand,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaTopHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderTop(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetRowColoringCommand,\n\t\t\tRowColoringSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetRowColoringCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst coloring = command.coloring,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setRowColoring(coloring);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaCommand } from './set-schema.command';\nimport { SchemaSetEvent } from './schema-set.event';\n\n\n@Injectable()\nexport class SetSchemaCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaCommand,\n\t\t\tSchemaSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst height = command.height,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setHeight(height);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SetSchemaVerticalGridCommandHandler } from '../../domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../../domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../../domain/schema/command/theme/set-schema-theme.command-handler';\nimport { ChangeSchemaBottomHeaderCommandHandler } from '../../domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler';\nimport { ChangeSchemaTopHeaderCommandHandler } from '../../domain/schema/command/column-header/top/change-schema-top-header.command-handler';\nimport { SetRowColoringCommandHandler } from '../../domain/schema/command/coloring/set/set-row-coloring.command-handler';\nimport { SetSchemaCommandHandler } from '../../domain/schema/command/set/set-schema.command-handler';\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { SchemaConverter } from '../../domain/schema/schema.converter';\nimport { SchemaCommandService } from './schema-command.service';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { SchemaAggregateFactory } from '../../domain/schema/command/schema.aggregate-factory';\n\n\nconst commandProviders = [\n\tSchemaDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaVerticalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaHorizontalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaThemeCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaBottomHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaTopHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetRowColoringCommandHandler,\n\t\tmulti: true\n\t},\n\tSchemaAggregateFactory\n];\n\nconst readProviders = [\n\tSchemaRepository\n];\n\nexport const schemaProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSchemaConverter,\n\n\tSchemaCommandService,\n\tSchemaReadModelService\n\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\n\n\n@Injectable()\nexport class SetFormationCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetFormationCommand,\n\t\t\tFormationSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetFormationCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst rawFormation = command.payload as any,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\t// missing implementation\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSelectedRowCommand,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ToggleSelectedRowCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst selectedRow = command.selectedRow,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst formation = structure.getFormation();\n\n\t\tformation.toggleRow(selectedRow);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';\nimport { FormationConverter } from '../../domain/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetFormationCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSelectedRowCommandHandler,\n\t\tmulti: true\n\t},\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(SetOriginCommand);\n\t}\n\n\thandle(command: SetOriginCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\titems = command.items as Array<any>;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst aggregateEvents = structure.setOrigin(items);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(StructureEditSourceItemCommand);\n\t}\n\n\thandle(command: StructureEditSourceItemCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tparams = command.getParams();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.editItem(params);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../command/origin/set-origin/origin-set.event';\n\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from '../../schema/read/schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SourceRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SourceSetLoadingCommand,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SourceSetLoadingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tsource = structure.getSource();\n\n\t\tsource.setLoading(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../command/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/command/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/command/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/command/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/command/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../domain/source/read/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../domain/source/source.converter';\nimport { SourceCommandService } from './source-command.service';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceRepository } from '../../domain/source/read/source.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/command/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../domain/source/read/prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SourceSetLoadingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetOriginCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureEditSourceItemCommandHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tSourceRepository,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandService,\n\tSourceReadModelService,\n\tSourceEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetSearchPhraseCommand);\n\t}\n\n\thandle(command: StructureSetSearchPhraseCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tphrase = command.phrase,\n\t\t\tstructure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.addSearchPhrase(phrase);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(structureId));\n\t\tthis.structureSourceDomainEventPublisher.publish(structure.getEvents());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from '../toggle/sort-toggled.event';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortOrderCommand);\n\t}\n\n\thandle(command: SetSortOrderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/structure/in-memory.structure.providers';\nimport { InitStructureCommandHandler } from '../../domain/structure/command/init/init-structure.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/command/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/command/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/command/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/command/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/command/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/command/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/command/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/command/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/command/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/command/field/field-id.generator';\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { FieldFactory } from '../../domain/structure/command/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/command/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../domain/structure/read/searching/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../domain/structure/read/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelRepository } from './filter/structure.filter.read-model.repository';\nimport { StructureFilterRepository } from '../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../domain/structure/read/searching/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandService } from './aggregation/structure.aggregation.command-service';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure.aggregation.ui-events-repository';\nimport { StructureCommandService } from './structure-command.service';\nimport { StructureConverter } from '../../domain/structure/structure.converter';\nimport { StructureAggregateFactory } from '../../domain/structure/command/structure.aggregate-factory';\nimport { StructureReadModelService } from './structure-read-model.service';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { schemaProviders } from '../schema/schema.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/command/search/set/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/command/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/command/sort/order/set-sort-order.command-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitStructureCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetVerticalScrollEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetScrollPositionCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitFieldsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSortCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigSearchingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigQuickFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureToggleFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetAggregationEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetSearchPhraseCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortOrderCommandHandler,\n\t\tmulti: true\n\t},\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandService,\n\tFieldFactory,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tStructureFilterReadModelRepository,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregationCommandService,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureConverter,\n\n\tStructureReadModelService,\n\tStructureCommandService,\n\n\t...pagingProviders,\n\t...schemaProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './command/origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(item: OriginItemEntity | any): ItemEntity {\n\n\t\tif (item instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(item.rawData, item.getPosition(), item.id, item.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(item, 0);\n\t\t}\n\t}\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation, OnInit } from \"@angular/core\";\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandService } from '../../../../ui-api/structure/structure-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form [formGroup]=\"searchForm\">\n\t\t\t<div class=\"gui-search-icon\"></div>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"'Search ...'\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit {\n\n\tsearchForm: FormGroup;\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t\tsuper();\n\t\tthis.searchForm = this.formBuilder.group({\n\t\t\t'searchPhrase': ''\n\t\t});\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {}\n","import { Component, Input, ElementRef, Injector, ViewChild, OnInit, ChangeDetectorRef } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon\"\n\t\t\t (click)=\"openConfigDialog()\">\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { CompositionReadModelService } from '../../../../../composition/ui-api/composition-read-model.service';\nimport { CellTemplateWithContext } from '../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../composition/ui-api/composition.command-service';\n\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplate: `\n\n\t\t<div *ngFor=\"let column of columns\">\n\n\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\"\n\t\t\t\t\t\t  (click)=\"toggleColumn(column)\">\n\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-checkbox>\n\t\t\t\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnId());\n\t\t}\n\t}\n}\n","import { Component, Input, OnInit, ChangeDetectorRef } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortStatus } from '../../../../../../composition/domain/command/column/sort/sort-status';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../../../ui-api/structure/structure-command.service';\nimport { CompositionReadModelService } from '../../../../../../composition/ui-api/composition-read-model.service';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-text-bold]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-text-bold]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-text-bold]=\"isNoneSort()\">\n\t\t\t\tTurned off\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortStatus;\n\n\tsortStatus: SortStatus;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortStatus) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.NONE;\n\t}\n\n\tsetSortOrder(sort: SortStatus): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"moveLeft(column)\">\n\t\t\tMove Left\n\t\t</div>\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"moveRight(column)\">\n\t\t\tMove Right\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureMenuColumnManagerComponent } from './column-manager/structure.menu-column-manager.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from './structure-fabric.imports';\nimport { StructurePagingModule } from './paging/structure-paging.module';\nimport { StructureInfoPanelModule } from './panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/ui-api/composition.module';\nimport { StructureComponent } from './structure.component';\nimport { StructureHeaderComponent } from './header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from './header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from './header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from './header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from './content/structure-content.component';\nimport { StructureRowComponent } from './content/row/structure-row.component';\nimport { StructureCellComponent } from './content/cell/structure.cell.component';\nimport { StructureContainerComponent } from './content/structure-container.component';\nimport { StructureQuickFiltersComponent } from './header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from './blueprint/structure.blueprint.component';\nimport { StructureAggregationPanelComponent } from './panel/aggregation/structure.aggregation-panel.component';\nimport { StructureColumnConfigComponent } from './header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../ui-api/structure/structure-tokens';\nimport { StructureDefinition } from './structure-definition';\nimport { SourceReadModelService } from '../ui-api/source/source-read-model.service';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureAggregationPanelConfigConverter } from './panel/aggregation/structure.aggregation-panel.config-converter';\nimport { structureProviders } from '../ui-api/structure/structure.providers';\nimport { StructureModuleConfig } from './structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from './panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from './content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from './header/menu/structure.column-menu.module';\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\n\tCompositionModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureAggregationPanelComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\n\tSourceReadModelService,\n\n\tStructureIdGenerator,\n\n\tStructureAggregationPanelConfigConverter,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = { cssClassName: '', hermesModuleConfig: { loggers: false } }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\t\tcssClassName: 'grid',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}