{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/domain-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/feature-api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.global-id.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/structure-source.warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-grid/common/cdk/pure-component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/stats/paging-stats.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/alternative-paging/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/alternative-paging/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.event-repository.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.manager.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.domain-module.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.api-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.id.ts","ng://@generic-ui/ngx-grid/schema/feature-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/schema/feature-api/read/schema.global-id.ts","ng://@generic-ui/ngx-grid/schema/feature-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/schema/feature-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/schema/feature-api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.global-id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/structure-formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/structure-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/feature-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/schema/feature-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/schema/feature-api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/structure-filter.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/structure-search.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/feature-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/base.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/type.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/icon/structure.filter-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/column-selector/structure.column-selector.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/feature-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/schema/feature-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/schema/feature-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/feature-api/schema.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/structure/empty-source/feature/empty-source.component.ts","ng://@generic-ui/ngx-grid/structure/empty-source/feature/empty-source.feature-module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/domain-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnSortingConverter","sortingConfig","GridColumnCellEditingConverter","config","GridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","map","convertColumn","guiColumn","columnConfig","header","field","width","summaries","sorting","cellEditing","matcher","GridThemeConverter","theme","convertToGuiTheme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","convertToGuiRowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","PagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class.gui-grid]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","isStopped","complete","takeUntil","SmartComponent","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getId","toString","getPaging","StructureReadModelRootId","id","toAggregateId","StructureId","ReadModelRootId","toReadModelRootId","AggregateId","structureGlobalId","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","getPagingConfig","Command","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","PagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","StructureSourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","PagingDisplayModeArchive","onValue","Archive","TOP","BOTTOM","PagingComponent","renderer2","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","structurePagingDisplayModeArchive","alternativeDisplay","position","PagingPosition","removeClass","addClass","mode","size","sourceSize","isPagingVisible","isPagerTop","isPagerBottom","[class.gui-paging]","changeDetection","ChangeDetectionStrategy","OnPush","Renderer2","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","ReadModelObject","Boolean","Number","PagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","[class.gui-paging-navigator]","PagingSelectComponent","[class.gui-paging-select]","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","Error","name","PagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","[class.gui-paging-stats]","AlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","[class.gui-alternative-paging-navigator]","AlternativePagingPagesComponent","pages","activePage","[class.gui-alternative-paging-pages]","NextPageEvent","aggregateId","DomainEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventRepository","pagingReadModelService","getAggregateId","switchMap","DomainEventBus","PageChangedAggregateEvent","toDomainEvent","AggregateEvent","PagesizeChangedAggregateEvent","PagingManager","logger","events","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","PagingManagerFactory","createDefault","createFromConfig","Logger","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","aggregate","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","getType","pageChangedEvent","pagesizeChangedEvent","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","PagingConverter","PagingApiModule","PagingFeatureModule","forComponent","FabricModule","NumberFormatterPipe","transform","number","replace","Pipe","NumberFormatterModule","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","theme$","setTheme","schemaId","SchemaCssClassesRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","onSingleTheme","onCssClasses","StructureDialogColumnManagerService","injector","schemaReadModelRepository","structureThemeConverter","fabricDialogService","open","compositionId","readModelId","Injector","parent","FabricDialogService","StructureInfoPanelConfig","infoDialog","columnsManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","StructureInfoPanelArchive","StructureInfoPanelComponent","renderer","sourceReadModelService","dialog","schemaReadModelRootId","menuColumnManagerService","structureInfoPanelEnabledArchive","infoModal","infoPanel","infoPanelConfig","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","CompositionReadModelRootRepository","ReadModelRootRepository","compositionGlobalId","CompositionWarehouse","compositionRepository","onWidth","composition","getWidth","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","fieldId","getFieldId","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","CreateCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","createComposition","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureColumnManagerComponent","compositionCommandService","compositionReadModelService","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class]","[class.gui-icon]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelConfigConverter","StructureInfoPanelModule","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","toggle","changed","ColumnQueryComponent","ContentChild","HTML","CellValue","text","CellValueType","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","getById","save","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","cellView","templateFunction","cellValue","fromDataType","getCellView","getTemplateFunction","AbstractColumnEntity","columnField","presentation","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setEnabled","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","context","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","FieldId","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","columnFieldId","cellEditingEnabled","isBooleanDataType","getValue","entity","searchPhrase","findValue","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","pos","ph","join","ColumnDefinition","sort","setField","setTemplateFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","uid","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","ReadModelRoot","CompositionReadModelRootConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","toReadModel","InMemoryReadModelStore","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","payload","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","has","ifPresent","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","data","isArray","createColumn","getColumn","convertWidth","columnEntity","RandomStringGenerator","generate","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","ColumnField","ColumnFieldFactory","CompositionEventRepository","onColumnsChanged","onContainerWidthChanged","getPayload","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","direction","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","commandProviders","readProviders","DOMAIN_EVENT_HANDLERS","multi","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","createEvent","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","AggregateRoot","CompositionAggregateFactory","AggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","getAggregateRepository","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","className","[class.gui-text-view]","Attribute","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","FabricDatePickerModule","defineAggregate","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingWarehouse","Observable","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","StructureFormationDispatcher","formationDispatcher","setDefaultFormation","LocalFormationCommandDispatcher","FormationRepository","onFormation","getFormation","StructureFormationWarehouse","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationWarehouse","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","StructureFilterCommandDispatcher","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","getPosition","SetSortingCommand","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","SetSortOrderCommand","sortOrder","getSortOrder","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","getPhrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","getTheme","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","LocalStructureCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","SelectedRowsList","rowIds","isRowSelected","equalsById","getIds","Formation","selectedRows","selectedRowsList","FormationConverter","rows","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ItemEntity","version","getData","getUiId","getVersion","isEven","isOdd","StructureReadModelRootConverter","formationConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","RowHeightSetEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","StructureSearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","StructureWarehouse","verticalFormationRepository","LocalStructureWarehouse","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandDispatcher","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandDispatcher","LocalSourceWarehouse","LocalCompositionCommandDispatcher","columnDefId","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setRowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","SchemaRowColoring","LocalSchemaCommandDispatcher","StructureVerticalFormationWarehouse","LocalStructureVerticalFormationWarehouse","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","removeThemeCssClasses","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","ENTER","StructureGateway","structurePagingCommandDispatcher","pagingEventService","sourceCommandService","sourceEventService","schemaCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structureRowSelectEnabledArchive","structureSearchEventService","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","simpleChanges","rowDetail","titlePanel","footerPanel","nextConfig","rowSelecting","editMode","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","filtering","quickFilters","searching","onItemSelected","onSourceEdited","values","state","StructureCellEditState","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureWarehouse","str","StructureColumnMenuConfig","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","onEvent","EventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","selectedRowValues","StructureRowDetailService","drawerService","ref","turnOn","turnOff","close","FabricDrawerService","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","structureReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","setStyle","[class.gui-structure]","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterWarehouse","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationReadModelService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","parentElement","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","structureReadModelWarehouse","compositionWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchWarehouse","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","FormationSetEvent","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","InitFieldsCommandHandler","fieldTypes","createFields","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","structureSourceDomainEventPublisher","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","of","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","FieldIdGenerator","BaseField","matchers","accessorMethod","getKey","getMatchers","getSearchMatcher","val","getSortValue","getSortMatcher","getSearchValue","Field","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","isSummaries","isSummariesEnabled","assignDefaultSummaries","UnknownField","one","two","filterPhrase","NumberField","numOne","numTwo","StringField","toLowerCase","strOne","strTwo","localeCompare","BooleanField","booleanOne","booleanTwo","sureBoolTwo","DateField","dateOne","dateTwo","FieldMatchers","sortMatcher","searchMatcher","getMatcher","FieldFactory","fieldIdGenerator","fieldMatchers","createMatchers","columnType","TypeField","mapNumber","callback","ifNumber","entityOne","entityTwo","valueOne","valueTwo","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","from","typeField","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureFilter","filterId","setFilterValue","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","SummariesCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","add","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","allFields","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","summariesProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterCollection","searchManager","fieldCollection","pagingManager","filterManager","initTheme","calculateSource","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setFormation","typeFields","setConfig","addSearchPhrase","removeSearchPhrase","removeSearchFilters","searchedEntities","ents","ae","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","clear","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","FormationAggregateFactory","SearchManager","searchFields","enabledDataTypes","searchableFields","searchedItems","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","verticalFormationWarehouse","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","debounceTime","StructureFilterIconComponent","StructureFilterMenuComponent","onColumnSelect","selectedColumnId","[class.gui-structure-filter-menu]","StructureFilterMenuTriggerComponent","structureComponent","openDrawer","structureElement","StructureColumnSelectorComponent","columnSelected","options","onSelectChange","StructureFilterMenuModule","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","publishFromAggregate","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","EmptySourceComponent","[class.gui-empty-source]","EmptySourceFeatureModule","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any) => string;\n}\n\nexport interface GuiTitlePanel {\n\tenabled?: boolean;\n\ttemplate?: string | ((title: any) => string);\n}\n\nexport interface GuiFooterPanel {\n\tenabled?: boolean\n\ttemplate?: string | ((title: any) => string);\n}\n\nexport interface GuiInfoPanel {\n\tenabled?: boolean;\n\tinfoDialog?: boolean;\n\tcolumnsManager?:boolean;\n\tsourceSize?: boolean\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../domain-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../lib/structure/domain/structure/summaries/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../grid.index';\n\n\nexport class GridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tlet columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../domain-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/column/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column/column-cell-editing.config';\n\nexport class GridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../domain-api/grid.api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column/column-align';\n\nexport class GridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../domain-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnSummariesConverter } from './summaries/grid.column-summaries.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\nimport { GridColumnCellEditingConverter } from './cell-editing/grid.column-cell-editing.converter';\nimport { GridColumnAlignConverter } from './align/grid.column-align.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../domain-api/grid.api';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../domain-api/grid.api';\nimport { RowColoring } from '../../../../../schema/feature-api/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../domain-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/feature-api/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../structure/paging/feature/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../domain-api/grid.api';\nimport { PagingConfig } from '../../../../../structure/paging/domain-api/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering, GuiFooterPanel, GuiInfoPanel,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme, GuiTitlePanel\n} from '../../domain-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/feature-api/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { RowColoring } from '../../../../schema/feature-api/row-coloring';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | GuiInfoPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../../structure/paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/feature/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class.gui-grid]': `\"true\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../lib/structure/feature-api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../lib/structure/feature-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../feature-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/feature-api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../../domain-api/paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/feature-api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\n\nimport { Paging } from '../domain-api/read/paging';\nimport { PagingWarehouse } from '../domain-api/paging.warehouse';\nimport { PagingCommandDispatcher } from '../domain-api/paging.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../../lib/structure/feature-api/source/structure-source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\n\n\n@Component({\n\tselector: 'gui-paging[position]',\n\ttemplateUrl: 'paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-paging]': `\"true\"`\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandDispatcher,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t} else {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t}\n\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisPagingVisible(): boolean {\n\t\treturn this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\n\n@Component({\n\tselector: 'gui-paging-navigator',\n\ttemplateUrl: `paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-navigator]': `\"true\"`\n\t}\n})\nexport class PagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-select',\n\ttemplateUrl: `paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-select]': `\"true\"`\n\t}\n})\nexport class PagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\nimport { PureComponent } from '../../../../common/cdk/pure-component';\n\n\n@Component({\n\tselector: 'gui-paging-stats',\n\ttemplateUrl: `paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-stats]': `\"true\"`\n\t}\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-navigator',\n\ttemplateUrl: `alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-navigator]': `\"true\"`\n\t}\n})\nexport class AlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-pages',\n\ttemplateUrl: `alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-pages]': `\"true\"`\n\t}\n})\nexport class AlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PagingCommandDispatcher } from './paging.command-dispatcher';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandDispatcher,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule {\n\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingNavigatorComponent } from './navigator/paging-navigator.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { PagingStatsComponent } from './stats/paging-stats.component';\nimport { AlternativePagingNavigatorComponent } from './alternative-paging/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './alternative-paging/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../domain-api/paging.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.11.4\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../feature-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../feature-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaTheme>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaTheme>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaTheme> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaTheme>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository) {\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/feature-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<div *ngIf=\"infoPanelConfig.isSourceSizeEnabled()\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isColumnsManagerEnabled()\"\n\t\t\t\t\t  (click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isInfoDialogEnabled()\"\n\t\t\t\t\t  [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigService } from './structure.info-panel-config.service';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellValue } from '../../feature-api/read/definition/cell-value';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../feature-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../feature-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../feature-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../feature-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/domain/structure/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/domain/structure/sort/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/domain/structure/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../structure/domain/structure/field/data-type/type.field';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, Attribute, ElementRef, Renderer2 } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandDispatcher } from '../../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../../../structure/paging/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../../structure/paging/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../../structure/paging/domain-api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../../../structure/paging/domain-api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../../structure/paging/domain-api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureFormationDispatcher {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureFormationDispatcher } from '../../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends StructureFormationDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from './read/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from './read/selected-rows/selected-rows-list';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class StructureFormationWarehouse {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFormationWarehouse } from '../../../feature-api/formation/structure-formation.warehouse';\nimport { FormationRepository } from '../../../feature-api/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../feature-api/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends StructureFormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../feature-api/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortingConfig } from '../../../../feature-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../feature-api/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SearchConfig } from '../../../../feature-api/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../structure.global-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { structureGlobalId } from '../../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { StructureId } from '../../structure.id';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../domain/source/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/structure/sort/set-config/set-sorting.command';\nimport { FieldId } from '../domain/structure/field/data-type/field.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/structure/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../composition/domain/column/column.config';\nimport { InitFieldsCommand } from '../domain/structure/field/init/init-fields.command';\nimport { SortOrder } from '../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/structure/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/read/formation';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/read/formation.converter';\nimport { PagingConverter } from '../../../../structure/paging/domain-api/read/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../feature-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../feature-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/feature-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../domain/source/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../feature-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../feature-api/field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../feature-api/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../feature-api/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends StructureSourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/feature-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/feature-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/feature-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/feature-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/feature-api/theme/schema.theme.repository';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../lib/structure/feature-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../lib/structure/feature-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../../schema/feature-api/schema.command-dispatcher';\nimport { SchemaRowColoring } from '../../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../../schema/feature-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../../schema/feature-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\t];\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../feature-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SummariesConfig } from '../../feature-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../feature-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../feature-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../feature-api/search/structure-search-event.service';\nimport { SchemaCommandDispatcher } from '../../../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/feature-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../../schema/feature-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { InfoPanelConfig } from '../panel/info/info-panel.config';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\tprotected pagingEventService: PagingEventRepository,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandService: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SelectedRowToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureWarehouse } from '../structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureWarehouse\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from './phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => event.getTheme())\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { Component, Inject, OnInit, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventService,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../feature-api/read/structure.read-model-root';\nimport { PagingCommandDispatcher } from '../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../feature-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../feature-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/feature-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../feature-api/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/feature-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t// '../../../structure/paging/feature/style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-filter.ngx.scss',\n\t\t'../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure]': `\"true\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandDispatcher,\n\t\t\t\tpagingEventService: PagingEventRepository,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventService: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/feature-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from './read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './read/structure.quick-filter.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { SelectedRowsList } from '../../feature-api/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../feature-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseRepository } from '../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: StructureFormationDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tconst parentElement = this.elementRef.nativeElement.querySelector('.gui-cell-edit-mode');\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: parentElement\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil, auditTime } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: StructureFormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from './enabled/structure.searching.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchWarehouse {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { StructureSearchWarehouse } from '../../feature-api/search/structure-search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../feature-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: StructureSearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class FormationSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'FormationSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureFilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../../structure/paging/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../../structure/paging/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../../structure/paging/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../../structure/paging/domain/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './feature-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../feature-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './feature-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../../summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../composition/domain/column/column-summaries.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../domain/structure/search/config/structure.config-searching-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { DataType } from '../../domain/structure/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/structure/field/init/fields-inited.event';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event instanceof StructureSummariesChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../structure/field/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { StructureId } from '../../../structure.id';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\tthrow new Error('COMPOSITION ID IS MISSING');\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tnull,\n\t\t\tthis.columns,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../../../structure/paging/domain/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../../../structure/paging/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from './read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from './read/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { StructureFormationDispatcher } from './structure-formation.dispatcher';\nimport { StructureFormationWarehouse } from './structure-formation.warehouse';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tStructureFormationDispatcher,\n\tStructureFormationWarehouse\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../feature-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tconst structureId = event.getAggregateId();\n\n\t\tif (event instanceof StructureCreatedEvent) {\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event instanceof StructureSummariesEnabledSetEvent) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../domain/structure/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../domain/structure/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../domain/structure/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../domain/structure/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../domain/structure/field/field-collection.factory';\nimport { FilterManagerFactory } from '../domain/structure/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../domain/structure/field/field-id.generator';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { FieldFactory } from '../domain/structure/field/data-type/field.factory';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { StructureConfigFilterSetEventHandler } from './filter/read/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from './search/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from './filter/read/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureFilterWarehouse } from './filter/structure-filter.warehouse';\nimport { StructureFilterRepository } from './filter/read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './filter/read/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from './search/enabled/structure.searching.repository';\nimport { StructureSearchWarehouse } from './search/structure-search.warehouse';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { formationProviders } from './formation/formation.providers';\nimport { sourceProviders } from './source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../domain/structure/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../domain/structure/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../domain/structure/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from './search/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from './search/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from './search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from './search/placeholder/structure.search-placeholder.archive';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandDispatcher,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureCreatedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSummariesEnabledSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchWarehouse,\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher,\n\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n<!--\t\t<gui-structure-filter-menu-trigger></gui-structure-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandDispatcher } from '../../../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../../../feature-api/structure.warehouse';\nimport { StructureSearchPlaceholderArchive } from '../../../../feature-api/search/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.verticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-filter-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureFilterIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-filter-menu',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-column-selector\n\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">\n\t\t</gui-structure-column-selector>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-filter-menu]': 'true'\n\t}\n})\nexport class StructureFilterMenuComponent {\n\n\tselectedColumnId: string;\n\n\tonColumnSelect(value: string): void {\n\t\tthis.selectedColumnId = value;\n\t}\n}\n","import { Component, Inject, Injector } from '@angular/core';\nimport { FabricDrawerService } from '@generic-ui/fabric';\nimport { structureComponentToken } from '../structure-component-token';\nimport { StructureComponent } from '../structure.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\n\n@Component({\n\tselector: 'gui-structure-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-structure-filter-icon-wrapper\">\n\t\t\t<gui-structure-filter-icon></gui-structure-filter-icon>\n\t\t</div>\n\t`\n})\nexport class StructureFilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(structureComponentToken) private readonly structureComponent: StructureComponent) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst structureElement = this.structureComponent.getElementRef();\n\n\t\tthis.drawerService.open(structureElement, StructureFilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-structure-column-selector',\n\ttemplate: `\n\n\t\t<gui-select\n\t\t\t\t[options]=\"options\"\n\t\t\t\t(optionChanged)=\"onSelectChange($event)\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnSelectorComponent extends SmartComponent {\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<string>();\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\toptions: Array<string> = [];\n\n\tconstructor(private readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.options = columns.map((column: CellTemplateWithContext) => column.getColumnDefinitionId().toString());\n\t\t\t});\n\t}\n\n\tonSelectChange(columnId: string): void {\n\t\tthis.columnSelected.emit(columnId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureFilterIconComponent } from './icon/structure.filter-icon.component';\nimport { StructureFilterMenuTriggerComponent } from './structure.filter-menu-trigger.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\nimport { StructureColumnSelectorComponent } from './column-selector/structure.column-selector.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureFilterIconComponent,\n\t\tStructureFilterMenuComponent,\n\t\tStructureFilterMenuTriggerComponent,\n\t\tStructureColumnSelectorComponent\n\t],\n\texports: [\n\t\tStructureFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tStructureFilterMenuComponent\n\t]\n})\nexport class StructureFilterMenuModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\nimport { StructureFilterMenuModule } from '../../filter/structure.filter-menu.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tStructureFilterMenuModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../../feature-api/structure.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../../../composition/feature-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../feature-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaCssClassesEventHandler extends DomainEventHandler<SchemaId> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent | RowColoringSetEvent | SchemaHorizontalGridSetEvent | SchemaVerticalGridSetEvent): void {\n\n\t\tif (event instanceof RowColoringSetEvent) {\n\t\t\tthis.rowColoring = event.getRowColoring();\n\t\t}\n\n\t\tif (event instanceof SchemaHorizontalGridSetEvent) {\n\t\t\tthis.horizontalGrid = event.getHorizontalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaVerticalGridSetEvent) {\n\t\t\tthis.verticalGrid = event.getVerticalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.schemaTheme = event.getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setTheme(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler extends DomainEventHandler<SchemaId> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.themeRepository.setTheme(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\t{\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaCssClassesEventHandler,\n\t\t\tmulti: true\n\t\t}, {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaThemeSetEventHandler,\n\t\t\tmulti: true\n\t\t},\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TitlePanelConfig } from './title-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FooterPanelConfig } from './footer-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation, Input } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-empty-source[items]',\n\ttemplateUrl: `empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [`\n\t\t.gui-empty-source div {\n\t\t\tdisplay: block;\n\t\t\tpadding: 42px 8px;\n\t\t}\n\t`],\n\thost: {\n\t\t'[class.gui-empty-source]': 'true'\n\t}\n})\nexport class EmptySourceComponent {\n\n\t@Input()\n\titems: Array<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/feature-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { StructureSourceWarehouse } from './source/structure-source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../../schema/feature-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/panel/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/panel/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../structure/paging/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../structure/empty-source/feature/empty-source.feature-module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider, Compiler } from '@angular/core';\n\nimport { GridComponent } from '../feature/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/feature-api/structure.module';\n\nimport { GridIdGenerator } from '../feature/grid/register/grid-id.generator';\nimport { GridRegister } from '../feature/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}