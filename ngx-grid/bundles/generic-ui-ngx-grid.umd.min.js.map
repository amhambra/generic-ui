{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/domain-api/gui.grid.public-api.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/gui.grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/gui.grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/gui.grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/gui.grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column.converter.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/domain-api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/coloring/gui.grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/gui.grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/gui.grid.paging.converter.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/row-selection.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/row-selection/gui.grid.row-selection.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-gateway.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/console/gui.grid.console.api.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/selected-row.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/api/gui.grid.api-provider.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure.global-id.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/structure/source/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/source.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/field.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/field.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.event-repository.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.manager.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.domain-module.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.api-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-grid/common/cdk/pure-component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.id.ts","ng://@generic-ui/ngx-grid/schema/domain-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/schema/domain-api/read/schema.global-id.ts","ng://@generic-ui/ngx-grid/schema/domain-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.global-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/filter.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/structure.schema-manager.module.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/filter/active-filter.service.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/icon/filter-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/read/filter-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/read/quick-filter-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/type/filter-type.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/active/active-filter.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/unique/unique-values.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/filter.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/config/filter-container-token.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/enabled/searching.repository.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-grid/structure/search/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/filter-menu.feature-module.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/source-counter.feature-module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/read/source.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/structure/source/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/structure/search/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/gateway/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/event/source-event.service.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.warehouse.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.event-repository.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.api-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-grid/structure/search/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-grid/structure/search/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/structure/search/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.manager.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.domain-module.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.api-module.ts","ng://@generic-ui/ngx-grid/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/field.read-model.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/field.ui-converter.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field-collection.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/base-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/data-field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field-collection.factory.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/structure/field/domain/field.domain-module.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/field.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/field.api-module.ts","ng://@generic-ui/ngx-grid/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-grid/structure/source/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/origin-id.ts","ng://@generic-ui/ngx-grid/structure/source/domain/core/source.manager.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/source.domain-module.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/source.api-module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.settings.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.id.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/structure.sorter.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/sorter.id.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/sorter.collection.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unique-value.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/structure/source/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/schema/domain-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/horizontal-grid/schema.horizontal-grid-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/row-coloring/schema.row-coloring-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/vertical-grid/schema.vertical-grid-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/structure/empty-source/feature/empty-source.component.ts","ng://@generic-ui/ngx-grid/structure/empty-source/feature/empty-source.feature-module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/gateway/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/type/filter-type-map.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.domain-module.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/filter.api-module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/columns/select-all/select-all.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/domain-api/gui.grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","ROW","SINGLE","MULTIPLE","GuiGridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GuiGridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","GuiGridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GuiGridColumnSortingConverter","sortingConfig","GuiGridColumnCellEditingConverter","config","GuiGridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GuiGridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","map","convertColumn","guiColumn","columnConfig","header","field","width","summaries","sorting","cellEditing","matcher","GuiGridThemeConverter","theme","convertToGuiTheme","SchemaTheme","GuiTheme","GuiGridRowColoringConverter","rowColoring","convertToGuiRowColoring","RowColoring","GuiRowColoring","GuiGridColumnMenuConverter","Injectable","GuiGridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GenericBuilder","build","buildObject","RowSelection","mode","isModeDefined","isTypeDefined","isEnabledDefined","isEnabled","getMode","getType","Builder","_super","RowSelectionBuilder","tslib_1.__extends","withEnabled","withType","withMode","GuiGridRowSelectionConverter","selection","builder","convertMode","RowSelectionMode","GuiRowSelectionMode","RowSelectionType","GuiRowSelectionType","GuiGridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","selectedRows","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","gridRowSelectionConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","rowSelection","rowSelectionConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onRowsSelect","rows","guiRows","row","index","getIndex","data","getData","itemId","getItemId","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","Input","Output","StructurePagingDefinitionBuilder","PagingDefinition","StructurePagingDefinitionDefaultBuilder","defaultEnabled","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","guiGridStructureDefinition","guiGridProviders","provide","useValue","structureParentComponent","InjectionToken","GuiGridIdGenerator","generateId","PREFIX","GuiGridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","SelectedRow","GuiGridApiProvider","formationCommandDispatcher","formationWarehouse","sourceCommandDispatcher","fcd","fw","scd","deleteRow","deleteRows","deleteSelectedRows","getSelectedRows","selectAll","unselectAll","ToggleSelectedRowCommand","selectedRow","getSelectedRow","Command","FormationDispatcher","commandDispatcher","toggleSelectedRow","dispatch","CommandDispatcher","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","structureGlobalId","SetEnabledSelectionCommand","SetSelectionModeCommand","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandDispatcher","formationDispatcher","setDefaultFormation","changeMode","setSelection","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","params","getParams","SourceDispatcher","setLoading","setOrigin","editItem","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","StructureSourceOriginRepository","origin","origin$","ReplaySubject","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","getPreparedItems","onPreparedItems","SourceWarehouse","structureRepository","structurePreparedItemsRepository","structureSourceOriginRepository","getEntities","getStructure","onEntities","onStructure","structure","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","take","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","getPreparedEntities","StructureEditSourceItemParams","columnFieldId","getColumnFieldId","getValue","FieldReadModelRepository","AggregateArchive","FieldWarehouse","fieldReadModelRepository","onFields","on","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","payload","byIndex","DeleteCommandPayloadType","byManyIndex","indexes","byItemId","byManyItemId","itemIds","getPayload","SourceCommandDispatcher","sourceDispatcher","fieldWarehouse","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","fields","deleteItemById","deleteItemByIndex","deleteManyItemsByItemIds","deleteManyItemsByIndex","RowSelectedRepository","RowSelectionModeRepository","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","selectedItemIds","getSelectedItemIds","selectedItems","some","onRowSelectedReadModel","getAll","onSelectedRows","rm","onMode","GuiGridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","initApi","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","getElementRef","getGridId","nativeElement","setAttribute","api","Component","args","selector","template","providers","useExisting","host","[class.gui-grid]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","SmartComponent","PagingRepository","filter","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","SetPagingCommand","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","setPaging","changePageSize","nextPage","prevPage","PagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","PagingDisplayModeArchive","onValue","Archive","TOP","BOTTOM","PagingComponent","renderer2","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","structurePagingDisplayModeArchive","alternativeDisplay","position","PagingPosition","removeClass","addClass","size","sourceSize","isPagingVisible","isPagerTop","isPagerBottom","[class.gui-paging]","changeDetection","ChangeDetectionStrategy","OnPush","Renderer2","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","ReadModelObject","Boolean","Number","PagingSelectComponent","[class.gui-paging-select]","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","Math","ceil","[class.gui-alternative-paging-navigator]","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","[class.gui-alternative-paging-pages]","NextPageEvent","aggregateId","DomainEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventRepository","pagingReadModelService","getAggregateId","switchMap","DomainEventBus","PageChangedAggregateEvent","toDomainEvent","AggregateEvent","PagesizeChangedAggregateEvent","PagingManager","logger","events","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","aggregate","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingConverter","PagingApiModule","ApiModule","PagingNavigatorComponent","[class.gui-paging-navigator]","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","Error","name","PagingStatsComponent","firstItemIndex","lastItemIndex","[class.gui-paging-stats]","PagingFeatureModule","forComponent","FabricModule","FeatureModule","NumberFormatterPipe","transform","number","replace","Pipe","NumberFormatterModule","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","SchemaCssClassesRepository","theme$","setCssClass","schemaId","SchemaHorizontalGridRepository","SchemaRowColoringRepository","SchemaVerticalGridRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onSingleTheme","onCssClasses","StructureDialogColumnManagerService","injector","schemaReadModelRepository","structureThemeConverter","fabricDialogService","open","compositionId","readModelId","Injector","parent","FabricDialogService","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","renderer","dialog","schemaReadModelRootId","menuColumnManagerService","schemaManagerService","structureInfoPanelEnabledArchive","infoModal","infoPanel","infoPanelConfig","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","openSchemaManager","CompositionReadModelRootRepository","ReadModelRootRepository","compositionGlobalId","CompositionWarehouse","compositionRepository","onWidth","composition","getWidth","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","fieldId","getFieldId","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","CreateCompositionCommand","SetColumnsCommand","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","createComposition","setColumns","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureColumnManagerComponent","compositionCommandService","compositionReadModelService","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class]","[class.gui-icon]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelConfigConverter","SetSchemaThemeCommand","getTheme","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setTheme","setRowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","SetConfigFilterCommand","filterConfig","getConfig","RemoveAllFiltersCommand","AddFilterCommand","filterTypeId","getFilterTypeId","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandDispatcher","setFilteringEnabled","add","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","getPosition","SetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","StructureCommandDispatcher","structureFilterCommandService","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","SchemaRowColoring","StructureSchemaMangerComponent","schemaCommandService","schemaReadModelService","keys","val","isInteger","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","toLowerCase","StructureSchemaManagerIconComponent","[class.gui-structure-schema-manager-icon]","StructureSchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","ActiveFilterMenuTriggerDirective","el","activeFilterService","Directive","FilterIconComponent","[class.gui-filter-icon]","FilterEnabledRepository","enabled$","setEnabled","onFilterEnabled","QuickFilterEnabledRepository","onQuickFilterEnabled","FilterTypeRepository","ActiveFilterRepository","UniqueValuesRepository","FilterWarehouse","structureFilterRepository","structureQuickFilterRepository","filterTypeRepository","uniqueValuesRepository","activeFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","FilterMenuComponent","filterWarehouse","filterCommandDispatcher","compositionWarehouse","activeFilters","filterTypeMap","fieldReadModels","onColumnSelect","selectedColumn","filterTypes","getFilterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","[class.gui-filter-menu]","filterContainerToken","FilterMenuTriggerComponent","drawerService","filterContainerRef","openDrawer","[class.gui-filter-menu-trigger]","FabricDrawerService","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","formBuilder","valueChanged","controlsConfig","FORM_FILTER_VALUE","filterForm","group","controls","valueChanges","[class.gui-filter-value]","FormBuilder","ActiveFilterListComponent","FieldSelectorComponent","fieldSelected","SearchingRepository","onSearchingEnabled","SearchPhraseRepository","phrase","phrase$","setPhrase","onPhrase","observePhrases","SearchWarehouse","structureSearchingRepository","searchPhraseRepository","onSearchEnabled","SetConfigSearchingCommand","searchConfig","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","search","SearchCommandDispatcher","searchDispatcher","ActiveSearchComponent","searchCommandDispatcher","searchWarehouse","clearSearch","FilterMenuFeatureModule","ReactiveFormsModule","SourceCounterFeatureModule","StructureInfoPanelModule","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","filterFieldName","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","NumberEditTemplateComponent","fb","Override","container","getPrototypeOf","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","toggle","changed","ColumnQueryComponent","ContentChild","HTML","CellValue","text","CellValueType","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","getById","save","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","cellView","templateFunction","cellValue","fromDataType","getCellView","getTemplateFunction","AbstractColumnEntity","columnField","presentation","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","context","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","FieldId","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","cellEditingEnabled","isBooleanDataType","entity","searchPhrase","findValue","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","pos","ph","join","ColumnDefinition","sort","setField","setTemplateFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","uid","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","ReadModelRoot","CompositionReadModelRootConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","toReadModel","InMemoryReadModelStore","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","has","ifPresent","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","isArray","createColumn","getColumn","convertWidth","columnEntity","RandomStringGenerator","generate","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","ColumnField","ColumnFieldFactory","CompositionEventRepository","onColumnsChanged","onContainerWidthChanged","commandProviders","readProviders","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","direction","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","createEvent","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","AggregateRoot","CompositionAggregateFactory","AggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","getAggregateRepository","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","className","[class.gui-text-view]","Attribute","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","ofMessageType","dir","components","exportDeclarations","compositionKey","CompositionModule","FabricDatePickerModule","defineAggregate","registerMultiDomainEventHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingWarehouse","Observable","ADD","RANGE","LocalFormationCommandDispatcher","setDefault","LocalFormationWarehouse","rowSelectedArchive","LocalStructureCommandDispatcher","StructureWarehouse","LocalStructureWarehouse","LocalSourceCommandDispatcher","LocalSourceWarehouse","LocalCompositionCommandDispatcher","columnDefId","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","getVerticalFormation","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ItemEntity","version","getUiId","getVersion","isSelected","isEven","isOdd","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","RowHeightSetEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","StructureVerticalFormationWarehouse","verticalFormationRepository","LocalStructureVerticalFormationWarehouse","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","removeThemeCssClasses","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","ENTER","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldsInitedEvent","getFields","ColumnParams","StructureColumnInputHandler","columnFieldFactory","compositionCommandDispatcher","simpleChanges","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","StructureGateway","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","fieldCommandDispatcher","sourceCommandService","sourceEventService","schemaCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","structureColumnInputHandler","rowDetail","titlePanel","footerPanel","nextConfig","editMode","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","setSortingConfig","filtering","quickFilters","searching","onItemSelected","onSourceEdited","values","state","StructureCellEditState","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowChangedEvent","allSelected","allUnselected","isAllSelected","isAllUnselected","FormationEventService","StructureColumnMenuConfig","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","RowSelectEnabledRepository","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","onEvent","EventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","selectedRowValues","StructureRowDetailService","ref","turnOn","turnOff","close","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","SetSortingCommand","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandDispatcher","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","searchableFields","removeSearchFilters","searchedItems","Set","from","SearchManagerFactory","SearchPhraseSetEventHandler","structureSearchPhraseRepository","forEvent","ConfigSearchingSetEventHandler","SearchDomainModule","domainEventHandlers","registerDomainEventHandler","SearchApiModule","SearchIconComponent","SearchComponent","structureWarehouse","verticalFormationWarehouse","searchingEnabled","FORM_SEARCH_NAME","searchForm","stopObserveChanges","clear","reset","searchInputSubscription","debounceTime","[class.gui-search-bar]","SearchFeatureModule","searchApiModule","FieldReadModel","getName","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","addFields","fields_1","fields_1_1","addField","Field","of","dataField","getKey","getDisplayValue","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","matchers","accessorMethod","getMatchers","getSearchMatcher","getSortMatcher","getSearchValue","DataField","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","assignDefaultSummaries","UnknownDataField","one","two","NumberDataField","numOne","numTwo","StringDataField","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","Optional","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldIdGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","configs","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","publishFromAggregate","createFields","FieldDomainModule","FieldCommandDispatcher","FieldApiModule","FieldFeatureModule","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","SetSourceLoadingEvent","SourceSetLoadingCommandHandler","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","deleteOneOriginItem","deleteOriginItemByIndex","findOriginItemIndex","removedElements","removedElements_1","removedElements_1_1","unselectRow","deleteManyOriginItemByIndex","deleteManyOriginItemByItemID","addOriginItem","toggleRow","getFormation","FormationManager","setMode","allItemIds","RowSelectToggleType","calculateAllSelected","calculateAllUnselected","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","StructureOriginChangedEventHandler","origin_1","StructurePreparedItemsEventHandler","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","isIndeterminate","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","DeleteOriginItemCommandHandler","deleteItem","SourceDomainModule","SourceApiModule","SourceFeatureModule","sourceApiModule","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","compositionEventRepository","pagingDisplayModeArchive","structureDefinition","structureReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","setStyle","[class.gui-structure]","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","uniqueValues","uniqueValuesReadModel","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","rowDetailOpened","combineLatest","trackByFn","translateY","clearSelectedRows","selectedElements","querySelectorAll","StructureRowComponent","elRef","detailsEnabled","selectedItem","checkSelectedItem","prevValue","selectRow","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","structureReadModelWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterToggledEvent","FilterAddedEvent","ActiveFiltersSetEvent","filters","getFilters","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","multi","summariesProviders","FieldsInitedEventHandler","fieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","Filter","filterValue","getFilterValue","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","ContainsFilterType","includes","FilterTypeId","FilterTypeIdGenerator","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","getFilterType","getFieldIdsToFilterTypes","readModels","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","getSettings","arr","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","FilterTypesInitedEvent","getMap","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setConfig","toggleFilter","externalFilterId","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","select","unselect","searchedEntities","filterAll","ents","ae","calculateAll","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","displayValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","allDisabled","getNotSelected","uv","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","a","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","selectAllChecked","isSelectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","SchemaHorizontalGridSetEventHandler","horizontalGridRepository","SchemaRowColoringSetEventHandler","SchemaVerticalGridSetEventHandler","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","EmptySourceComponent","[class.gui-empty-source]","EmptySourceFeatureModule","StructureThemeGateway","theme2","ToggleFilterCommand","getExternalFilterId","ToggleFilterCommandHandler","externalFieldId","AddFilterCommandHandler","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","SetConfigFilterCommandHandler","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","ConfigQuickFilterSetEventHandler","ConfigFilterSetEventHandler","FilterTypeMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEventHandler","activeFiltersSetEvent","UniqueValuesReadModel","calculateSelection","areAllSelected","areAllDisabled","UniqueValueReadModel","geDisplayValue","UniqueFilterCalculatedEventHandler","calculatedEvent","uvRM_1","valuesRM","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","FilterApiModule","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GuiGridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any) => string;\n\n}\n\nexport interface GuiTitlePanel {\n\n\tenabled?: boolean;\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiFooterPanel {\n\n\tenabled?: boolean\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiInfoPanel {\n\n\tenabled?: boolean;\n\n\tinfoDialog?: boolean;\n\n\tcolumnsManager?: boolean;\n\n\tschemaManager?: boolean;\n\n\tsourceSize?: boolean\n\n}\n\nexport enum GuiRowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum GuiRowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport interface GuiRowSelection {\n\n\tenabled?: boolean;\n\n\ttype?: string | GuiRowSelectionType;\n\n\tmode?: string | GuiRowSelectionMode;\n\n}\n\nexport interface GuiSelectedRow {\n\n\tdata?: any;\n\n\tindex: number;\n\n\titemId: any;\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../domain-api/gui.grid.public-api';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\nexport class GuiGridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../lib/structure/domain/structure/summaries/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../gui.grid.index';\n\n\nexport class GuiGridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tlet columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../domain-api/gui.grid.public-api';\nimport { CellView } from '../../../../../lib/composition/domain/column/cell-view';\n\nexport class GuiGridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../gui.grid.index';\n\nexport class GuiGridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../gui.grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column/column-cell-editing.config';\n\nexport class GuiGridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../domain-api/gui.grid.public-api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column/column-align';\n\nexport class GuiGridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../domain-api/gui.grid.public-api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column/column.config';\n\nimport { GuiGridColumnTypeConverter } from './gui.grid.column-type.converter';\nimport { GuiGridColumnSummariesConverter } from './summaries/gui.grid.column-summaries.converter';\nimport { GuiGridColumnViewConverter } from './gui.grid.column-view.converter';\nimport { GuiGridColumnSortingConverter } from './sorting/gui.grid.column-sorting.converter';\nimport { GuiGridColumnCellEditingConverter } from './cell-editing/gui.grid.column-cell-editing.converter';\nimport { GuiGridColumnAlignConverter } from './align/gui.grid.column-align.converter';\n\n\nexport class GuiGridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GuiGridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GuiGridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GuiGridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GuiGridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GuiGridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GuiGridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../domain-api/gui.grid.public-api';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\nexport class GuiGridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../domain-api/gui.grid.public-api';\nimport { RowColoring } from '../../../../../schema/domain-api/row-coloring';\n\n\nexport class GuiGridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../domain-api/gui.grid.public-api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/domain-api/column-menu-config';\n\n@Injectable()\nexport class GuiGridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../structure/paging/feature/mode/paging-display-mode';\nimport { GuiPaging, GuiPagingDisplay } from '../../../domain-api/gui.grid.public-api';\nimport { PagingConfig } from '../../../../../structure/paging/domain-api/paging-config';\n\n\nexport class GuiGridPagingConverter {\n\n\tconvert(guiPaging: GuiPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { GuiRowSelection, GuiRowSelectionMode, GuiRowSelectionType } from '../../../domain-api/gui.grid.public-api';\nimport { RowSelection, RowSelectionMode, RowSelectionType } from '../../../../../structure/source/domain-api/row-selection';\n\nexport class GuiGridRowSelectionConverter {\n\n\tconvert(selection: boolean | GuiRowSelection): RowSelection {\n\n\t\tlet builder = new RowSelection.Builder();\n\n\t\tif (typeof selection === 'boolean') {\n\t\t\treturn builder.withEnabled(selection).build();\n\t\t} else {\n\n\t\t\tif (selection.enabled !== undefined) {\n\t\t\t\tbuilder.withEnabled(selection.enabled);\n\t\t\t}\n\n\t\t\tif (selection.mode !== undefined) {\n\t\t\t\tconst mode = this.convertMode(selection.mode);\n\n\t\t\t\tbuilder.withMode(mode);\n\t\t\t}\n\n\t\t\tif (selection.type !== undefined) {\n\t\t\t\tconst type = this.convertType(selection.type);\n\n\t\t\t\tbuilder.withType(type);\n\t\t\t}\n\n\t\t\treturn builder.build();\n\t\t}\n\n\t}\n\n\tprivate convertMode(mode: string | GuiRowSelectionMode): RowSelectionMode {\n\n\t\tif (typeof mode === 'string') {\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'single':\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t\tcase 'multiple':\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (mode) {\n\n\t\t\t\tcase GuiRowSelectionMode.SINGLE:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\n\t\t\t\tcase GuiRowSelectionMode.MULTIPLE:\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate convertType(type: string | GuiRowSelectionType): RowSelectionType {\n\n\t\tif (typeof type === 'string') {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'row':\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase GuiRowSelectionType.ROW:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\n\t\t\t\tcase GuiRowSelectionType.CHECKBOX:\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiFooterPanel,\n\tGuiInfoPanel,\n\tGuiPaging,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiRowSelection,\n\tGuiSearching,\n\tGuiSelectedRow,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme,\n\tGuiTitlePanel\n} from '../../domain-api/gui.grid.public-api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column/column.config';\n\nimport { GuiGridColumnConverter } from './column/gui.grid.column.converter';\nimport { GuiGridThemeConverter } from './theme/gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './coloring/gui.grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/domain-api/column-menu-config';\nimport { GuiGridColumnMenuConverter } from './column/menu/gui.grid.column-menu.converter';\nimport { GuiGridPagingConverter } from './paging/gui.grid.paging.converter';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { RowColoring } from '../../../../schema/domain-api/row-coloring';\nimport { GuiGridRowSelectionConverter } from './row-selection/gui.grid.row-selection.converter';\nimport { RowSelection } from '../../../../structure/source/domain-api/row-selection';\nimport { SelectedRow } from '../../../../structure/source/domain-api/formation/selected-row';\n\nexport abstract class GuiGridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPaging;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelection: boolean | GuiRowSelection;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | GuiInfoPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<GuiSelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\trowSelectionConfig: RowSelection;\n\n\tprivate readonly gridColumnConverter: GuiGridColumnConverter = new GuiGridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GuiGridThemeConverter = new GuiGridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GuiGridRowColoringConverter = new GuiGridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GuiGridColumnMenuConverter = new GuiGridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GuiGridPagingConverter = new GuiGridPagingConverter();\n\n\tprivate readonly gridRowSelectionConverter: GuiGridRowSelectionConverter = new GuiGridRowSelectionConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\tif (changes.rowSelection !== undefined && changes.rowSelection.currentValue !== undefined) {\n\t\t\tthis.rowSelectionConfig = this.gridRowSelectionConverter.convert(this.rowSelection);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonRowsSelect(rows: Array<SelectedRow>): void {\n\n\t\tconst guiRows: Array<GuiSelectedRow> = rows.map((row) => {\n\t\t\treturn {\n\t\t\t\tindex: row.getIndex(),\n\t\t\t\tdata: row.getData(),\n\t\t\t\titemId: row.getItemId()\n\t\t\t};\n\t\t});\n\n\t\tthis.selectedRows.emit(guiRows);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../../structure/paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\n/** @internal */\nexport const guiGridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\nimport { guiGridStructureDefinition } from './gui.grid-structure-definition';\n\nexport const guiGridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: guiGridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GuiGridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGuiGridIdGenerator.index++;\n\n\t\treturn GuiGridIdGenerator.PREFIX + GuiGridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiGridComponent } from '../gui.grid.component';\n\n@Injectable()\nexport class GuiGridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GuiGridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GuiGridComponent } from '../gui.grid.component';\n\nexport interface GuiGridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GuiGridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GuiGridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly data: any;\n\n\tconstructor(data: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.data = data;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { GuiSelectedRow } from '../../../domain-api/gui.grid.public-api';\nimport { FormationCommandDispatcher } from '../../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { SourceCommandDispatcher } from '../../../../../structure/source/domain-api/source.command-dispatcher';\nimport { SelectedRow } from '../../../../../structure/source/domain-api/formation/selected-row';\nimport { FormationWarehouse } from '../../../../../structure/source/domain-api/formation/formation.warehouse';\n\nexport interface GuiGridApi {\n\n\tgetSelectedRows(): Array<GuiSelectedRow>;\n\n\tselectAll(): void;\n\n\tunselectAll(): void;\n\n\tdeleteSelectedRows(): void;\n\n\tdeleteRow(row: GuiSelectedRow): void;\n\n\tdeleteRows(rows: Array<GuiSelectedRow>): void;\n\n}\n\nexport class GuiGridApiProvider {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate readonly formationCommandDispatcher: FormationCommandDispatcher;\n\n\tprivate readonly formationWarehouse: FormationWarehouse;\n\n\tprivate readonly sourceCommandDispatcher: SourceCommandDispatcher;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationCommandDispatcher: FormationCommandDispatcher,\n\t\t\t\tformationWarehouse: FormationWarehouse,\n\t\t\t\tsourceCommandDispatcher: SourceCommandDispatcher) {\n\t\tthis.structureId = structureId;\n\t\tthis.formationCommandDispatcher = formationCommandDispatcher;\n\t\tthis.formationWarehouse = formationWarehouse;\n\t\tthis.sourceCommandDispatcher = sourceCommandDispatcher;\n\t}\n\n\tprovide(): GuiGridApi {\n\n\t\tconst structureId = this.structureId,\n\t\t\tfcd = this.formationCommandDispatcher,\n\t\t\tfw = this.formationWarehouse,\n\t\t\tscd = this.sourceCommandDispatcher;\n\n\t\treturn {\n\n\t\t\tdeleteRow(row: GuiSelectedRow): void {\n\t\t\t\tscd.deleteRow(new SelectedRow(row.data, row.index, row.itemId), structureId);\n\t\t\t},\n\n\t\t\tdeleteRows(rows: Array<GuiSelectedRow>): void {\n\t\t\t\tconst selectedRows = rows.map((row: GuiSelectedRow) => new SelectedRow(row.data, row.index, row.itemId));\n\n\t\t\t\tscd.deleteRows(selectedRows, structureId);\n\t\t\t},\n\n\t\t\tdeleteSelectedRows(): void {\n\t\t\t\t// this.sourceCommandDispatcher.\n\t\t\t},\n\n\t\t\tgetSelectedRows(): Array<GuiSelectedRow> {\n\n\t\t\t\tconst rows = fw.getSelectedRows(structureId);\n\n\t\t\t\treturn rows.map((r: SelectedRow) => {\n\t\t\t\t\treturn { data: r.getData(), index: r.getIndex(), itemId: r.getItemId() };\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tselectAll(): void {\n\t\t\t\tfcd.selectAll(structureId);\n\t\t\t},\n\n\t\t\tunselectAll(): void {\n\t\t\t\tfcd.unselectAll(structureId);\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../domain-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class SetEnabledSelectionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SetSelectionModeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class SelectAllRowsCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class UnselectAllRowsCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(aggregateId: AggregateId): StructureReadModelRoot;\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tgetPreparedItems(structureId: StructureId): Array<OriginItemEntity> {\n\t\treturn this.origin.get(structureId.getId());\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../../lib/structure/domain-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../lib/structure/domain-api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class SourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tgetEntities(structureId: StructureId = structureGlobalId): Array<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<Array<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n\tgetPreparedEntities(structureId: StructureId = structureGlobalId): Array<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../lib/composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelRepository extends AggregateArchive<Array<FieldReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldReadModel>> {\n\t\treturn this.fieldReadModelRepository.on(structureId);\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { OriginId } from '../origin-id';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends Command {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../field/domain-api/field.warehouse';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.fieldWarehouse\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId = structureGlobalId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tlet selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tlet item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId = structureGlobalId): Observable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId = structureGlobalId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId = structureGlobalId): Observable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GuiGridGateway } from './gui.grid-gateway';\nimport { guiGridProviders } from './gui.grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/feature/structure-parent-component';\n\nimport { GuiGridIdGenerator } from './register/gui.grid-id.generator';\nimport { GuiGridRegister } from './register/gui.grid.register';\nimport { GridConsoleApiProvider } from './console/gui.grid.console.api';\nimport { GuiGridApi, GuiGridApiProvider } from './api/gui.grid.api-provider';\nimport { FormationCommandDispatcher } from '../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { SourceCommandDispatcher } from '../../../../structure/source/domain-api/source.command-dispatcher';\nimport { FormationWarehouse } from '../../../../structure/source/domain-api/formation/formation.warehouse';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './gui.grid.component.html',\n\tstyleUrls: [\n\t\t'../gui.grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiGridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GuiGridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class.gui-grid]': `\"true\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiGridComponent extends GuiGridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tpublic api: GuiGridApi;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly gridRegister: GuiGridRegister,\n\t\t\t\tprivate readonly gridIdGenerator: GuiGridIdGenerator,\n\t\t\t\t// delegate\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandDispatcher,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly sourceCommandDispatcher: SourceCommandDispatcher,\n\t\t\t\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.initApi();\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n\tprivate initApi(): void {\n\t\tthis.api = new GuiGridApiProvider(\n\t\t\tthis.structureRef.structureId,\n\t\t\tthis.formationCommandDispatcher,\n\t\t\tthis.formationWarehouse,\n\t\t\tthis.sourceCommandDispatcher\n\t\t).provide();\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTooltipModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../lib/structure/domain-api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../lib/structure/domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../../domain-api/paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\n\nimport { Paging } from '../domain-api/read/paging';\nimport { PagingWarehouse } from '../domain-api/paging.warehouse';\nimport { PagingCommandDispatcher } from '../domain-api/paging.command-dispatcher';\nimport { SourceWarehouse } from '../../source/domain-api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\n\n\n@Component({\n\tselector: 'gui-paging[position]',\n\ttemplateUrl: 'paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-paging]': `\"true\"`\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandDispatcher,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t} else {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t}\n\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisPagingVisible(): boolean {\n\t\treturn this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-select',\n\ttemplateUrl: `paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-select]': `\"true\"`\n\t}\n})\nexport class PagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-navigator',\n\ttemplateUrl: `alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-navigator]': `\"true\"`\n\t}\n})\nexport class AlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-pages',\n\ttemplateUrl: `alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-pages]': `\"true\"`\n\t}\n})\nexport class AlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandDispatcher } from './paging.command-dispatcher';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandDispatcher,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-navigator',\n\ttemplateUrl: `paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-navigator]': `\"true\"`\n\t}\n})\nexport class PagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-stats',\n\ttemplateUrl: `paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-stats]': `\"true\"`\n\t}\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../domain-api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.12.2\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../domain-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../domain-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends AggregateArchive<SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaRowColoringRepository extends AggregateArchive<SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly schemaManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager-dialog\">\n\t\t\t<gui-structure-schema-manager></gui-structure-schema-manager>\n\t\t</div>\n\t`\n})\nexport class StructureDialogSchemaManagerComponent {\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../domain-api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../lib/structure/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../domain/theme/schema-theme';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../../structure/source/domain-api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<div *ngIf=\"infoPanelConfig.isSourceSizeEnabled()\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<span *ngIf=\"preparedItemsSize !== totalItemsSize\"\n\t\t\t\t\t\t  gui-active-filter-menu-trigger>\n\t\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</span>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isSchemaManagerEnabled()\"\n\t\t\t\t\t  (click)=\"openSchemaManager()\">\n\t\t\t\t\t<gui-structure-schema-manager-icon></gui-structure-schema-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isColumnsManagerEnabled()\"\n\t\t\t\t\t  (click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isInfoDialogEnabled()\"\n\t\t\t\t\t  [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FilterConfig } from '../../domain-api/filter-config';\n\nexport class SetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class RemoveAllFiltersCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\nexport class AddFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FilterId } from '../../filter.id';\n\n\nexport class RemoveFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\nexport class SelectAllUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\nexport class UnselectAllUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\n\n\nexport class SelectUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\n\n\nexport class UnselectUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from '../domain/filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { QuickFiltersConfig } from '../../domain-api/quick-filters.config';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class SetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterCommandDispatcher } from '../../../structure/filter/domain-api/filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../structure/source/domain/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../../structure/filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../structure/filter/domain-api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../../structure/filter/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../lib/structure/domain-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../lib/structure/domain-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../domain-api/schema.warehouse';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../domain-api/schema.command-dispatcher';\nimport { SchemaReadModelRootId } from '../../domain-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../domain-api/row-coloring';\n\n@Component({\n\tselector: 'gui-structure-schema-manager',\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager\">\n\t\t\t<div class=\"gui-dialog-title\">Theme manager:</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>Theme:</span>\n\t\t\t\t<gui-select [options]=\"themes\"\n\t\t\t\t\t\t\t[selected]=\"selectedTheme\"\n\t\t\t\t\t\t\t[placeholder]=\"'Select theme'\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleTheme($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>Row coloring:</span>\n\t\t\t\t<gui-select [options]=\"coloring\"\n\t\t\t\t\t\t\t[selected]=\"selectedRowColoring\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleRowColoring($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<gui-checkbox [checked]=\"verticalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleVerticalGrid($event)\">Vertical grid\n\t\t\t</gui-checkbox>\n\t\t\t<gui-checkbox [checked]=\"horizontalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleHorizontalGrid($event)\">Horizontal grid\n\t\t\t</gui-checkbox>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends Reactive {\n\n\tcoloring = Object.keys(SchemaRowColoring)\n\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t .filter((val) => !Number.isInteger(val));\n\n\tthemes = Object.keys(SchemaTheme)\n\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t   .filter((val) => !Number.isInteger(val));\n\n\tselectedRowColoring: string;\n\tselectedTheme: string;\n\tverticalGrid: boolean;\n\thorizontalGrid: boolean;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate schemaCommandService: SchemaCommandDispatcher,\n\t\t\t\tprivate schemaReadModelService: SchemaWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaReadModelService\n\t\t\t.onRowColoring(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = SchemaRowColoring[rowColoring];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = SchemaTheme[schemaTheme];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onVerticalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHorizontalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleTheme(theme: string): void {\n\t\tthis.schemaCommandService.setTheme(this.toTheme(theme), this.schemaReadModelRootId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: string): void {\n\t\tthis.schemaCommandService.setRowColoring(this.toRowColoring(schemaRowColoring), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandService.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandService.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-schema-manager-icon';\n\n\n@Component({\n\tselector: 'gui-structure-schema-manager-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"24\" viewBox=\"0 0 32 24\">\n\t\t\t<g transform=\"translate(0 -4)\">\n\t\t\t\t<path id=\"Path_303\" data-name=\"Path 303\" d=\"M23.337,4H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_304\" data-name=\"Path 304\" d=\"M11.662,4h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_305\" data-name=\"Path 305\" d=\"M0,4H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_306\" data-name=\"Path 306\" d=\"M23.337,22H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_307\" data-name=\"Path 307\" d=\"M0,22H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_308\" data-name=\"Path 308\" d=\"M11.662,22h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_309\" data-name=\"Path 309\" d=\"M23.337,13H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_310\" data-name=\"Path 310\" d=\"M11.662,13h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_311\" data-name=\"Path 311\" d=\"M0,13H8.662v6H0Z\"/>\n\t\t\t</g>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-schema-manager-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureSchemaManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../lib/structure/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class StructureSchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<h3>Active filters</h3>\n\n\t\t<gui-active-filter-list></gui-active-filter-list>\n\n\t\t<div>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../lib/structure/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly renderer: Renderer2,\n\t\t\t\tprivate readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-filter-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-icon]': 'true'\n\t}\n})\nexport class FilterIconComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class FilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class QuickFilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeRepository extends AggregateArchive<FilterTypeMap> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterRepository extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesRepository extends AggregateArchive<UniqueValuesReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\n\n\n@Injectable()\nexport class FilterWarehouse {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledRepository,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledRepository,\n\t\t\t\tprivate readonly filterTypeRepository: FilterTypeRepository,\n\t\t\t\tprivate readonly uniqueValuesRepository: UniqueValuesRepository,\n\t\t\t\tprivate readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.onFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.onQuickFilterEnabled(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): Observable<FilterTypeMap> {\n\t\treturn this.filterTypeRepository.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): Observable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterRepository.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): Observable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../lib/composition/domain-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../lib/composition/domain-api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/domain-api/field.warehouse';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FieldReadModel } from '../../../field/domain-api/read/field.read-model';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { FilterTypeMap } from '../../domain-api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../domain/type/filter-type.id';\nimport { FilterCommandDispatcher } from '../../domain-api/filter.command-dispatcher';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\n\n\n@Component({\n\tselector: 'gui-filter-menu',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<gui-active-filter-list></gui-active-filter-list>\n\t\t</div>\n\n\t\t<!--\t\t<div>-->\n\t\t<!--\t\t\t<gui-column-selector-->\n\t\t<!--\t\t\t\t\t[columns]=\"columns\"-->\n\t\t<!--\t\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">-->\n\t\t<!--\t\t\t</gui-column-selector>-->\n\n\t\t<!--\t\t\t<ng-container *ngIf=\"selectedColumn\">-->\n\t\t<!--\t\t\t\t{{selectedColumn.getFieldId()}}-->\n\t\t<!--\t\t\t</ng-container>-->\n\t\t<!--\t\t</div>-->\n\n\t\t<div>\n\t\t\t<gui-field-selector\n\t\t\t\t\t[fields]=\"fields\"\n\t\t\t\t\t(fieldSelected)=\"onFieldSelect($event)\">\n\t\t\t</gui-field-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedColumn\">\n\t\t\t\t{{selectedColumn.getFieldId()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<gui-filter-type-selector\n\t\t\t\t\t[filterTypes]=\"filterTypes\"\n\t\t\t\t\t(filterTypeSelected)=\"onFilterTypeSelect($event)\">\n\t\t\t</gui-filter-type-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedFilterTypeId\">\n\t\t\t\t{{selectedFilterTypeId.toString()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\n\t\t\t<gui-filter-value *ngIf=\"selectedFilterTypeId\"\n\t\t\t\t\t\t\t  (valueChanged)=\"onValueChanged($event)\">\n\t\t\t</gui-filter-value>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t[disabled]=\"!selectedFilterTypeId\"\n\t\t\t\t\t(click)=\"addFilter()\">\n\t\t\t\tFilter\n\t\t\t</button>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[secondary]=\"true\"\n\t\t\t\t\t(click)=\"removeAllFilters()\">\n\t\t\t\tClear filters\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-menu]': 'true'\n\t}\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilterTypes(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.fieldWarehouse\n\t\t\t.onFields(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { ChangeDetectionStrategy, Component, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { filterContainerToken } from './config/filter-container-token';\nimport { FilterContainerRef } from './config/filter-container-ref';\n\n@Component({\n\tselector: 'gui-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-filter-icon-wrapper\">\n\t\t\t<gui-filter-icon></gui-filter-icon>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-filter-menu-trigger]': 'true'\n\t},\n\tstyleUrls: [\n\t\t'./style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../lib/composition/domain-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-column-selector[columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../domain/type/filter-type.id';\nimport { PureComponent } from '../../../../common/cdk/pure-component';\n\n@Component({\n\tselector: 'gui-filter-type-selector[filterTypes]',\n\ttemplate: `\n\n\t\t<ng-container>\n\t\t\tFilter Type:\n\t\t</ng-container>\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let filterType of filterTypes\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(filterType)\">\n\t\t\t\t{{filterType.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n\n@Component({\n\tselector: 'gui-filter-value',\n\ttemplate: `\n\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"filterForm\">\n\n\t\t\t<input formControlName=\"filterValue\"/>\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-value]': `\"true\"`\n\t}\n})\nexport class FilterValueComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(private readonly formBuilder: FormBuilder) {\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FilterCommandDispatcher } from '../../domain-api/filter.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-active-filter-list',\n\ttemplate: `\n\n\t\t<div *ngFor=\"let filter of activeFilters\">\n\t\t\t{{filter.getText()}}\n\t\t\t<span (click)=\"removeFilter(filter)\">X</span>\n\t\t</div>\n\n\t\t<gui-active-search></gui-active-search>\n\n\n\t`\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../field/domain-api/read/field.read-model';\n\n@Component({\n\tselector: 'gui-field-selector[fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\n\n\n@Injectable()\nexport class SearchWarehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SearchConfig } from '../../domain-api/search-config';\n\n\nexport class SetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../domain-api/search-config';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandDispatcher {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/domain-api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { SearchCommandDispatcher } from '../../../../search/domain-api/search.command-dispatcher';\n\n@Component({\n\tselector: 'gui-active-search',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"phrase\">\n\t\t\t<div>\n\t\t\t\tActive search by:\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<gui-chip>{{phrase}}</gui-chip>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button gui-button\n\t\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t\t(click)=\"clearSearch()\">\n\t\t\t\t\tClear search\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './menu/value/filter-value.component';\nimport { ActiveFilterListComponent } from './active-filters/active-filter-list.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { ActiveSearchComponent } from './active-filters/search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tActiveFilterListComponent,\n\t\tFieldSelectorComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent,\n\t\tActiveFilterListComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../filter/feature/filter-menu.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\nimport { StructureSchemaManagerModule } from '../../../../../schema/feature/manager/structure.schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../../structure/source-counter/feature/source-counter.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tStructureSchemaManagerModule,\n\t\tSourceCounterFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../../structure/field/domain/core/field/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../../structure/source/domain/core/item/item.entity';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../../structure/field/domain/core/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../domain-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className;\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t], [\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandDispatcher } from '../../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../../../structure/paging/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../../structure/paging/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../../structure/paging/domain-api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../../../structure/paging/domain-api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../../structure/paging/domain-api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandDispatcher } from '../../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../../../structure/source/domain/formation/formation.dispatcher';\nimport { RowSelectToggleType } from '../../../../../structure/source/domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(commandDispatcher, formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType): void {\n\t\tsuper.toggleSelectedRow(selectedRow, type, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationWarehouse } from '../../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { RowSelectedRepository } from '../../../../../structure/source/domain-api/formation/row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from '../../../../../structure/source/domain-api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../structure/source/domain-api/formation/mode/row-selection-mode.repository';\nimport { SourceWarehouse } from '../../../../../structure/source/domain-api/source.warehouse';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends FormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\trowSelectedArchive: RowSelectedRepository,\n\t\t\t\trowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tsourceWarehouse: SourceWarehouse) {\n\t\tsuper(rowSelectedArchive, rowSelectionModeRepository, sourceWarehouse);\n\t}\n\n\t@Override\n\tonRowSelectedReadModel(): Observable<RowSelectedReadModel> {\n\t\treturn super.onRowSelectedReadModel(this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FilterCommandDispatcher } from '../../../../../structure/filter/domain-api/filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../../../structure/source/domain/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { FilterConfig } from '../../../../../structure/filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../../../structure/filter/domain-api/quick-filters.config';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: FilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../domain-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../../../structure/source/domain-api/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../../../structure/source/domain/source.dispatcher';\nimport { SourceWarehouse } from '../../../../../structure/source/domain-api/source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../../../structure/source/domain/origin/edit/structure.edit-source-item.params';\nimport { FieldWarehouse } from '../../../../../structure/field/domain-api/field.warehouse';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tfieldWarehouse: FieldWarehouse,\n\t\t\t\tsourceReadModelService: SourceWarehouse) {\n\t\tsuper(commandDispatcher, sourceDispatcher, fieldWarehouse, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceWarehouse } from '../../../../../structure/source/domain-api/source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../../../structure/source/domain-api/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../../../structure/source/domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../../../structure/source/domain-api/prepared/structure.prepared-items.repository';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { OriginItemEntity } from '../../../../../structure/source/domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends SourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn super.getEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<Array<OriginItemEntity>> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/domain-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/domain-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/domain-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/domain-api/composition.global-id';\nimport { FieldId } from '../../../../../structure/field/domain/core/field/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../../structure/search/domain/search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../../../structure/search/domain-api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../../structure/search/domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../../structure/search/domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/domain-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/domain-api/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/domain-api/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/domain-api/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/domain-api/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaRowColoring } from '../../../../../schema/domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../../schema/domain-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { Source } from '../../../../structure/source/domain-api/read/source';\nimport { ItemEntity } from '../../../../structure/source/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../structure/paging/domain-api/read/paging.converter';\nimport { SourceConverter } from '../../../../structure/source/domain-api/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../structure/source/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../structure/source/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../domain-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../domain-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/domain-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../../structure/source/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../structure/search/domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../domain-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { FormationCommandDispatcher } from '../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationWarehouse } from '../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../../../structure/source/domain-api/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { SourceWarehouse } from '../../../../structure/source/domain-api/source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { SearchDispatcher } from '../../../../structure/search/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../../schema/domain-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: FormationCommandDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: FormationCommandDispatcher, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../domain-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Field } from '../core/field/field';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { SimpleChanges } from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../../structure/field/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../../structure/field/domain-api/field.config';\nimport { FieldsInitedEvent } from '../../../../../structure/field/domain/init/fields-inited.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Field } from '../../../../../structure/field/domain/core/field/field';\nimport { ColumnFieldId } from '../../../../composition/domain/column/field/column-field.id';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { CompositionCommandDispatcher } from '../../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { ColumnFieldFactory } from '../../../../composition/domain/column/field/colum-field.factory';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandDispatcher: CompositionCommandDispatcher) {\n\t}\n\n\thandle(simpleChanges: SimpleChanges): void {\n\n\t\tconst fieldConfigs = simpleChanges.columns.currentValue;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs as Array<FieldConfig>);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tcolumns = event.fieldConfigs,\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandDispatcher.setColumns(params, this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../../../structure/sorting/domain-api/sorting-config';\nimport { FilterConfig } from '../../../../structure/filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../../structure/filter/domain-api/quick-filters.config';\nimport { SearchConfig } from '../../../../structure/search/domain-api/search-config';\nimport { SummariesConfig } from '../../domain-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../../../structure/source/domain-api/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../../../../structure/source/domain-api/source.command-dispatcher';\nimport { SourceEventService } from '../../../../structure/source/domain-api/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/domain-api/composition.event-repository';\nimport { FormationEventService } from '../../../../structure/source/domain-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../domain-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../../structure/source/domain-api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../../structure/search/domain-api/search.event-repository';\nimport { SchemaCommandDispatcher } from '../../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/domain-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../../schema/domain-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { InfoPanelConfig } from '../panel/info/info-panel.config';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandDispatcher } from '../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { SearchCommandDispatcher } from '../../../../structure/search/domain-api/search.command-dispatcher';\nimport { FieldCommandDispatcher } from '../../../../structure/field/domain-api/field.command-dispatcher';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../composition/domain/column/field/colum-field.factory';\nimport { RowSelection } from '../../../../structure/source/domain-api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../../structure/source/domain-api/formation/type/row-selection-type.archive';\nimport { FormationCommandDispatcher } from '../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { SelectedRow } from '../../../../structure/source/domain-api/formation/selected-row';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprotected constructor(\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandDispatcher,\n\t\tprotected searchCommandDispatcher: SearchCommandDispatcher,\n\t\tprotected fieldCommandDispatcher: FieldCommandDispatcher,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandDispatcher: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandDispatcher,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelection !== undefined && simpleChanges.rowSelection.currentValue !== undefined) {\n\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns !== undefined && simpleChanges.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(simpleChanges);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(searching, this.structureId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getData()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SelectedRowChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { SelectedRow } from './selected-row';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<SelectedRow>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\t\t   const selectedRows = event.getSelectedRows();\n\n\t\t\t\t\t\t   return this.sourceWarehouse\n\t\t\t\t\t\t\t\t\t  .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t\t\t  let selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t\t\t  length = items.length;\n\n\t\t\t\t\t\t\t\t\t\t\t  for (let i = 0; i < length; i += 1) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t  let item = items[i];\n\n\t\t\t\t\t\t\t\t\t\t\t\t  if (selectedRows.some((row: string) => row === item.getId().toString())) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t  selectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t  return selectedItems;\n\t\t\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class SearchEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SearchPhraseSetDomainEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => event.getTheme())\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventService } from '../../../../structure/source/domain-api/formation/formation-event.service';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventService,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SortingConfig } from '../../domain-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SortOrder } from '../../../../lib/composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { CompositionId } from '../../../lib/composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../lib/composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SortingCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureReadModelRepository } from '../../../lib/structure/domain-api/read/structure.read-model-repository';\nimport { AggregateId } from '@generic-ui/hermes';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../lib/structure/domain-api/read/structure.read-model-root';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class SortingWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class SortingEventRepository {\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandDispatcher } from './sorting.command-dispatcher';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandDispatcher,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../domain-api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../../lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../lib/structure/domain/structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../source/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { DataType } from '../../field/domain/core/field/data/data-type';\nimport { Field } from '../../field/domain/core/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../domain-api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../domain-api/enabled/config-searching-set.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandDispatcher } from './search.command-dispatcher';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandDispatcher,\n\t\tSearchWarehouse,\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-search-icon',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class SearchIconComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\nimport { StructureWarehouse } from '../../../lib/structure/domain-api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../lib/structure/domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { SearchCommandDispatcher } from '../domain-api/search.command-dispatcher';\nimport { SearchWarehouse } from '../domain-api/search.warehouse';\n\n\n@Component({\n\tselector: 'gui-search-bar',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t\t<gui-search-icon></gui-search-icon>\n\t\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\" class=\"gui-clear-search-icon\" (click)=\"clear()\"></span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-search-bar]': `\"true\"`\n\t},\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../domain-api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\t// SearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/core/field/field.id';\nimport { DataType } from '../../domain/core/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/core/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../../domain-api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../lib/composition/domain/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../../domain-api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tlet matcher = fieldConfig.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../../domain-api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './core/field-collection.factory';\nimport { DataFieldFactory } from './core/field/data/data-field.factory';\nimport { FieldIdGenerator } from './core/field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './core/field/field.factory';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandDispatcher {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandDispatcher } from './field.command-dispatcher';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandDispatcher,\n\n\t\tFieldReadModelRepository,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../domain-api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (let element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tlet rows = Array.from(this.selectedRows),\n\t\t\t\tequal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i+= 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\n\nexport class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(rowChangedEvent.getSelectedRows(), rowChangedEvent.isAllSelected(), rowChangedEvent.isAllUnselected());\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SelectionModeSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { StructureOriginChangedEventHandler } from '../domain-api/origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from '../domain-api/prepared/structure.prepared-items.event-handler';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../domain-api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../domain-api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventService } from './formation/formation-event.service';\nimport { FormationCommandDispatcher } from './formation/formation.command-dispatcher';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginRepository,\n\t\tStructurePreparedItemsRepository,\n\t\tSourceConverter,\n\n\t\tSourceCommandDispatcher,\n\t\tSourceWarehouse,\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventService,\n\n\t\tFormationCommandDispatcher,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../domain-api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../domain-api/source.api-module';\nimport { RowSelectionModeRepository } from '../domain-api/formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive,\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../domain-api/read/structure.read-model-root';\nimport { PagingCommandDispatcher } from '../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../../../structure/source/domain-api/source.command-dispatcher';\nimport { SourceEventService } from '../../../structure/source/domain-api/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/domain-api/composition.event-repository';\nimport { FormationEventService } from '../../../structure/source/domain-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../domain-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/domain-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../structure/source/domain-api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../structure/search/domain-api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/domain-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../../structure/sorting/feature/sorting.feature-module';\nimport { SortingCommandDispatcher } from '../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { SearchFeatureModule } from '../../../structure/search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../../structure/field/feature/field.feature-module';\nimport { SearchCommandDispatcher } from '../../../structure/search/domain-api/search.command-dispatcher';\nimport { FieldCommandDispatcher } from '../../../structure/field/domain-api/field.command-dispatcher';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../composition/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../../structure/filter/feature/config/filter-container-ref';\nimport { filterContainerToken } from '../../../structure/filter/feature/config/filter-container-token';\nimport { FormationCommandDispatcher } from '../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { RowSelectionTypeArchive } from '../../../structure/source/domain-api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../../structure/source/feature/source.feature-module';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t// '../../../structure/paging/feature/style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t// '../../../structure/filter/feature/style/structure-filter.ngx.scss',\n\t\t'../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure]': `\"true\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandDispatcher,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandDispatcher,\n\t\t\t\tsearchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tfieldCommandDispatcher: FieldCommandDispatcher,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandDispatcher,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandDispatcher.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../../structure/filter/domain-api/filter.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { UniqueValuesReadModel } from '../../../../../structure/filter/domain-api/unique/unique-values.read-model';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t\t<gui-unique-value-list\n\t\t\t\t\t\t\t\t[fieldId]=\"column.getFieldId()\">\n\t\t\t\t\t\t</gui-unique-value-list>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SortingCommandDispatcher } from '../../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationCommandDispatcher } from '../../../../../structure/source/domain-api/formation/formation.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandDispatcher,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandDispatcher } from '../../../../../structure/filter/domain-api/filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: FilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { FilterWarehouse } from '../../../../structure/filter/domain-api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../../structure/source/domain-api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../../structure/source/domain-api/formation/type/row-selection-type.archive';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { FilterCommandDispatcher } from '../../../../../structure/filter/domain-api/filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: FilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { FormationCommandDispatcher } from '../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../../structure/source/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../domain-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SearchPhraseRepository } from '../../../../structure/search/domain-api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../../structure/search/domain-api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../../structure/source/domain-api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../../structure/source/domain-api/row-selection';\nimport { RowSelectToggleType } from '../../../../structure/source/domain/formation/core/row-select-toggle-type';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\t// this.formationWarehouse\n\t\t// \t.onRowSelectedReadModel()\n\t\t// \t.pipe(\n\t\t// \t\tfilter(() => !this.checkboxSelection),\n\t\t// \t\tthis.takeUntil()\n\t\t// \t)\n\t\t// \t.subscribe((rowSelected: RowSelectedReadModel) => {\n\t\t//\n\t\t// \t\tthis.clearSelectedRows();\n\t\t//\n\t\t// \t\trowSelected.getAll()\n\t\t// \t\t\t\t   .forEach((id: string) => {\n\t\t//\n\t\t// \t\t\t\t\t   const strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t// \t\t\t\t\t\t   selectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\t\t//\n\t\t// \t\t\t\t\t   if (selectedRowEl) {\n\t\t// \t\t\t\t\t\t   this.renderer.addClass(selectedRowEl, 'selected');\n\t\t// \t\t\t\t\t   }\n\t\t// \t\t\t\t   });\n\t\t// \t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, ViewEncapsulation, SimpleChanges, OnChanges, ElementRef, Renderer2 } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../../structure/source/domain/core/item/item.entity';\nimport { FormationCommandDispatcher } from '../../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowSelectToggleType } from '../../../../../structure/source/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { RowSelectedReadModel } from '../../../../../structure/source/domain-api/formation/row-selected.read-model';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `./structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t} else {\n\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../../../structure/source/domain-api/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../../structure/source/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../../structure/source/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { SourceWarehouse } from '../../../../structure/source/domain-api/source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { FormationWarehouse } from '../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../../structure/source/domain/core/item/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../../structure/filter/domain-api/filter.warehouse';\nimport { SearchWarehouse } from '../../../../structure/search/domain-api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../domain-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: FilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class SelectionEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class FilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterToggledEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\nexport class FilterAddedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\n\nexport class ActiveFiltersSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class UniqueFilterSelectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class AllUniqueFilterSelectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class UniqueFilterUnselectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class AllUniqueFilterUnselectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../../structure/source/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../../structure/paging/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../../structure/paging/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../../structure/paging/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../../structure/paging/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../../structure/source/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../../structure/sorting/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../../structure/source/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../../structure/filter/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../../structure/search/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FilterAddedEvent } from '../../../../../structure/filter/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../../structure/filter/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../../structure/filter/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../../structure/filter/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../../structure/filter/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../../structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(aggregateId: AggregateId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(aggregateId.getId());\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './domain-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../domain-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './domain-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../../../structure/source/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../../../structure/field/domain/core/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../../../structure/field/domain/core/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../../structure/field/domain/core/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../../structure/field/domain/core/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/core/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../../structure/field/domain/core/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../../structure/field/domain/core/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../../structure/field/domain/core/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../../../../../structure/field/domain/core/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../../../structure/source/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../../../structure/field/domain/core/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './field.read-model-repository';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.ofMessageType('StructureSummariesChangedEvent')),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../domain-api/filter-config';\nimport { SearchConfig } from '../../search/domain-api/search-config';\nimport { QuickFiltersConfig } from '../domain-api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../field/domain/core/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (let fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (let filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../../domain/filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../field/domain/core/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../domain-api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from './filter.id-generator';\nimport { ActiveFilterReadModel } from '../domain-api/active/active-filter.read-model';\nimport { FilterId } from './filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (let filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Field } from '../core/field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../domain-api/type/filter-type.read-model';\n\nexport class FilterTypesInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../domain-api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\n\n\nexport class FilterTypesInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../domain-api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\n\n\nexport class FilterAddedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../domain-api/active/active-filter.read-model';\n\n\nexport class FilterRemovedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { UniqueValue } from '../unique-value';\n\nexport class UniqueFilterCalculatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\n\nexport class UniqueFilterCalculatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\n\nexport class SelectedRowChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\n\nexport class SelectionEnabledSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SelectionModeSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../../../structure/paging/domain/paging.manager';\nimport { SourceManager } from '../../../../structure/source/domain/core/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from '../../../../structure/sorting/domain/sorter.collection';\nimport { FilterManager } from '../../../../structure/filter/domain/filter.manager';\nimport { FieldCollection } from '../../../../structure/field/domain/core/field-collection';\nimport { FormationManager } from '../../../../structure/source/domain/formation/core/formation-manager';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../../../../structure/source/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { OriginItemEntity } from '../../../../structure/source/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../../../structure/sorting/domain-api/sorting-config';\nimport { FieldId } from '../../../../structure/field/domain/core/field/field.id';\nimport { StructureSorter } from '../../../../structure/sorting/domain/structure.sorter';\nimport { FilterConfig } from '../../../../structure/filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../../structure/filter/domain-api/quick-filters.config';\nimport { SearchConfig } from '../../../../structure/search/domain-api/search-config';\nimport { SearchManager } from '../../../../structure/search/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../../../structure/source/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../../../structure/field/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../../../structure/field/domain-api/field.config';\nimport { Override } from '../../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../../../structure/filter/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../../../structure/filter/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../../../structure/filter/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../../../structure/filter/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../../../structure/filter/domain/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../../../structure/filter/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../../../structure/filter/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../../structure/filter/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../../../structure/filter/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../../../structure/filter/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../../../structure/filter/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../../../structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../../../structure/filter/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../../../structure/source/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../../../structure/source/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../../../structure/source/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../../../structure/source/domain-api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../../../structure/source/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../../../structure/source/domain/origin/origin-id';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../field/domain/core/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../domain-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../lib/composition/domain/column/sort/sort-order';\nimport { Field } from '../../field/domain/core/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../field/domain/core/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (let value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (let entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (let field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (let notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tlet map = new Map();\n\n\t\tfor (let field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../../../structure/paging/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../../../structure/source/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../../../structure/filter/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../../../structure/field/domain/core/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../../../structure/sorting/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../../../structure/search/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../../../structure/filter/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../domain-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { FieldsInitedEventHandler } from '../../../structure/field/domain-api/read/fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\n\tVerticalFormationFactory,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureDomainEventHandlers = [\n\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler),\n\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-search-bar></gui-search-bar>\n<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../../structure/filter/feature/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../../structure/search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../composition/domain-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\nimport { SortingCommandDispatcher } from '../../../../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { CompositionId } from '../../../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../../../domain/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/domain-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/domain-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { UniqueValuesReadModel } from '../../domain-api/unique/unique-values.read-model';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../domain-api/unique/unique-value.read-model';\nimport { FilterCommandDispatcher } from '../../domain-api/filter.command-dispatcher';\n\n@Component({\n\tselector: 'gui-unique-value-list',\n\ttemplate: `\n\n\t\t<gui-checkbox [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  (changed)=\"toggleAllSelect()\">\n\t\t\tSelect all\n\t\t</gui-checkbox>\n\t\t<div class=\"gui-unique-value-list\">\n\t\t\t<div *ngFor=\"let value of uniqueValues\">\n\t\t\t\t<gui-checkbox [checked]=\"value.isEnabled()\"\n\t\t\t\t\t\t\t  (changed)=\"toggleSelect(value)\">\n\t\t\t\t\t{{value.getValue()}}\n\t\t\t\t</gui-checkbox>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div class=\"gui-unique-value-list-actions\">\n<!--\t\t\t<button gui-button-->\n<!--\t\t\t\t\t[outline]=\"true\"-->\n<!--\t\t\t\t\t(click)=\"clearFilters()\">-->\n<!--\t\t\t\tCancel-->\n<!--\t\t\t</button>-->\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t(click)=\"clearFilters()\">\n\t\t\t\tClear\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: ['../style/unique-value-list.ngx.scss']\n})\nexport class UniqueValueListComponent extends SmartComponent {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandDispatcher.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandDispatcher.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { fabricImports } from '../../../../lib/structure/feature/structure-fabric.imports';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../../structure/filter/feature/unique/unique-value-list.module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../domain-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceWarehouse } from '../../../../../structure/source/domain-api/source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../../structure/source/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../../structure/source/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../../../structure/source/domain-api/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler implements DomainEventHandler<SchemaId, SchemaThemeSetEvent> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.themeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaHorizontalGridRepository } from './schema.horizontal-grid.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaHorizontalGridSetEvent> {\n\n\tconstructor(private horizontalGridRepository: SchemaHorizontalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n\thandle(event: SchemaHorizontalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGridRepository.next(event.getAggregateId(), event.getHorizontalGrid());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaRowColoringRepository } from './schema.row-coloring.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\n\n\n@Injectable()\nexport class SchemaRowColoringSetEventHandler implements DomainEventHandler<SchemaId, RowColoringSetEvent> {\n\n\tconstructor(private schemaRowColoringRepository: SchemaRowColoringRepository) {\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n\thandle(event: RowColoringSetEvent): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.schemaRowColoringRepository.next(event.getAggregateId(), event.getRowColoring());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaVerticalGridRepository } from './schema.vertical-grid.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaVerticalGridSetEvent> {\n\n\tconstructor(private schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n\thandle(event: SchemaVerticalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.schemaVerticalGridRepository.next(event.getAggregateId(), event.getVerticalGrid());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaHorizontalGridSetEventHandler } from './horizontal-grid/schema.horizontal-grid-set.event-handler';\nimport { SchemaRowColoringSetEventHandler } from './row-coloring/schema.row-coloring-set.event-handler';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaVerticalGridSetEventHandler } from './vertical-grid/schema.vertical-grid-set.event-handler';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t],\n\t\t\t[\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridSetEventHandler),\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository,\n\t\tSchemaHorizontalGridRepository,\n\t\tSchemaRowColoringRepository,\n\t\tSchemaVerticalGridRepository\n\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../../structure/source/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../../structure/source/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../../../structure/source/domain-api/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TitlePanelConfig } from './title-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FooterPanelConfig } from './footer-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-empty-source[items]',\n\ttemplateUrl: `empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [`\n\t\t.gui-empty-source div {\n\t\t\tdisplay: block;\n\t\t\tpadding: 42px 8px;\n\t\t}\n\t`],\n\thost: {\n\t\t'[class.gui-empty-source]': 'true'\n\t}\n})\nexport class EmptySourceComponent {\n\n\t@Input()\n\titems: Array<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule {\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../../schema/domain-api/schema.command-dispatcher';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandDispatcher) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges): void {\n\n\t\tif (simpleChanges.theme2 !== undefined && simpleChanges.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class ToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class ConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledRepository } from './quick-filter-enabled.repository';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './filter-enabled.repository';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: FilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FilterTypeRepository } from './filter-type.repository';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeRepository: FilterTypeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeRepository.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterRepository } from './active-filter.repository';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tlet activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (let key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesRepository } from './unique-values.repository';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tlet uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tlet uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldsInitedEvent } from '../../../../field/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../domain-api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../domain-api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../domain-api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../domain-api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../domain-api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandDispatcher } from './filter.command-dispatcher';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandDispatcher,\n\t\tFilterWarehouse,\n\t\tFilterTypeRepository,\n\t\tActiveFilterRepository,\n\t\tUniqueValuesRepository,\n\t\tFilterEnabledRepository,\n\t\tQuickFilterEnabledRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectorRef, Component, ChangeDetectionStrategy } from '@angular/core';\n\nimport { StructureId } from '../../../../domain/structure.id';\nimport { FormationCommandDispatcher } from '../../../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { FormationWarehouse } from '../../../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../../structure/source/domain-api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../../structure/source/domain-api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../../structure/source/domain-api/row-selection';\n\n@Component({\n\tselector: 'gui-select-all',\n\ttemplate: `\n\n\t\t<gui-checkbox *ngIf=\"modeMulti\"\n\t\t\t\t\t  [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  [gui-tooltip]=\"'Select'\"\n\t\t\t\t\t  (changed)=\"toggleSelectAll()\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SelectAllComponent extends SmartComponent {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandDispatcher,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onMode(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/domain-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { SourceWarehouse } from '../../../structure/source/domain-api/source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../structure/source/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../../schema/domain-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/panel/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/panel/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../structure/paging/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../structure/empty-source/feature/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../structure/sorting/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../structure/sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../structure/field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../structure/field/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../structure/search/feature/search.feature-module';\nimport { SearchApiModule } from '../../../structure/search/domain-api/search.api-module';\nimport { SearchDomainModule } from '../../../structure/search/domain/search.domain-module';\nimport { StructureThemeGateway } from '../feature/gateway/schema/structure-theme.gateway';\nimport { StructureSchemaManagerModule } from '../../../schema/feature/manager/structure.schema-manager.module';\nimport { FilterDomainModule } from '../../../structure/filter/domain/filter.domain-module';\nimport { FilterApiModule } from '../../../structure/filter/domain-api/filter.api-module';\nimport { SourceDomainModule } from '../../../structure/source/domain/source.domain-module';\nimport { SourceApiModule } from '../../../structure/source/domain-api/source.api-module';\nimport { SelectAllComponent } from '../feature/header/columns/select-all/select-all.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tSearchApiModule,\n\tFilterApiModule,\n\tSourceApiModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tStructureSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GuiGridComponent } from '../feature/grid/gui.grid.component';\n\nimport { StructureModule } from '../../../lib/structure/domain-api/structure.module';\n\nimport { GuiGridIdGenerator } from '../feature/grid/register/gui.grid-id.generator';\nimport { GuiGridRegister } from '../feature/grid/register/gui.grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiGridComponent\n];\n\nconst providers = [\n\tGuiGridIdGenerator,\n\tGuiGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiGridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}