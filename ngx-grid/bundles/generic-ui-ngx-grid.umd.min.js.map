{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/l10n/core/domain/lang/en.ts","ng://@generic-ui/ngx-grid/l10n/core/api/default-translation.ts","ng://@generic-ui/ngx-grid/gui/grid/core/api/gui.grid.public-api.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/gui.grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/gui.grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/gui.grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/gui.grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/coloring/gui.grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/gui.grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/gui.grid.paging.converter.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/row-selection.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/row-selection/gui.grid.row-selection.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-gateway.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.providers.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid.register.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/selected-row.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/api/gui.grid.api-provider.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/core/domain-read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.id.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.global-id.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/core/domain-read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.id.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/schema.global-id.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.command-invoker.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.domain-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.event-repository.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.manager.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/api/structre.api.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.domain-module.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.api-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-grid/common/cdk/pure-component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-grid/l10n/core/api/translation.api-module.ts","ng://@generic-ui/ngx-grid/l10n/core/api/translation.service.ts","ng://@generic-ui/ngx-grid/l10n/feature/translation.pipe.ts","ng://@generic-ui/ngx-grid/l10n/core/domain/dictionary.ts","ng://@generic-ui/ngx-grid/l10n/core/domain/translation.service-impl.ts","ng://@generic-ui/ngx-grid/l10n/feature/translation.feature-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.id.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.global-id.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.collection.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/group/composition.group.repository.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/set-groups.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/composition/core/api/column/column.id.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/schema-manager.module.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/filter/active-filter.service.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/icon/filter-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/filter-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/quick-filter-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filter.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-values.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/config/filter-container-token.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/enabled/searching.repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/filter-menu.feature-module.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/source-counter.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.id.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/read/source.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.converter.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/structure/grid/core/domain-read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-grid/structure/grid/core/domain-read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/local/local-providers.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gateway/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/event/source-event.service.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.warehouse.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.event-repository.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.api-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.manager.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.domain-module.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.api-module.ts","ng://@generic-ui/ngx-grid/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.read-model.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.ui-converter.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field-collection.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/base-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field-collection.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field.domain-module.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.api-module.ts","ng://@generic-ui/ngx-grid/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/origin-id.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/source.manager.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain-module.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.api-module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-grid/schema/core/api/styling/schema.row-class.archive.ts","ng://@generic-ui/ngx-grid/schema/core/api/styling/schema.row-style.archive.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/horizontal-grid/schema.horizontal-grid-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/row-coloring/schema.row-coloring-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/vertical-grid/schema.vertical-grid-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.api.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-module.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.api-module.ts","ng://@generic-ui/ngx-grid/schema/feature/schema.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/column/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-value.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure-tokens.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-range.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.manager.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.settings.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/structure.sorter.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorter.id.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/sorter.collection.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-translations.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/structure/empty-source/feature/empty-source.component.ts","ng://@generic-ui/ngx-grid/structure/empty-source/feature/empty-source.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gateway/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type-map.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.domain-module.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.api-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/column/select-all/select-all.component.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.providers.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.domain-module.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/summaries.api-module.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/summaries.feature-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.api-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/feature/vertical-formation.feature-module.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.api.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/empty-group.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/composition.group.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.events.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/composition.groups-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/template/template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/set-groups.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-module.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.api-module.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/text/text-view.component.ts","ng://@generic-ui/ngx-grid/composition/feature/composition.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/group/structure-header-groups.component.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/core/api/gui.grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","enTranslation","sourceEmpty","pagingItemsPerPage","pagingOf","pagingNextPage","pagingPrevPage","pagingNoItems","infoPanelShowing","infoPanelItems","infoPanelOutOf","infoPanelThemeMangerTooltipText","infoPanelColumnManagerTooltipText","infoPanelInfoTooltipText","themeManagerModalTitle","themeManagerModalTheme","themeManagerModalRowColoring","themeManagerModalVerticalGrid","themeManagerModalHorizontalGrid","columnManagerModalTitle","headerMenuMainTab","headerMenuMainTabColumnSort","headerMenuMainTabHideColumn","headerMenuMainTabMoveLeft","headerMenuMainTabMoveRight","headerMenuMainTabColumnSortAscending","headerMenuMainTabColumnSortDescending","headerMenuMainTabColumnSortNone","headerMenuFilterTab","headerMenuColumnsTab","summariesCount","summariesDist","summariesSum","summariesAvg","summariesMin","summariesMax","summariesMed","summariesTruthy","summariesFalsy","summariesDistinctValuesTooltip","summariesAverageTooltip","summariesMinTooltip","summariesMaxTooltip","summariesMedTooltip","summariesCountTooltip","defaultTranslation","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","ROW","SINGLE","MULTIPLE","GuiDefaultTranslation","GuiGridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GuiGridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","GuiGridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GuiGridColumnSortingConverter","sortingConfig","GuiGridColumnCellEditingConverter","config","GuiGridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GuiGridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","configs","map","columns","convertColumn","header","guiColumn","columnConfig","field","width","summaries","sorting","cellEditing","formatter","matcher","GuiGridThemeConverter","theme","convertToGuiTheme","SchemaTheme","GuiTheme","GuiGridRowColoringConverter","rowColoring","convertToGuiRowColoring","RowColoring","GuiRowColoring","GuiGridColumnMenuConverter","Injectable","GuiGridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GenericBuilder","build","buildObject","RowSelection","mode","isModeDefined","isTypeDefined","isEnabledDefined","isEnabled","getMode","getType","Builder","_super","RowSelectionBuilder","tslib_1.__extends","withEnabled","withType","withMode","GuiGridRowSelectionConverter","selection","builder","convertMode","RowSelectionMode","GuiRowSelectionMode","RowSelectionType","GuiRowSelectionType","GuiGridGateway","source","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","selectedRows","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","gridRowSelectionConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","rowSelection","rowSelectionConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onRowsSelect","rows","guiRows","row","index","getIndex","data","getData","itemId","getItemId","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","Input","Output","StructurePagingDefinitionBuilder","PagingDefinition","StructurePagingDefinitionDefaultBuilder","defaultEnabled","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","guiGridStructureDefinition","guiGridProviders","provide","useValue","structureParentComponent","InjectionToken","GuiGridIdGenerator","generateId","PREFIX","GuiGridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","SelectedRow","GuiGridApiProvider","schemaId","formationCommandDispatcher","formationWarehouse","sourceCommandInvoker","searchCommandInvoker","gridThemeCommandInvoker","structureCommandDispatcher","formationCommandInvoker","fcd","fw","scd","setSource","setOrigin","showLoading","setLoading","hideLoading","deleteRow","deleteRows","deleteSelectedRows","getSelectedRows","selectAll","unselectAll","search","phrase","clearSearchPhrase","scrollToTop","scrollToBottom","scrollToRowByIndex","scrollToIndex","setTheme","setVerticalGrid","setHorizontalGrid","setRowColoring","StructureCommand","Command","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","commandDispatcher","toggleSelectedRow","dispatch","CommandDispatcher","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","structureGlobalId","SetEnabledSelectionCommand","SetSelectionModeCommand","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","params","getParams","SourceDispatcher","editItem","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","StructureSourceOriginRepository","origin","origin$","ReplaySubject","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","getPreparedItems","onPreparedItems","SourceWarehouse","structureRepository","structurePreparedItemsRepository","structureSourceOriginRepository","getEntities","getStructure","onEntities","onStructure","structure","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","take","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","getPreparedEntities","StructureEditSourceItemParams","columnFieldId","getColumnFieldId","getValue","FieldReadModelRepository","AggregateArchive","FieldWarehouse","fieldReadModelRepository","onFields","on","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","payload","byIndex","DeleteCommandPayloadType","byManyIndex","indexes","byItemId","byManyItemId","itemIds","getPayload","SourceCommandInvoker","sourceDispatcher","fieldWarehouse","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","fields","deleteItemById","deleteItemByIndex","deleteManyItemsByItemIds","deleteManyItemsByIndex","RowSelectedRepository","RowSelectionModeRepository","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","selectedItemIds","getSelectedItemIds","selectedItems","some","onRowSelectedReadModel","getAll","onSelectedRows","rm","onMode","SetConfigSearchingCommand","searchConfig","getConfig","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","SearchCommandInvoker","searchDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","GuiGridThemeCommandInvoker","schemaCommandInvoker","schemaTheme","schemaRowColoring","verticalGrid","horizontalGrid","SchemaCommand","SetSchemaThemeCommand","getTheme","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","SetConfigFilterCommand","filterConfig","RemoveAllFiltersCommand","AddFilterCommand","fieldId","filterTypeId","getFieldId","getFilterTypeId","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","add","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","SetScrollBarPositionCommand","StructureCommandDispatcher","structureFilterCommandService","createStructure","enableVerticalScroll","disableVerticalScroll","Number","MAX_SAFE_INTEGER","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","SchemaCommandInvoker","schemaDispatcher","structureCommandService","toSchemaRowColoring","SchemaRowColoring","GuiGridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","sourceCommandDispatcher","ngOnInit","initApi","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","api","getElementRef","getGridId","detectChanges","nativeElement","setAttribute","schemaReadModelRootId","Component","args","selector","template","providers","useExisting","host","[class.gui-grid]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","SmartComponent","detector","viewRendered","ngAfterViewInit","reRender","isViewRendered","PagingRepository","filter","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","SetPagingCommand","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","setPaging","changePageSize","nextPage","prevPage","PagingCommandInvoker","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","PagingDisplayModeArchive","Archive","TOP","BOTTOM","PagingComponent","renderer2","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","structurePagingDisplayModeArchive","alternativeDisplay","PagingPosition","removeClass","addClass","size","sourceSize","isPagingVisible","isPagerTop","isPagerBottom","[class.gui-paging]","changeDetection","ChangeDetectionStrategy","OnPush","Renderer2","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","ReadModelObject","Boolean","PagingSelectComponent","[class.gui-paging-select]","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","Math","ceil","[class.gui-alternative-paging-navigator]","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","[class.gui-alternative-paging-pages]","StructureDomainEvent","DomainEvent","NextPageEvent","aggregateId","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventRepository","eventBus","pagingReadModelService","getAggregateId","switchMap","onEvent","DomainEventBus","EventRepository","StructureAggregateEvent","AggregateEvent","PageChangedAggregateEvent","toDomainEvent","PagesizeChangedAggregateEvent","PagingManager","logger","events","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","aggregate","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","structureKey","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingConverter","PagingApiModule","ApiModule","PagingNavigatorComponent","[class.gui-paging-navigator]","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","Error","name","PagingStatsComponent","firstItemIndex","lastItemIndex","[class.gui-paging-stats]","TranslationApiModule","TranslationPipe","translationService","actualTranslationValue","subscription","transform","onTranslation","translation","markForCheck","Pipe","pure","TranslationService","Dictionary","resolver","changeTranslation","_b","keys","_c","getTranslation","from","reduce","obj","_a","setResolver","TranslationServiceImpl","dictionary","dictionary$","setDefaultTranslation","changeTranslationAndPropagate","setResolverAndPropagate","TranslationFeatureModule","apiModule","forComponent","useClass","entryComponents","Optional","FeatureModule","PagingFeatureModule","FabricModule","NumberFormatterPipe","number","replace","NumberFormatterModule","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","Theme","SchemaThemeRepository","SchemaCssClassesRepository","theme$","setCssClass","SchemaHorizontalGridRepository","SchemaRowColoringRepository","SchemaVerticalGridRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onSingleTheme","onCssClasses","StructureDialogColumnManagerService","injector","schemaReadModelRepository","structureThemeConverter","fabricDialogService","open","compositionId","readModelId","parentInjector","Injector","parent","FabricDialogService","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","renderer","dialog","menuColumnManagerService","schemaManagerService","structureInfoPanelEnabledArchive","infoModal","infoPanel","infoPanelConfig","totalItemsSize","preparedItems","preparedItemsSize","themeManagerTooltipText","columnManagerTooltipText","infoTooltipText","openInfo","openColumnManager","openSchemaManager","CompositionReadModelRootRepository","ReadModelRootRepository","compositionGlobalId","GroupCollection","groups","showGroups","getGroups","isVisible","CompositionGroupRepository","CompositionWarehouse","compositionRepository","compositionGroupRepository","onWidth","composition","getWidth","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","onGroups","CompositionCommand","CreateCompositionCommand","SetColumnsCommand","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","SetGroupsCommand","getConfigs","CompositionDispatcher","createComposition","setColumns","setGroups","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","EntityId","CompositionCommandInvoker","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureColumnManagerComponent","compositionCommandService","compositionReadModelService","enabledColumnsCount","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class]","[class.gui-icon]","StructureColumnManagerModule","StructureInfoIconComponent","StructureInfoPanelConfigConverter","StructureSchemaMangerComponent","schemaCommandService","schemaReadModelService","dialogThemeService","val","isInteger","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","nextTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","toLowerCase","FabricDialogThemeService","StructureSchemaManagerIconComponent","[class.gui-structure-schema-manager-icon]","SchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","ActiveFilterMenuTriggerDirective","el","activeFilterService","Directive","FilterIconComponent","[class.gui-filter-icon]","FilterEnabledRepository","enabled$","setEnabled","onFilterEnabled","QuickFilterEnabledRepository","onQuickFilterEnabled","FilterTypeRepository","ActiveFilterRepository","UniqueValuesRepository","FilterWarehouse","structureFilterRepository","structureQuickFilterRepository","filterTypeRepository","uniqueValuesRepository","activeFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","FilterMenuComponent","filterWarehouse","filterCommandDispatcher","compositionWarehouse","activeFilters","filterTypeMap","fieldReadModels","onColumnSelect","selectedColumn","filterTypes","getFilterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","[class.gui-filter-menu]","filterContainerToken","FilterMenuTriggerComponent","drawerService","filterContainerRef","openDrawer","[class.gui-filter-menu-trigger]","FabricDrawerService","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","formBuilder","valueChanged","controlsConfig","FORM_FILTER_VALUE","filterForm","group","controls","valueChanges","[class.gui-filter-value]","FormBuilder","ActiveFilterListComponent","FieldSelectorComponent","fieldSelected","SearchingRepository","onSearchingEnabled","SearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","SearchWarehouse","structureSearchingRepository","searchPhraseRepository","onSearchEnabled","ActiveSearchComponent","searchCommandDispatcher","searchWarehouse","clearSearch","FilterMenuFeatureModule","ReactiveFormsModule","SourceCounterFeatureModule","StructureInfoPanelModule","StructureIdGenerator","increment","Override","container","getPrototypeOf","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","LocalPagingWarehouse","Observable","ADD","RANGE","LocalFormationCommandDispatcher","setDefault","LocalFormationWarehouse","rowSelectedArchive","LocalStructureCommandDispatcher","StructureWarehouse","LocalStructureWarehouse","LocalSourceCommandDispatcher","LocalSourceWarehouse","ColumnDefinitionId","ReadModelEntityId","LocalCompositionCommandDispatcher","columnDefId","FieldId","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","version","RandomStringGenerator","generate","getUiId","getVersion","isSelected","isEven","isOdd","entity","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","SchemaDomainEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","VerticalFormationScrollBarPositionRepository","StructureVerticalFormationWarehouse","verticalFormationRepository","positionRepository","onScrollBarPosition","LocalStructureVerticalFormationWarehouse","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","removeThemeCssClasses","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","toggle","cssClassName","className","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","ENTER","SUBMIT","CANCEL","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldsInitedEvent","getFields","ColumnFieldId","ColumnParams","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","compositionCommandInvoker","handle","simpleChanges","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","columnConfigs","groupConfigs","columnField","getAccessorMethod","getDataType","getSearchAccessorMethod","StructureGateway","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","fieldCommandDispatcher","sourceCommandService","sourceEventService","schemaCommandDispatcher","compositionCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","schemaRowClassArchive","schemaRowStyleArchive","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","changeAfterInit","structureColumnInputHandler","rowDetail","titlePanel","footerPanel","nextConfig","editMode","autoResizeWidth","columnHeaderTop","columnHeaderBottom","rowClass","rowStyle","maxHeight","virtualScroll","setSortingConfig","filtering","quickFilters","searching","localization","translationResolver","onItemSelected","onColumnsChanged","onContainerWidthChanged","onSourceEdited","values","state","StructureCellEditState","connectSchemaEvents","componentInitialized","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","isInitialized","isNotInitialized","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionDomainEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionEventRepository","SelectedRowChangedEvent","allSelected","allUnselected","isAllSelected","isAllUnselected","FormationEventRepository","s$","itemsMap","j","StructureColumnMenuConfig","sort","mainMenu","filterMenu","columnsMenu","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","setMainMenu","setFilterMenu","setColumnsMenu","StructureColumnMenuConfigArchive","menuConfig","RowSelectEnabledRepository","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValue","DomSanitizer","StructureRowDetailService","ref","turnOn","turnOff","close","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","SetSortingCommand","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","SearchManagerFactory","SearchPhraseSetEventHandler","structureSearchPhraseRepository","forEvent","ofMessageType","ConfigSearchingSetEventHandler","SearchDomainModule","domainEventHandlers","registerDomainEventHandler","SearchApiModule","SearchIconComponent","SearchComponent","structureWarehouse","verticalFormationWarehouse","searchingEnabled","FORM_SEARCH_NAME","searchForm","observeChanges","stopObserveChanges","setValue","clear","reset","searchInputSubscription","debounceTime","[class.gui-search-bar]","SearchFeatureModule","searchApiModule","FieldReadModel","dataType","getName","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","addFields","fields_1","fields_1_1","addField","Field","of","dataField","getKey","getAccessor","getDisplayValue","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","getSearchMatcher","getSortMatcher","getSearchValue","DataField","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","assignDefaultSummaries","UnknownDataField","one","two","NumberDataField","numOne","numTwo","StringDataField","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldIdGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","publishFromAggregate","createFields","FieldsInitedEventHandler","fieldUiConverter","FieldDomainModule","FieldCommandInvoker","FieldApiModule","FieldFeatureModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","SetSourceLoadingEvent","SourceSetLoadingCommandHandler","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","OriginItemEntity","bumpVersion","setPosition","clone","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","isArray","deleteOneOriginItem","deleteOriginItemByIndex","findOriginItemIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","f","calculateAllUnselected","deleteManyOriginItemByIndex","deleteManyOriginItemByItemID","addOriginItem","toggleRow","getFormation","findIndex","FormationManager","setMode","allItemIds","RowSelectToggleType","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","StructureOriginChangedEventHandler","origin_1","StructurePreparedItemsEventHandler","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","isIndeterminate","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","DeleteOriginItemCommandHandler","deleteItem","SourceDomainModule","SourceApiModule","SourceFeatureModule","sourceApiModule","SchemaRowClassArchive","SchemaRowStyleArchive","SchemaAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","createEvent","changeTheme","addEvent","AggregateRoot","SchemaAggregateFactory","AggregateFactory","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","save","schemaAggregate","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaThemeSetEventHandler","themeRepository","SchemaHorizontalGridSetEventHandler","horizontalGridRepository","SchemaRowColoringSetEventHandler","SchemaVerticalGridSetEventHandler","SchemaCssClass","SchemaCssClassesEventHandler","schemaKey","SchemaDomainModule","registerMultiDomainEventHandler","SchemaApiModule","defineAggregate","SchemaFeatureModule","schemaApiModule","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","compositionEventRepository","pagingDisplayModeArchive","cd","structureDefinition","structureReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","setStyle","[class.gui-structure]","[class.gui-structure-border]","[id]","CellTemplateWithContext","viewTemplate","editTemplate","context","sortStatus","sortable","isSortEnabled","isAscSort","SortOrder","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","StructureColumnConfigComponent","uniqueValues","uniqueValuesReadModel","setTabTitles","dropdownTextTranslation","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","closed","filterFieldName","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","collection","headerHeight","filtersRef","read","ChangedValueEmitter","subject$","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","rowDetailOpened","combineLatest","schemaRowClass","log","schemaRowStyle","trackByFn","translateY","clearSelectedRows","selectedElements","querySelectorAll","StructureRowComponent","elRef","detailsEnabled","selectedItem","checkSelectedItem","updateRowClass","updateRowStyle","prevValue","selectRow","style","renderRowStyles","styleFunction","styles","separatedStyles","trim","clazz","class","classFunction","HTML","CellValue","text","CellValueType","CellTemplateWithAccessor","editable","templateFun","formatterFun","cellEditingEnabled","isCellEditingEnabled","isBooleanDataType","cellValue","findValue","getCellView","txt","lowerCasedText","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","BLUR","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","status","focus","observeFieldStatus","observeValueChanges","publishEditEnter","submitChangesAndExit","updatedValue","actualValue","EditEventType","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","structureReadModelWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","arr","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","scrollPosition","scrollTop","destroy","runOutsideAngular","fromEvent","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureFilterReadModelRepository","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterToggledEvent","FilterAddedEvent","ActiveFiltersSetEvent","filters","getFilters","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","DomainObject","ScrollBarPositionSetEvent","ScrollBarPositionSetAggregateEvent","VerticalFormation","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","aggregatedValues","remove","update","SummariesManagerFactory","Filter","filterValue","getFilterValue","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","ContainsFilterType","includes","FilterTypeId","FilterTypeIdGenerator","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","getFilterType","getFieldIdsToFilterTypes","readModels","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","getSettings","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureCreatedAggregateEvent","FilterTypesInitedEvent","getMap","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","setVerticalFormationEnabled","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setConfig","toggleFilter","externalFilterId","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","select","unselect","searchedEntities","filterAll","ents","ae","calculateAll","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multi","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","displayValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","allDisabled","getNotSelected","uv","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","a","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","StructureSummariesRepository","onSummariesEnabled","StructureCreatedEventHandler","structureSummariesRepository","commandProviders","readProviders","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","selectAllChecked","isSelectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","StructureSummariesUiEventsRepository","onSummariesChanged","SummariesTranslations","distinctTooltip","averageTooltip","minTooltip","maxTooltip","medTooltip","countTooltip","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","summariesTranslations","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","getAggregateRepository","StructureCellEditComponent","initEditContext","cellContainerRef","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","EmptySourceComponent","[class.gui-empty-source]","EmptySourceFeatureModule","StructureThemeGateway","theme2","ToggleFilterCommand","getExternalFilterId","ToggleFilterCommandHandler","externalFieldId","AddFilterCommandHandler","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","SetConfigFilterCommandHandler","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","ConfigQuickFilterSetEventHandler","ConfigFilterSetEventHandler","FilterTypeMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEventHandler","activeFiltersSetEvent","UniqueValuesReadModel","calculateSelection","areAllSelected","areAllDisabled","UniqueValueReadModel","geDisplayValue","UniqueFilterCalculatedEventHandler","calculatedEvent","uvRM_1","valuesRM","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","FilterApiModule","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","[class.gui-select-all]","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","StructureSummariesEnabledSetEventHandler","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","sum","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","provideSummariesCalculator","summariesProviders","SummariesDomainModule","StructureSummariesWarehouse","SummariesApiModule","SummariesFeatureModule","summariesApiModule","SetScrollPositionCommandHandler","SetVerticalScrollEnabledCommandHandler","SetRowHeightBasedOnThemeCommandHandler","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","ScrollBarPositionSetEventHandler","SetScrollBarPositionCommandHandler","VerticalFormationDomainModule","VerticalFormationApiModule","VerticalFormationFeatureModule","verticalFormationApiModule","compositionKey","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetEvent","CompositionAggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledEvent","CompositionColumnSetEnabledAggregateEvent","activeColumns","getActiveColumns","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","getMinColumnWidth","calculator","CompositionChangeSortStatusEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","getColumns","addColumn","removeColumn","updatedWidths","setSortStatus","param","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ViewEntity","cellView","templateFunction","fromDataType","getTemplateFunction","AbstractColumnEntity","presentation","setInitialAlign","getPresentation","getColumnConfig","getHeader","getFormatterFunction","setView","setHeader","getView","getAlign","getSortingEnabled","ColumnEntity","getDefaultView","getDefaultAlign","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftEvent","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedEvent","CompositionCreatedAggregateEvent","Group","GroupId","HermesId","emptyGroup","CompositionAggregate","columnFactory","groupFactory","columnsParams","resizeWidth","allColumns","resizeWidthEnabled","activeColumnEntityConverter","columnNameToGroupId","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","isResizeEnabled","isReady","group_1","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","NumberColumnPresentation","getInstance","instance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumns","createColumn","convertWidth","columnEntity","columnEntities","CompositionGroupFactory","CompositionAggregateFactory","CompositionAggregateRepository","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","CreateCompositionCommandHandler","compositionAggregateRepository","CompositionAggregateEvents","CompositionGroupsSetEvent","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","SetColumnsCommandHandler","compositionEventConverter","publishEvents","setColumnsParams","domainEvents","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","CompositionSetColumnEnabledCommandHandler","CompositionChangeSortStatusCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","ChangeSortParams","CompositionChangeSortStatusEventHandler","dir","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","TemplateRef","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellContext","ColumnDefinition","setField","setTemplateFunction","setFormatterFunction","formatterFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","CompositionReadModeRoot","ready","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","columnDefs","InMemoryCompositionReadStore","compositionConverter","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","SetGroupsCommandHandler","CompositionDomainModule","CompositionApiModule","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","cancel","InputEditTemplateComponent","inputElement","inputRef","focusField","emitValueChange","keyup$","keyCode","StringEditTemplateComponent","fb","setSelectionRange","[class.gui-string-edit]","NumberEditTemplateComponent","BooleanEditTemplateComponent","changed","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","ColumnQueryComponent","ContentChild","FunctionViewComponent","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","[class.gui-text-view]","Attribute","components","exportDeclarations","CompositionFeatureModule","compositionApiModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureHeaderGroupsComponent","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GuiGridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateFunction = (cellValue: any, item?: any) => string;\n\nexport interface GuiMultiColumn {\n\n\theader?: string;\n\n\tcolumns?: Array<GuiColumn>;\n\n}\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateFunction;\n\n\theader?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tformatter?: (item: any, index: number) => any;\n\n\tmatcher?: (item: any) => any;\n\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiRowStyle {\n\n\tstyle?: string;\n\n\tstyleFunction?: (data: any, index: number) => string;\n\n}\n\nexport interface GuiRowClass {\n\n\tclass?: string;\n\n\tclassFunction?: (data: any, index: number) => string;\n\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any, index: number) => string;\n\n}\n\nexport interface GuiTitlePanel {\n\n\tenabled?: boolean;\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiFooterPanel {\n\n\tenabled?: boolean\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiInfoPanel {\n\n\tenabled?: boolean;\n\n\tinfoDialog?: boolean;\n\n\tcolumnsManager?: boolean;\n\n\tschemaManager?: boolean;\n\n\tsourceSize?: boolean\n\n}\n\nexport enum GuiRowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum GuiRowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport interface GuiRowSelection {\n\n\tenabled?: boolean;\n\n\ttype?: string | GuiRowSelectionType;\n\n\tmode?: string | GuiRowSelectionMode;\n\n}\n\nexport interface GuiSelectedRow {\n\n\tdata?: any;\n\n\tindex: number;\n\n\titemId: any;\n\n}\n\nexport interface GuiLocalization {\n\n\ttranslation?: GuiTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport type GuiTranslation = TranslationChange;\n\nexport const GuiDefaultTranslation = defaultTranslation;\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../core/api/gui.grid.public-api';\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nexport class GuiGridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../structure/summaries/core/domain/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../gui.grid.index';\n\n\nexport class GuiGridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tlet columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateFunction } from '../../../core/api/gui.grid.public-api';\nimport { CellView } from '../../../../../composition/core/domain/column/cell-view';\n\nexport class GuiGridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateFunction): CellView | ViewTemplateFunction {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../composition/core/api/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../gui.grid.index';\n\nexport class GuiGridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../gui.grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../composition/core/api/column/column-cell-editing.config';\n\nexport class GuiGridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../core/api/gui.grid.public-api';\nimport { ColumnAlign } from '../../../../../../composition/core/domain/column/column-align';\n\nexport class GuiGridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn, GuiMultiColumn } from '../../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnTypeConverter } from './gui.grid.column-type.converter';\nimport { GuiGridColumnSummariesConverter } from './summaries/gui.grid.column-summaries.converter';\nimport { GuiGridColumnViewConverter } from './gui.grid.column-view.converter';\nimport { GuiGridColumnSortingConverter } from './sorting/gui.grid.column-sorting.converter';\nimport { GuiGridColumnCellEditingConverter } from './cell-editing/gui.grid.column-cell-editing.converter';\nimport { GuiGridColumnAlignConverter } from './align/gui.grid.column-align.converter';\n\n\nexport class GuiGridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GuiGridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GuiGridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GuiGridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GuiGridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GuiGridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GuiGridColumnAlignConverter();\n\n\tconvert(configs: Array<GuiColumn | GuiMultiColumn>): Array<ColumnConfig | MultiColumnConfig> {\n\n\t\treturn configs.map((config) => {\n\n\t\t\tif ((config as GuiMultiColumn).columns !== undefined) {\n\n\t\t\t\tconst columns = ((config as GuiMultiColumn).columns).map((c) => this.convertColumn(c));\n\n\t\t\t\treturn {\n\t\t\t\t\theader: config.header,\n\t\t\t\t\tcolumns: columns\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\treturn this.convertColumn(config);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.formatter !== undefined && guiColumn.formatter !== null) {\n\t\t\tcolumnConfig.formatter = guiColumn.formatter;\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\n\n\nexport class GuiGridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../../core/api/gui.grid.public-api';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring';\n\n\nexport class GuiGridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../core/api/gui.grid.public-api';\n\nimport { ColumnMenuConfig } from '../../../../../../structure/grid/core/api/column-menu-config';\n\n@Injectable()\nexport class GuiGridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../structure/paging/feature/mode/paging-display-mode';\nimport { GuiPaging, GuiPagingDisplay } from '../../../core/api/gui.grid.public-api';\nimport { PagingConfig } from '../../../../../structure/paging/core/api/paging-config';\n\n\nexport class GuiGridPagingConverter {\n\n\tconvert(guiPaging: GuiPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { GuiRowSelection, GuiRowSelectionMode, GuiRowSelectionType } from '../../../core/api/gui.grid.public-api';\nimport { RowSelection, RowSelectionMode, RowSelectionType } from '../../../../../structure/source/core/api/row-selection';\n\nexport class GuiGridRowSelectionConverter {\n\n\tconvert(selection: boolean | GuiRowSelection): RowSelection {\n\n\t\tlet builder = new RowSelection.Builder();\n\n\t\tif (typeof selection === 'boolean') {\n\t\t\treturn builder.withEnabled(selection).build();\n\t\t} else {\n\n\t\t\tif (selection.enabled !== undefined) {\n\t\t\t\tbuilder.withEnabled(selection.enabled);\n\t\t\t}\n\n\t\t\tif (selection.mode !== undefined) {\n\t\t\t\tconst mode = this.convertMode(selection.mode);\n\n\t\t\t\tbuilder.withMode(mode);\n\t\t\t}\n\n\t\t\tif (selection.type !== undefined) {\n\t\t\t\tconst type = this.convertType(selection.type);\n\n\t\t\t\tbuilder.withType(type);\n\t\t\t}\n\n\t\t\treturn builder.build();\n\t\t}\n\n\t}\n\n\tprivate convertMode(mode: string | GuiRowSelectionMode): RowSelectionMode {\n\n\t\tif (typeof mode === 'string') {\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'single':\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t\tcase 'multiple':\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (mode) {\n\n\t\t\t\tcase GuiRowSelectionMode.SINGLE:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\n\t\t\t\tcase GuiRowSelectionMode.MULTIPLE:\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate convertType(type: string | GuiRowSelectionType): RowSelectionType {\n\n\t\tif (typeof type === 'string') {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'row':\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase GuiRowSelectionType.ROW:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\n\t\t\t\tcase GuiRowSelectionType.CHECKBOX:\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiFooterPanel,\n\tGuiInfoPanel,\n\tGuiLocalization,\n\tGuiMultiColumn,\n\tGuiPaging,\n\tGuiQuickFilters,\n\tGuiRowClass,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiRowSelection,\n\tGuiRowStyle,\n\tGuiSearching,\n\tGuiSelectedRow,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme,\n\tGuiTitlePanel\n} from '../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnConverter } from './column/gui.grid.column.converter';\nimport { GuiGridThemeConverter } from './theme/gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './theme/coloring/gui.grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../structure/grid/core/api/column-menu-config';\nimport { GuiGridColumnMenuConverter } from './column/menu/gui.grid.column-menu.converter';\nimport { GuiGridPagingConverter } from './paging/gui.grid.paging.converter';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { RowColoring } from '../../../../schema/core/api/row-coloring';\nimport { GuiGridRowSelectionConverter } from './row-selection/gui.grid.row-selection.converter';\nimport { RowSelection } from '../../../../structure/source/core/api/row-selection';\nimport { SelectedRow } from '../../../../structure/source/core/api/formation/selected-row';\n\nexport abstract class GuiGridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn | GuiMultiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPaging;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelection: boolean | GuiRowSelection;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | GuiInfoPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<GuiSelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig | MultiColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\trowSelectionConfig: RowSelection;\n\n\tprotected readonly gridColumnConverter: GuiGridColumnConverter = new GuiGridColumnConverter();\n\n\tprotected readonly gridThemeConverter: GuiGridThemeConverter = new GuiGridThemeConverter();\n\n\tprotected readonly gridRowColoringConverter: GuiGridRowColoringConverter = new GuiGridRowColoringConverter();\n\n\tprotected readonly gridColumnMenuConverter: GuiGridColumnMenuConverter = new GuiGridColumnMenuConverter();\n\n\tprotected readonly gridPagingConverter: GuiGridPagingConverter = new GuiGridPagingConverter();\n\n\tprotected readonly gridRowSelectionConverter: GuiGridRowSelectionConverter = new GuiGridRowSelectionConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\tif (changes.rowSelection !== undefined && changes.rowSelection.currentValue !== undefined) {\n\t\t\tthis.rowSelectionConfig = this.gridRowSelectionConverter.convert(this.rowSelection);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonRowsSelect(rows: Array<SelectedRow>): void {\n\n\t\tconst guiRows: Array<GuiSelectedRow> = rows.map((row) => {\n\t\t\treturn {\n\t\t\t\tindex: row.getIndex(),\n\t\t\t\tdata: row.getData(),\n\t\t\t\titemId: row.getItemId()\n\t\t\t};\n\t\t});\n\n\t\tthis.selectedRows.emit(guiRows);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\n/** @internal */\nexport const guiGridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\nimport { guiGridStructureDefinition } from './gui.grid-structure-definition';\n\nexport const guiGridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: guiGridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GuiGridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGuiGridIdGenerator.index++;\n\n\t\treturn GuiGridIdGenerator.PREFIX + GuiGridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiGridComponent } from '../gui.grid.component';\n\n@Injectable()\nexport class GuiGridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GuiGridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly data: any;\n\n\tconstructor(data: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.data = data;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { GuiRowColoring, GuiSelectedRow, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { FormationCommandInvoker } from '../../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { SourceCommandInvoker } from '../../../../../structure/source/core/api/source.command-invoker';\nimport { SelectedRow } from '../../../../../structure/source/core/api/formation/selected-row';\nimport { FormationWarehouse } from '../../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../../structure/search/core/api/search.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { GuiGridThemeCommandInvoker } from '../theme/gui.grid.theme.command-invoker';\nimport { StructureCommandDispatcher } from '../../../../../structure/core/api/structure.command-dispatcher';\n\n\nexport interface GuiGridApi {\n\n\tsetSource(source: Array<any>): void\n\n\tshowLoading(): void;\n\n\thideLoading(): void;\n\n\tgetSelectedRows(): Array<GuiSelectedRow>;\n\n\tselectAll(): void;\n\n\tunselectAll(): void;\n\n\tdeleteSelectedRows(): void;\n\n\tdeleteRow(row: GuiSelectedRow): void;\n\n\tdeleteRows(rows: Array<GuiSelectedRow>): void;\n\n\t// Searching\n\tsearch(phrase: string): void;\n\n\tclearSearchPhrase(): void;\n\n\t// View port\n\tscrollToTop(): void;\n\n\tscrollToBottom(): void;\n\n\tscrollToRowByIndex(index: number): void;\n\n\t// Visual\n\tsetTheme(theme: string | GuiTheme): void;\n\n\tsetVerticalGrid(enabled: boolean): void;\n\n\tsetHorizontalGrid(enabled: boolean): void;\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring): void;\n\n}\n\n\nexport class GuiGridApiProvider {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate readonly schemaId: SchemaReadModelRootId;\n\n\tprivate readonly formationCommandInvoker: FormationCommandInvoker;\n\n\tprivate readonly formationWarehouse: FormationWarehouse;\n\n\tprivate readonly sourceCommandInvoker: SourceCommandInvoker;\n\n\tprivate readonly searchCommandInvoker: SearchCommandInvoker;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly structureCommandDispatcher: StructureCommandDispatcher;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tschemaId: SchemaReadModelRootId,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tformationWarehouse: FormationWarehouse,\n\t\t\t\tsourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tgridThemeCommandInvoker: GuiGridThemeCommandInvoker,\n\t\t\t\tstructureCommandDispatcher: StructureCommandDispatcher) {\n\t\tthis.structureId = structureId;\n\t\tthis.schemaId = schemaId;\n\t\tthis.formationCommandInvoker = formationCommandDispatcher;\n\t\tthis.formationWarehouse = formationWarehouse;\n\t\tthis.sourceCommandInvoker = sourceCommandInvoker;\n\t\tthis.searchCommandInvoker = searchCommandInvoker;\n\t\tthis.gridThemeCommandInvoker = gridThemeCommandInvoker;\n\t\tthis.structureCommandDispatcher = structureCommandDispatcher;\n\t}\n\n\tprovide(): GuiGridApi {\n\n\t\tconst structureId = this.structureId,\n\t\t\tschemaId = this.schemaId,\n\t\t\tfcd = this.formationCommandInvoker,\n\t\t\tfw = this.formationWarehouse,\n\t\t\tscd = this.sourceCommandInvoker,\n\t\t\tsearchCommandInvoker = this.searchCommandInvoker,\n\t\t\tgridThemeCommandInvoker = this.gridThemeCommandInvoker,\n\t\t\tstructureCommandDispatcher = this.structureCommandDispatcher;\n\n\t\treturn {\n\n\t\t\tsetSource(source: Array<any>): void {\n\t\t\t\tscd.setOrigin(source, structureId);\n\t\t\t},\n\n\t\t\tshowLoading(): void {\n\t\t\t\tscd.setLoading(true, structureId);\n\t\t\t},\n\n\t\t\thideLoading(): void {\n\t\t\t\tscd.setLoading(false, structureId);\n\t\t\t},\n\n\t\t\tdeleteRow(row: GuiSelectedRow): void {\n\t\t\t\tscd.deleteRow(new SelectedRow(row.data, row.index, row.itemId), structureId);\n\t\t\t},\n\n\t\t\tdeleteRows(rows: Array<GuiSelectedRow>): void {\n\t\t\t\tconst selectedRows = rows.map((row: GuiSelectedRow) => new SelectedRow(row.data, row.index, row.itemId));\n\n\t\t\t\tscd.deleteRows(selectedRows, structureId);\n\t\t\t},\n\n\t\t\tdeleteSelectedRows(): void {\n\t\t\t\t// this.sourceCommandDispatcher.\n\t\t\t},\n\n\t\t\tgetSelectedRows(): Array<GuiSelectedRow> {\n\n\t\t\t\tconst rows = fw.getSelectedRows(structureId);\n\n\t\t\t\treturn rows.map((r: SelectedRow) => {\n\t\t\t\t\treturn { data: r.getData(), index: r.getIndex(), itemId: r.getItemId() };\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tselectAll(): void {\n\t\t\t\tfcd.selectAll(structureId);\n\t\t\t},\n\n\t\t\tunselectAll(): void {\n\t\t\t\tfcd.unselectAll(structureId);\n\t\t\t},\n\n\t\t\tsearch(phrase: string): void {\n\t\t\t\tsearchCommandInvoker.search(phrase, structureId);\n\t\t\t},\n\n\t\t\tclearSearchPhrase(): void {\n\t\t\t\tsearchCommandInvoker.search('', structureId);\n\t\t\t},\n\n\t\t\t// View port\n\t\t\tscrollToTop(): void {\n\t\t\t\tstructureCommandDispatcher.scrollToTop(structureId);\n\t\t\t},\n\n\t\t\tscrollToBottom(): void {\n\t\t\t\tstructureCommandDispatcher.scrollToBottom(structureId);\n\t\t\t},\n\n\t\t\tscrollToRowByIndex(index: number): void {\n\t\t\t\tstructureCommandDispatcher.scrollToIndex(index, structureId);\n\t\t\t},\n\n\t\t\tsetTheme(theme: string | GuiTheme): void {\n\t\t\t\tgridThemeCommandInvoker.setTheme(theme, schemaId, structureId);\n\t\t\t},\n\n\t\t\tsetVerticalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setVerticalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetHorizontalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setHorizontalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetRowColoring(rowColoring: string | GuiRowColoring): void {\n\t\t\t\tgridThemeCommandInvoker.setRowColoring(rowColoring, schemaId);\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/domain-read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from './structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(aggregateId: AggregateId): StructureReadModelRoot;\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<OriginItemEntity>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<OriginItemEntity>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tgetPreparedItems(structureId: StructureId): Array<OriginItemEntity> {\n\t\treturn this.origin.get(structureId.getId());\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../../grid/core/domain-read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/domain-read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SourceWarehouse implements Warehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tgetEntities(structureId: StructureId = structureGlobalId): Array<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   // tap(() => {\n\t\t\t\t\t   //    console.log('onEntities');\n\t\t\t\t\t   // }),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<Array<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n\tgetPreparedEntities(structureId: StructureId = structureGlobalId): Array<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelRepository extends AggregateArchive<Array<FieldReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldReadModel>> {\n\t\treturn this.fieldReadModelRepository.on(structureId);\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\n\n\n@Injectable()\nexport class SourceCommandInvoker extends Reactive implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.fieldWarehouse\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId = structureGlobalId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tlet selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tlet item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId = structureGlobalId): Observable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId = structureGlobalId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId = structureGlobalId): Observable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { schemaGlobalId } from '../../../../../schema/core/domain-read/schema.global-id';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { structureGlobalId } from '../../../../../structure/core/api/structure.global-id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring';\nimport { GuiRowColoring, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { GuiGridThemeConverter } from './gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './coloring/gui.grid.row-coloring.converter';\n\nexport class GuiGridThemeCommandInvoker {\n\n\tconstructor(private readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly gridThemeConverter: GuiGridThemeConverter,\n\t\t\t\tprivate readonly gridRowColoringConverter: GuiGridRowColoringConverter) {\n\t}\n\n\tsetTheme(theme: string | GuiTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tconst schemaTheme = this.gridThemeConverter.convert(theme);\n\n\t\tthis.schemaCommandInvoker.setTheme(schemaTheme, schemaId, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: RowColoring = this.gridRowColoringConverter.convert(rowColoring);\n\n\t\tthis.schemaCommandInvoker.setRowColoring(schemaRowColoring, schemaId);\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, schemaId);\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, schemaId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/schema-theme';\nimport { SchemaId } from '../api/schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from './structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/core/api/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './schema-theme';\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { structureGlobalId } from '../../../structure/core/api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../../structure/core/api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GuiGridGateway } from './gui.grid-gateway';\nimport { guiGridProviders } from './gui.grid.providers';\n\nimport { structureParentComponent } from '../../../../structure/grid/feature/structure-parent-component';\n\nimport { GuiGridIdGenerator } from './register/gui.grid-id.generator';\nimport { GuiGridRegister } from './register/gui.grid.register';\nimport { GuiGridApi, GuiGridApiProvider } from './api/gui.grid.api-provider';\nimport { FormationCommandInvoker } from '../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { SourceCommandInvoker } from '../../../../structure/source/core/api/source.command-invoker';\nimport { FormationWarehouse } from '../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../structure/search/core/api/search.command-invoker';\nimport { GuiGridThemeCommandInvoker } from './theme/gui.grid.theme.command-invoker';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureCommandDispatcher } from '../../../../structure/core/api/structure.command-dispatcher';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './gui.grid.component.html',\n\tstyleUrls: [\n\t\t'../gui.grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiGridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GuiGridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class.gui-grid]': `\"true\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiGridComponent extends GuiGridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tpublic api: GuiGridApi;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly gridRegister: GuiGridRegister,\n\t\t\t\tprivate readonly gridIdGenerator: GuiGridIdGenerator,\n\t\t\t\t// delegate\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly sourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tprivate readonly searchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly structureCommandDispatcher: StructureCommandDispatcher\n\t) {\n\t\tsuper();\n\n\t\tthis.gridThemeCommandInvoker = new GuiGridThemeCommandInvoker(\n\t\t\tthis.schemaCommandInvoker,\n\t\t\tthis.gridThemeConverter,\n\t\t\tthis.gridRowColoringConverter\n\t\t);\n\t}\n\n\tngOnInit() {\n\t\tthis.initApi();\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn this.api;\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n\tprivate initApi(): void {\n\t\tthis.api = new GuiGridApiProvider(\n\t\t\tthis.structureRef.structureId,\n\t\t\tthis.structureRef.schemaReadModelRootId,\n\t\t\tthis.formationCommandDispatcher,\n\t\t\tthis.formationWarehouse,\n\t\t\tthis.sourceCommandDispatcher,\n\t\t\tthis.searchCommandInvoker,\n\t\t\tthis.gridThemeCommandInvoker,\n\t\t\tthis.structureCommandDispatcher\n\t\t).provide();\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { ChangeDetectorRef } from '@angular/core';\n\nimport { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n\n\tprivate viewRendered: boolean = false;\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef) {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewRendered = true;\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewRendered()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewRendered(): boolean {\n\t\treturn this.viewRendered;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../grid/core/domain-read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/domain-read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse implements Warehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\n\n\n@Component({\n\tselector: 'gui-paging[position]',\n\ttemplateUrl: 'paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-paging]': `\"true\"`\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t} else {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t}\n\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisPagingVisible(): boolean {\n\t\treturn this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-select',\n\ttemplateUrl: `paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-select]': `\"true\"`\n\t}\n})\nexport class PagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-navigator',\n\ttemplateUrl: `alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-navigator]': `\"true\"`\n\t}\n})\nexport class AlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandInvoker) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-pages',\n\ttemplateUrl: `alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-pages]': `\"true\"`\n\t}\n})\nexport class AlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandInvoker) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/domain-read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(structureId, PagesizeChangedEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandInvoker,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-navigator',\n\ttemplateUrl: `paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-navigator]': `\"true\"`\n\t}\n})\nexport class PagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-stats',\n\ttemplateUrl: `paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-stats]': `\"true\"`\n\t}\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Observable } from 'rxjs';\nimport { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\n\nexport abstract class TranslationService {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): Observable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, Pipe, PipeTransform } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TranslationService } from '../core/api/translation.service';\nimport { Translation } from '../core/api/translation';\n\n\n@Pipe({\n\tname: 'translate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: Subscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationService) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\n\nimport { TranslationService } from '../api/translation.service';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\n\n\n@Injectable()\nexport class TranslationServiceImpl extends TranslationService {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: Subject<Translation> = new ReplaySubject(1);\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): Observable<Translation> {\n\t\treturn this.dictionary$\n\t\t\t\t   .asObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationService } from '../core/api/translation.service';\nimport { TranslationServiceImpl } from '../core/domain/translation.service-impl';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t],\n\tentryComponents: []\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationService, useClass: TranslationServiceImpl }];\n\t}\n\n\tconstructor(@Optional() apiModule: TranslationApiModule) {\n\t\tsuper();\n\t\tif (apiModule === null) {\n\t\t\tthrow new Error('TranslationApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.13.0\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../domain-read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../../api/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends AggregateArchive<SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaRowColoringRepository extends AggregateArchive<SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse implements Warehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly schemaManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager-dialog\">\n\t\t\t<gui-structure-schema-manager></gui-structure-schema-manager>\n\t\t</div>\n\t`\n})\nexport class StructureDialogSchemaManagerComponent {\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../structure/grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../core/api/schema-theme';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<div *ngIf=\"infoPanelConfig.isSourceSizeEnabled()\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\t\t{{'infoPanelShowing' | translate}} <b>{{totalItemsSize | numberFormatter}}</b> {{'infoPanelItems' | translate}}\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<span *ngIf=\"preparedItemsSize !== totalItemsSize\"\n\t\t\t\t\t\t  gui-active-filter-menu-trigger>\n\t\t\t\t\t\t{{'infoPanelShowing' | translate}}\n\t\t\t\t\t\t<b>{{preparedItemsSize | numberFormatter}}</b>\n\t\t\t\t\t\t{{'infoPanelOutOf' | translate}}\n\t\t\t\t\t\t<b>{{totalItemsSize | numberFormatter}}</b>\n\t\t\t\t\t\t{{'infoPanelItems' | translate}}\n\t\t\t\t\t</span>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isSchemaManagerEnabled()\"\n\t\t\t\t\t (click)=\"openSchemaManager()\">\n\t\t\t\t\t<gui-structure-schema-manager-icon [gui-tooltip]=\"themeManagerTooltipText\"></gui-structure-schema-manager-icon>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isColumnsManagerEnabled()\"\n\t\t\t\t\t (click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon [gui-tooltip]=\"columnManagerTooltipText\"></gui-structure-column-manager-icon>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isInfoDialogEnabled()\"\n\t\t\t\t\t (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon [gui-tooltip]=\"infoTooltipText\"></gui-structure-info-icon>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from './composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupRepository extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], true);\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../domain-read/composition.read-model-root-repository';\nimport { CompositionId } from './composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from '../domain-read/composition.read-mode-root';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class CompositionWarehouse implements Warehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId = compositionGlobalId): Observable<GroupCollection> {\n\t\treturn this.compositionGroupRepository.on(compositionId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from './composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from './column/column.id';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class CompositionCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogThemeService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/domain-read/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring';\n\n\n@Component({\n\tselector: 'gui-structure-schema-manager',\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager\">\n\t\t\t<div class=\"gui-dialog-title\">{{'themeManagerModalTitle' | translate}}</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>{{'themeManagerModalTheme' | translate}}</span>\n\t\t\t\t<gui-select [options]=\"themes\"\n\t\t\t\t\t\t\t[selected]=\"selectedTheme\"\n\t\t\t\t\t\t\t[placeholder]=\"'Select theme'\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleTheme($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>{{'themeManagerModalRowColoring' | translate}}</span>\n\t\t\t\t<gui-select [options]=\"coloring\"\n\t\t\t\t\t\t\t[selected]=\"selectedRowColoring\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleRowColoring($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<gui-checkbox [checked]=\"verticalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleVerticalGrid($event)\">{{'themeManagerModalVerticalGrid' | translate}}\n\t\t\t</gui-checkbox>\n\t\t\t<gui-checkbox [checked]=\"horizontalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleHorizontalGrid($event)\">{{'themeManagerModalHorizontalGrid' | translate}}\n\t\t\t</gui-checkbox>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends Reactive {\n\n\tcoloring = Object.keys(SchemaRowColoring)\n\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t .filter((val) => !Number.isInteger(val));\n\n\tthemes = Object.keys(SchemaTheme)\n\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t   .filter((val) => !Number.isInteger(val));\n\n\tselectedRowColoring: string;\n\tselectedTheme: string;\n\tverticalGrid: boolean;\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandService: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaReadModelService: SchemaWarehouse,\n\t\t\t\tprivate readonly dialogThemeService: FabricDialogThemeService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaReadModelService\n\t\t\t.onRowColoring(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = SchemaRowColoring[rowColoring];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = SchemaTheme[schemaTheme];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onVerticalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHorizontalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleTheme(theme: string): void {\n\t\tthis.schemaCommandService.setTheme(this.toTheme(theme), this.schemaReadModelRootId);\n\t\tthis.dialogThemeService.nextTheme(theme);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: string): void {\n\t\tthis.schemaCommandService.setRowColoring(this.toRowColoring(schemaRowColoring), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandService.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandService.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-schema-manager-icon';\n\n\n@Component({\n\tselector: 'gui-structure-schema-manager-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"24\" viewBox=\"0 0 32 24\">\n\t\t\t<g transform=\"translate(0 -4)\">\n\t\t\t\t<path id=\"Path_303\" data-name=\"Path 303\" d=\"M23.337,4H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_304\" data-name=\"Path 304\" d=\"M11.662,4h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_305\" data-name=\"Path 305\" d=\"M0,4H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_306\" data-name=\"Path 306\" d=\"M23.337,22H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_307\" data-name=\"Path 307\" d=\"M0,22H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_308\" data-name=\"Path 308\" d=\"M11.662,22h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_309\" data-name=\"Path 309\" d=\"M23.337,13H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_310\" data-name=\"Path 310\" d=\"M11.662,13h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_311\" data-name=\"Path 311\" d=\"M0,13H8.662v6H0Z\"/>\n\t\t\t</g>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-schema-manager-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureSchemaManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<h3>Active filters</h3>\n\n\t\t<gui-active-filter-list></gui-active-filter-list>\n\n\t\t<div>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly renderer: Renderer2,\n\t\t\t\tprivate readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-filter-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-icon]': 'true'\n\t}\n})\nexport class FilterIconComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class QuickFilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeRepository extends AggregateArchive<FilterTypeMap> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterRepository extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesRepository extends AggregateArchive<UniqueValuesReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledRepository,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledRepository,\n\t\t\t\tprivate readonly filterTypeRepository: FilterTypeRepository,\n\t\t\t\tprivate readonly uniqueValuesRepository: UniqueValuesRepository,\n\t\t\t\tprivate readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.onFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.onQuickFilterEnabled(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): Observable<FilterTypeMap> {\n\t\treturn this.filterTypeRepository.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): Observable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterRepository.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): Observable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\n\n\n@Component({\n\tselector: 'gui-filter-menu',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<gui-active-filter-list></gui-active-filter-list>\n\t\t</div>\n\n\t\t<!--\t\t<div>-->\n\t\t<!--\t\t\t<gui-column-selector-->\n\t\t<!--\t\t\t\t\t[columns]=\"columns\"-->\n\t\t<!--\t\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">-->\n\t\t<!--\t\t\t</gui-column-selector>-->\n\n\t\t<!--\t\t\t<ng-container *ngIf=\"selectedColumn\">-->\n\t\t<!--\t\t\t\t{{selectedColumn.getFieldId()}}-->\n\t\t<!--\t\t\t</ng-container>-->\n\t\t<!--\t\t</div>-->\n\n\t\t<div>\n\t\t\t<gui-field-selector\n\t\t\t\t\t[fields]=\"fields\"\n\t\t\t\t\t(fieldSelected)=\"onFieldSelect($event)\">\n\t\t\t</gui-field-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedColumn\">\n\t\t\t\t{{selectedColumn.getFieldId()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<gui-filter-type-selector\n\t\t\t\t\t[filterTypes]=\"filterTypes\"\n\t\t\t\t\t(filterTypeSelected)=\"onFilterTypeSelect($event)\">\n\t\t\t</gui-filter-type-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedFilterTypeId\">\n\t\t\t\t{{selectedFilterTypeId.toString()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\n\t\t\t<gui-filter-value *ngIf=\"selectedFilterTypeId\"\n\t\t\t\t\t\t\t  (valueChanged)=\"onValueChanged($event)\">\n\t\t\t</gui-filter-value>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t[disabled]=\"!selectedFilterTypeId\"\n\t\t\t\t\t(click)=\"addFilter()\">\n\t\t\t\tFilter\n\t\t\t</button>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[secondary]=\"true\"\n\t\t\t\t\t(click)=\"removeAllFilters()\">\n\t\t\t\tClear filters\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-menu]': 'true'\n\t}\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilterTypes(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.fieldWarehouse\n\t\t\t.onFields(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { ChangeDetectionStrategy, Component, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { filterContainerToken } from './config/filter-container-token';\nimport { FilterContainerRef } from './config/filter-container-ref';\n\n@Component({\n\tselector: 'gui-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-filter-icon-wrapper\">\n\t\t\t<gui-filter-icon></gui-filter-icon>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-filter-menu-trigger]': 'true'\n\t},\n\tstyleUrls: [\n\t\t'./style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-column-selector[columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../common/cdk/pure-component';\n\n@Component({\n\tselector: 'gui-filter-type-selector[filterTypes]',\n\ttemplate: `\n\n\t\t<ng-container>\n\t\t\tFilter Type:\n\t\t</ng-container>\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let filterType of filterTypes\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(filterType)\">\n\t\t\t\t{{filterType.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n\n@Component({\n\tselector: 'gui-filter-value',\n\ttemplate: `\n\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"filterForm\">\n\n\t\t\t<input formControlName=\"filterValue\"/>\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-value]': `\"true\"`\n\t}\n})\nexport class FilterValueComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(private readonly formBuilder: FormBuilder) {\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'gui-active-filter-list',\n\ttemplate: `\n\n\t\t<div *ngFor=\"let filter of activeFilters\">\n\t\t\t{{filter.getText()}}\n\t\t\t<span (click)=\"removeFilter(filter)\">X</span>\n\t\t</div>\n\n\t\t<gui-active-search></gui-active-search>\n\n\n\t`\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\n\n@Component({\n\tselector: 'gui-field-selector[fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\n\n\n@Injectable()\nexport class SearchWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'gui-active-search',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"phrase\">\n\t\t\t<div>\n\t\t\t\tActive search by:\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<gui-chip>{{phrase}}</gui-chip>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button gui-button\n\t\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t\t(click)=\"clearSearch()\">\n\t\t\t\t\tClear search\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './menu/value/filter-value.component';\nimport { ActiveFilterListComponent } from './active-filters/active-filter-list.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { ActiveSearchComponent } from './active-filters/search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tActiveFilterListComponent,\n\t\tFieldSelectorComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent,\n\t\tActiveFilterListComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../filter/feature/filter-menu.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source-counter/feature/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingManagerFactory } from '../../../../paging/core/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../paging/core/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../paging/core/api/paging.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingRepository } from '../../../../paging/core/api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../paging/core/api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationDispatcher } from '../../../../source/core/domain/formation/formation.dispatcher';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(commandDispatcher, formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType): void {\n\t\tsuper.toggleSelectedRow(selectedRow, type, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedRepository } from '../../../../source/core/api/formation/row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends FormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\trowSelectedArchive: RowSelectedRepository,\n\t\t\t\trowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tsourceWarehouse: SourceWarehouse) {\n\t\tsuper(rowSelectedArchive, rowSelectionModeRepository, sourceWarehouse);\n\t}\n\n\t@Override\n\tonRowSelectedReadModel(): Observable<RowSelectedReadModel> {\n\t\treturn super.onRowSelectedReadModel(this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { FilterConfig } from '../../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tscrollToTop(): void {\n\t\tsuper.scrollToTop(this.structureId);\n\t}\n\n\t@Override\n\tscrollToBottom(): void {\n\t\tsuper.scrollToBottom(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../domain-read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../domain-read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../core/api/structure.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureReadModelRepository } from '../../../core/domain-read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../core/domain-read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { FieldWarehouse } from '../../../../field/core/api/field.warehouse';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tfieldWarehouse: FieldWarehouse,\n\t\t\t\tsourceReadModelService: SourceWarehouse) {\n\t\tsuper(commandDispatcher, sourceDispatcher, fieldWarehouse, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureReadModelRepository } from '../../../core/domain-read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../../source/core/api/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../../source/core/api/prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends SourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn super.getEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<Array<OriginItemEntity>> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { CompositionDispatcher } from '../../../../../composition/core/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../../composition/core/domain-read/definition/column-definition-id';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionDispatcher, compositionGroupRepository);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setGroups(configs, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../../composition/core/domain-read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionRepository, compositionGroupRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../search/core/domain/search.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../../../search/core/api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../search/core/api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../search/core/api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/core/domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/core/domain-read/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/core/domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/core/domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaRowColoring } from '../../../../../schema/core/api/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/core/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { Source } from '../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/domain-read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/domain-read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/domain-read/structure.read-model-root-id';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/domain-read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionRepository extends AggregateArchive<number> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { VerticalFormationRepository } from '../../../../vertical-formation/core/api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionRepository } from '../../../../vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tpositionRepository: VerticalFormationScrollBarPositionRepository) {\n\t\tsuper(verticalFormationRepository, positionRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n\n\t@Override\n\tonScrollBarPosition(): Observable<number> {\n\t\treturn super.onScrollBarPosition(this.structureId);\n\t}\n}\n","import { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { SearchDispatcher } from '../../../search/core/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandInvoker, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandInvoker, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../domain/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../../summaries/core/api/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { SimpleChanges } from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(simpleChanges: SimpleChanges): void {\n\n\t\tconst config: Array<ColumnConfig | MultiColumnConfig> = simpleChanges.columns.currentValue;\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(simpleChanges.columns.currentValue);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: Array<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tconst columnConfigs: Array<ColumnConfig> = [],\n\t\t\tgroupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs.push(...(config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ChangeDetectorRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { PagingConfig } from '../../../paging/core/api/paging-config';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/schema-row-coloring';\nimport { SortingConfig } from '../../../sorting/core/api/sorting-config';\nimport { FilterConfig } from '../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { SummariesConfig } from '../../../summaries/core/api/summaries-config';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { RowColoring } from '../../../../schema/core/api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { InfoPanelConfig } from '../panel/info/info-panel.config';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelection } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\nimport { GuiLocalization, GuiRowClass, GuiRowStyle } from '../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationService } from '../../../../l10n/core/api/translation.service';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationService\n\t) {\n\t\tsuper(changeDetectorRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelection !== undefined && simpleChanges.rowSelection.currentValue !== undefined) {\n\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns !== undefined && simpleChanges.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(simpleChanges);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.rowClass !== undefined && simpleChanges.rowClass.currentValue !== undefined) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\n\t\tif (simpleChanges.rowStyle !== undefined && simpleChanges.rowStyle.currentValue !== undefined) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(searching, this.structureId);\n\t\t}\n\n\t\tif (simpleChanges.localization !== undefined && simpleChanges.localization.currentValue !== undefined) {\n\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getData()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\n\t\tthis.componentInitialized();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n\tprivate isInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate isNotInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionReadModelRootId } from '../domain-read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/domain-read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly s$ = new Subject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tswitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   take(1),\n\t\t\t\t\t\t\t\t   map((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   let item = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getData(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.s$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<SelectedRow>> {\n\t\treturn this.s$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureReadModelRootId } from '../../../grid/core/domain-read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): Observable<string> {\n\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/row-coloring/row-coloring-set.event';\nimport { SchemaId } from './schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValue: SelectedRow;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getData(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getData();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/api/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../grid/core/domain-read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/domain-read/structure.read-model-root';\n\n\n@Injectable()\nexport class SortingWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../../grid/core/domain-read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SortingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { StructureId } from '../../../core/api/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../api/enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandInvoker,\n\t\tSearchWarehouse,\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-search-icon',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class SearchIconComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../core/api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../core/api/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\n\n\n@Component({\n\tselector: 'gui-search-bar',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t\t<gui-search-icon></gui-search-icon>\n\t\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\" class=\"gui-clear-search-icon\" (click)=\"clear()\"></span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-search-bar]': `\"true\"`\n\t},\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(changeDetectorRef);\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\t// SearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tlet matcher = fieldConfig.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './field.read-model-repository';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.api';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelRepository,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (let element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tlet rows = Array.from(this.selectedRows),\n\t\t\t\tequal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(rowChangedEvent.getSelectedRows(), rowChangedEvent.isAllSelected(), rowChangedEvent.isAllUnselected());\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { StructureOriginChangedEventHandler } from '../api/origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from '../api/prepared/structure.prepared-items.event-handler';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginRepository,\n\t\tStructurePreparedItemsRepository,\n\t\tSourceConverter,\n\n\t\tSourceCommandInvoker,\n\t\tSourceWarehouse,\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaTheme } from '../api/schema-theme';\nimport { SchemaRowColoring } from '../api/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../api/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler implements DomainEventHandler<SchemaId, SchemaThemeSetEvent> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.themeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaHorizontalGridRepository } from './schema.horizontal-grid.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaHorizontalGridSetEvent> {\n\n\tconstructor(private horizontalGridRepository: SchemaHorizontalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n\thandle(event: SchemaHorizontalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGridRepository.next(event.getAggregateId(), event.getHorizontalGrid());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaRowColoringRepository } from './schema.row-coloring.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n\n@Injectable()\nexport class SchemaRowColoringSetEventHandler implements DomainEventHandler<SchemaId, RowColoringSetEvent> {\n\n\tconstructor(private schemaRowColoringRepository: SchemaRowColoringRepository) {\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n\thandle(event: RowColoringSetEvent): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.schemaRowColoringRepository.next(event.getAggregateId(), event.getRowColoring());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaVerticalGridRepository } from './schema.vertical-grid.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaVerticalGridSetEvent> {\n\n\tconstructor(private schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n\thandle(event: SchemaVerticalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.schemaVerticalGridRepository.next(event.getAggregateId(), event.getVerticalGrid());\n\t\t}\n\n\t}\n\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaTheme } from '../../api/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaThemeSetEventHandler } from '../domain-read/theme/schema-theme-set.event-handler';\nimport { SchemaHorizontalGridSetEventHandler } from '../domain-read/horizontal-grid/schema.horizontal-grid-set.event-handler';\nimport { SchemaRowColoringSetEventHandler } from '../domain-read/row-coloring/schema.row-coloring-set.event-handler';\nimport { SchemaVerticalGridSetEventHandler } from '../domain-read/vertical-grid/schema.vertical-grid-set.event-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from '../api/schema.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridSetEventHandler),\n\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { schemaKey } from './schema.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.commandHandlers()\n\t\t\t],\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandInvoker,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository,\n\t\tSchemaHorizontalGridRepository,\n\t\tSchemaRowColoringRepository,\n\t\tSchemaVerticalGridRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/api/structure.id';\nimport { CompositionId } from '../../../composition/core/api/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../core/domain-read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandDispatcher } from '../../core/api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/feature/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/feature/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationService } from '../../../l10n/core/api/translation.service';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\tSchemaFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t// '../../../structure/paging/feature/style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t// '../../../structure/filter/feature/style/structure-filter.ngx.scss',\n\t\t'../../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure]': `\"true\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationService,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tcd,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandDispatcher.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.cd.detectChanges();\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueValuesReadModel } from '../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { switchMap } from 'rxjs/operators';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [dropdownTextTranslation]=\"dropdownTextTranslation\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t\t<gui-unique-value-list\n\t\t\t\t\t\t\t[fieldId]=\"column.getFieldId()\">\n\t\t\t\t\t\t</gui-unique-value-list>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tswitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\tthis.config = config;\n\t\t\t\t\treturn this.translationService.onTranslation();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean = false;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onGroups(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((collection: GroupCollection) => {\n\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchPhraseRepository } from '../../../search/core/api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../search/core/api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\t// this.formationWarehouse\n\t\t// \t.onRowSelectedReadModel()\n\t\t// \t.pipe(\n\t\t// \t\tfilter(() => !this.checkboxSelection),\n\t\t// \t\tthis.takeUntil()\n\t\t// \t)\n\t\t// \t.subscribe((rowSelected: RowSelectedReadModel) => {\n\t\t//\n\t\t// \t\tthis.clearSelectedRows();\n\t\t//\n\t\t// \t\trowSelected.getAll()\n\t\t// \t\t\t\t   .forEach((id: string) => {\n\t\t//\n\t\t// \t\t\t\t\t   const strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t// \t\t\t\t\t\t   selectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\t\t//\n\t\t// \t\t\t\t\t   if (selectedRowEl) {\n\t\t// \t\t\t\t\t\t   this.renderer.addClass(selectedRowEl, 'selected');\n\t\t// \t\t\t\t\t   }\n\t\t// \t\t\t\t   });\n\t\t// \t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.reRender();\n\t\t });\n\n\t\tthis.schemaRowClassArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t\tconsole.log(this.schemaRowClass);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.schemaRowStyleArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `./structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t} else {\n\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowStyle() {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\n\t\t\tlet rowStyle = this.rowStyle.style || '';\n\n\t\t\tthis.renderRowStyles(rowStyle);\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\n\t\t\tlet rowStyle = this.rowStyle.styleFunction(this.entity.getData(), this.index);\n\n\t\t\tthis.renderRowStyles(rowStyle);\n\t\t}\n\n\t}\n\n\tprivate renderRowStyles(rowStyle: string = '') {\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.renderer2.setStyle(this.elRef.nativeElement, separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t\treturn rowStyle;\n\t}\n\n\tprivate updateRowClass() {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (this.entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(this.entity.getData(), this.index) || '';\n\t\t\t}\n\t\t}\n\n\t\tif (clazz) {\n\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, clazz);\n\t\t}\n\t}\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getData());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getData());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `./structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/schema-row-coloring';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/domain-read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSourceWarehouse.onEntities(),\n\t\t\tthis.compositionWarehouse.onTemplateColumns()\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onScrollBarPosition()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((scrollPosition: number) => {\n\n\t\t\t\tthis.elementRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../core/domain-read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: FilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterToggledEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/domain-read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/domain-read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../api/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(aggregateId: AggregateId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(aggregateId.getId());\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/domain-read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (let fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (let filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (let filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../api/structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from '../api/structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.api';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (let value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (let entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (let field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (let notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tlet map = new Map();\n\n\t\tfor (let field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from '../api/structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SummariesManager } from '../../domain/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../summaries/core/api/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from '../domain-read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\tStructureCommandDispatcher\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-search-bar></gui-search-bar>\n<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"dropdownTextTranslation\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortAscending' | translate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortDescending' | translate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\t{{'headerMenuMainTabColumnSortNone' | translate}}\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\t{{'headerMenuMainTabHideColumn' | translate}}\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\t{{'headerMenuMainTabMoveLeft' | translate}}\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\t{{'headerMenuMainTabMoveRight' | translate}}\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-icon',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'gui-unique-value-list',\n\ttemplate: `\n\n\t\t<gui-checkbox [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  (changed)=\"toggleAllSelect()\">\n\t\t\tSelect all\n\t\t</gui-checkbox>\n\t\t<div class=\"gui-unique-value-list\">\n\t\t\t<div *ngFor=\"let value of uniqueValues\">\n\t\t\t\t<gui-checkbox [checked]=\"value.isEnabled()\"\n\t\t\t\t\t\t\t  (changed)=\"toggleSelect(value)\">\n\t\t\t\t\t{{value.getValue()}}\n\t\t\t\t</gui-checkbox>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"gui-unique-value-list-actions\">\n\t\t\t<!--\t\t\t<button gui-button-->\n\t\t\t<!--\t\t\t\t\t[outline]=\"true\"-->\n\t\t\t<!--\t\t\t\t\t(click)=\"clearFilters()\">-->\n\t\t\t<!--\t\t\t\tCancel-->\n\t\t\t<!--\t\t\t</button>-->\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t(click)=\"clearFilters()\">\n\t\t\t\tClear\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: ['../style/unique-value-list.ngx.scss']\n})\nexport class UniqueValueListComponent extends SmartComponent {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandDispatcher.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandDispatcher.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/domain-read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): Observable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../../summaries/core/api/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../../summaries/core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from './structure.summaries-translations';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.countTooltip\">{{'summariesCount' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.distinctTooltip\">{{'summariesDist' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\t{{'summariesSum' | translate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.averageTooltip\">{{'summariesAvg' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.minTooltip\">\n\t\t\t\t\t\t\t{{'summariesMin' | translate}}\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.maxTooltip\">\n\t\t\t\t\t\t\t{{'summariesMax' | translate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.medTooltip\">{{'summariesMed' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesTruthy' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesFalsy' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef);\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TitlePanelConfig } from './title-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FooterPanelConfig } from './footer-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-empty-source[items]',\n\ttemplateUrl: `empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [`\n\t\t.gui-empty-source div {\n\t\t\tdisplay: block;\n\t\t\tpadding: 42px 8px;\n\t\t}\n\t`],\n\thost: {\n\t\t'[class.gui-empty-source]': 'true'\n\t}\n})\nexport class EmptySourceComponent {\n\n\t@Input()\n\titems: Array<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule {\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandInvoker) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges): void {\n\n\t\tif (simpleChanges.theme2 !== undefined && simpleChanges.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledRepository } from './quick-filter-enabled.repository';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './filter-enabled.repository';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: FilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FilterTypeRepository } from './filter-type.repository';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeRepository: FilterTypeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeRepository.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterRepository } from './active-filter.repository';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tlet activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (let key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesRepository } from './unique-values.repository';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tlet uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tlet uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeRepository,\n\t\tActiveFilterRepository,\n\t\tUniqueValuesRepository,\n\t\tFilterEnabledRepository,\n\t\tQuickFilterEnabledRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'gui-select-all',\n\ttemplate: `\n\n\t\t<gui-checkbox *ngIf=\"modeMulti\"\n\t\t\t\t\t  [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  [gui-tooltip]=\"'Select'\"\n\t\t\t\t\t  (changed)=\"toggleSelectAll()\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-select-all]': 'true'\n\t}\n})\nexport class SelectAllComponent extends SmartComponent {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onMode(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../domain/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.api';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from '../api/enabled/structure.summaries-enabled-set.event-handler';\nimport { summariesProviders } from './summaries.providers';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...summariesProviders\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSummariesCommandDispatcher } from './structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './structure-summaries.ui-events-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\nimport { StructureSummariesWarehouse } from './structure-summaries.warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\tStructureSummariesCommandDispatcher,\n\t\tStructureSummariesUiEventsRepository,\n\n\t\tStructureSummariesRepository,\n\t\tStructureSummariesWarehouse\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t\tsuper();\n\t\tif (summariesApiModule === null) {\n\t\t\tthrow new Error('SummariesApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionRepository } from './vertical-formation.scroll-bar-position.repository';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.api';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureVerticalFormationWarehouse } from './structure-vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\tStructureVerticalFormationWarehouse,\n\t\tVerticalFormationScrollBarPositionRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t\tsuper();\n\t\tif (verticalFormationApiModule === null) {\n\t\t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t\t}\n\t}\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../api/composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../../api/composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../../api/composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionReadModelRootId } from '../../../domain-read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../../api/composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from '../api/composition.api';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from './composition.api';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport {\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\t...inMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupRepository,\n\n\t\tCompositionCommandInvoker,\n\t\tCompositionWarehouse,\n\t\tCompositionEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-string-edit]': 'true'\n\t}\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, fb);\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className;\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\t...components\n\t],\n\texports: [\n\t\t...exportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t\tsuper();\n\t\tif (compositionApiModule === null) {\n\t\t\tthrow new Error('CompositionApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\n\n\n@Component({\n\tselector: 'gui-structure-header-groups[groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../empty-source/feature/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchApiModule } from '../../../search/core/api/search.api-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { StructureThemeGateway } from '../../feature/gateway/schema/structure-theme.gateway';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { FilterApiModule } from '../../../filter/core/api/filter.api-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SourceApiModule } from '../../../source/core/api/source.api-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.api';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...SummariesDomainModule.commandHandlers(),\n\t\t\t...VerticalFormationDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers(),\n\t\t\t...SummariesDomainModule.domainEventHandlers(),\n\t\t\t...FieldDomainModule.domainEventHandlers(),\n\t\t\t...VerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tSearchApiModule,\n\tFilterApiModule,\n\tSourceApiModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GuiGridComponent } from '../../feature/grid/gui.grid.component';\n\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\n\nimport { GuiGridIdGenerator } from '../../feature/grid/register/gui.grid-id.generator';\nimport { GuiGridRegister } from '../../feature/grid/register/gui.grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiGridComponent\n];\n\nconst providers = [\n\tGuiGridIdGenerator,\n\tGuiGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiGridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}