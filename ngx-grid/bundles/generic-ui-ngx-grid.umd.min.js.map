{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/domain-api/grid.api.ts","ng://@generic-ui/ngx-grid/structure/field/domain/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/domain-api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure.global-id.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/source/structure-source.warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.event-repository.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.manager.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.domain-module.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.api-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-grid/common/cdk/pure-component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.id.ts","ng://@generic-ui/ngx-grid/schema/domain-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/schema/domain-api/read/schema.global-id.ts","ng://@generic-ui/ngx-grid/schema/domain-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.global-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/structure/field/domain/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/formation/structure-formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/formation/structure-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/field.ui-archive.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-grid/structure/search/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/formation/read/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/source/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/feature-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/structure/search/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/gateway/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.warehouse.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.event-repository.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.api-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-grid/structure/search/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-grid/structure/search/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/structure/search/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.manager.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/enabled/searching.repository.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.domain-module.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.api-module.ts","ng://@generic-ui/ngx-grid/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/field.ui-model.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/field.ui-converter.ts","ng://@generic-ui/ngx-grid/structure/field/domain/field-id.generator.ts","ng://@generic-ui/ngx-grid/structure/field/domain/data-type/base.field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/data-type/field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/structure/field/domain/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/domain/data-type/type.field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/field.collection.ts","ng://@generic-ui/ngx-grid/structure/field/domain/field-collection.factory.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/structure/field/domain/field.domain-module.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/field.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/field.api-module.ts","ng://@generic-ui/ngx-grid/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/filter/read/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/filter/read/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/filter/structure-filter.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/feature-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/filter/read/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/filter/read/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/structure.sorter.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/sorter.id.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/icon/structure.filter-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/column-selector/structure.column-selector.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/schema/domain-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/horizontal-grid/schema.horizontal-grid-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/row-coloring/schema.row-coloring-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/structure/empty-source/feature/empty-source.component.ts","ng://@generic-ui/ngx-grid/structure/empty-source/feature/empty-source.feature-module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/gateway/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/domain-api/gui.grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnSortingConverter","sortingConfig","GridColumnCellEditingConverter","config","GridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","map","convertColumn","guiColumn","columnConfig","header","field","width","summaries","sorting","cellEditing","matcher","GridThemeConverter","theme","convertToGuiTheme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","convertToGuiRowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","PagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class.gui-grid]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","isStopped","complete","takeUntil","SmartComponent","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getId","toString","getPaging","StructureReadModelRootId","id","toAggregateId","StructureId","ReadModelRootId","toReadModelRootId","AggregateId","structureGlobalId","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","getPagingConfig","Command","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","PagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","StructureSourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","PagingDisplayModeArchive","onValue","Archive","TOP","BOTTOM","PagingComponent","renderer2","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","structurePagingDisplayModeArchive","alternativeDisplay","position","PagingPosition","removeClass","addClass","mode","size","sourceSize","isPagingVisible","isPagerTop","isPagerBottom","[class.gui-paging]","changeDetection","ChangeDetectionStrategy","OnPush","Renderer2","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","ReadModelObject","Boolean","Number","PagingSelectComponent","[class.gui-paging-select]","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","Math","ceil","[class.gui-alternative-paging-navigator]","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","[class.gui-alternative-paging-pages]","NextPageEvent","aggregateId","DomainEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventRepository","pagingReadModelService","getAggregateId","switchMap","DomainEventBus","PageChangedAggregateEvent","toDomainEvent","AggregateEvent","PagesizeChangedAggregateEvent","PagingManager","logger","events","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","aggregate","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","getType","pageChangedEvent","pagesizeChangedEvent","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingConverter","PagingApiModule","ApiModule","PagingNavigatorComponent","[class.gui-paging-navigator]","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","Error","name","PagingStatsComponent","firstItemIndex","lastItemIndex","[class.gui-paging-stats]","PagingFeatureModule","forComponent","FabricModule","FeatureModule","NumberFormatterPipe","transform","number","replace","Pipe","NumberFormatterModule","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","AggregateArchive","SchemaCssClassesRepository","theme$","setCssClass","schemaId","SchemaHorizontalGridRepository","SchemaRowColoringRepository","SchemaVerticalGridRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onSingleTheme","onCssClasses","StructureDialogColumnManagerService","injector","schemaReadModelRepository","structureThemeConverter","fabricDialogService","open","compositionId","readModelId","Injector","parent","FabricDialogService","StructureInfoPanelConfig","infoDialog","columnsManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","StructureInfoPanelArchive","StructureInfoPanelComponent","renderer","sourceReadModelService","dialog","schemaReadModelRootId","menuColumnManagerService","structureInfoPanelEnabledArchive","infoModal","infoPanel","infoPanelConfig","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","CompositionReadModelRootRepository","ReadModelRootRepository","compositionGlobalId","CompositionWarehouse","compositionRepository","onWidth","composition","getWidth","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","fieldId","getFieldId","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","CreateCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","createComposition","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureColumnManagerComponent","compositionCommandService","compositionReadModelService","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class]","[class.gui-icon]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelConfigConverter","StructureInfoPanelModule","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","toggle","changed","ColumnQueryComponent","ContentChild","HTML","CellValue","text","CellValueType","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","getById","save","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","cellView","templateFunction","cellValue","fromDataType","getCellView","getTemplateFunction","AbstractColumnEntity","columnField","presentation","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setEnabled","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","context","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","FieldId","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","columnFieldId","cellEditingEnabled","isBooleanDataType","getValue","entity","searchPhrase","findValue","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","pos","ph","join","ColumnDefinition","sort","setField","setTemplateFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","uid","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","ReadModelRoot","CompositionReadModelRootConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","toReadModel","InMemoryReadModelStore","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","payload","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","has","ifPresent","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","data","isArray","createColumn","getColumn","convertWidth","columnEntity","RandomStringGenerator","generate","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","ColumnField","ColumnFieldFactory","CompositionEventRepository","onColumnsChanged","onContainerWidthChanged","getPayload","commandProviders","readProviders","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","direction","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","createEvent","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","AggregateRoot","CompositionAggregateFactory","AggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","getAggregateRepository","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","className","[class.gui-text-view]","Attribute","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","ofMessageType","dir","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","FabricDatePickerModule","defineAggregate","registerMultiDomainEventHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingWarehouse","Observable","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","StructureFormationDispatcher","formationDispatcher","setDefaultFormation","LocalFormationCommandDispatcher","FormationRepository","onFormation","getFormation","StructureFormationWarehouse","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationWarehouse","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","StructureFilterCommandDispatcher","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","getPosition","StructureSetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","getTheme","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","LocalStructureCommandDispatcher","StructureWarehouse","LocalStructureWarehouse","FieldUiArchive","FieldUiRepository","structureFieldUiArchive","onFields","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandDispatcher","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","fields","LocalSourceCommandDispatcher","LocalSourceWarehouse","LocalCompositionCommandDispatcher","columnDefId","LocalCompositionWarehouse","SetConfigSearchingCommand","searchConfig","SetSearchPhraseCommand","phrase","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","search","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setTheme","setRowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","SchemaRowColoring","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","SelectedRowsList","rowIds","isRowSelected","equalsById","getIds","Formation","selectedRows","selectedRowsList","FormationConverter","rows","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ItemEntity","version","getData","getUiId","getVersion","isEven","isOdd","StructureReadModelRootConverter","formationConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","RowHeightSetEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","StructureVerticalFormationWarehouse","verticalFormationRepository","LocalStructureVerticalFormationWarehouse","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","removeThemeCssClasses","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","ENTER","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldsInitedEvent","getFields","ColumnParams","StructureColumnInputHandler","columnFieldFactory","compositionCommandDispatcher","simpleChanges","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","StructureGateway","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","searchCommandDispatcher","fieldCommandDispatcher","sourceCommandService","sourceEventService","schemaCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structureRowSelectEnabledArchive","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","structureColumnInputHandler","rowDetail","titlePanel","footerPanel","nextConfig","rowSelecting","editMode","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","setSortingConfig","filtering","quickFilters","searching","onItemSelected","onSourceEdited","values","state","StructureCellEditState","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureWarehouse","str","StructureColumnMenuConfig","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","onEvent","EventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","selectedRowValues","StructureRowDetailService","drawerService","ref","turnOn","turnOff","close","FabricDrawerService","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","SetSortingCommand","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandDispatcher","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","searchableFields","removeSearchFilters","searchedItems","Set","add","from","SearchManagerFactory","SearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","SearchPhraseSetEventHandler","structureSearchPhraseRepository","forEvent","SearchingRepository","enabled$","onSearchingEnabled","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","domainEventHandlers","registerDomainEventHandler","SearchCommandDispatcher","searchDispatcher","SearchWarehouse","searchPhraseRepository","onSearchEnabled","SearchApiModule","SearchIconComponent","SearchComponent","searchWarehouse","verticalFormationWarehouse","searchingEnabled","controlsConfig","FORM_SEARCH_NAME","searchForm","stopObserveChanges","clear","reset","searchInputSubscription","debounceTime","[class.gui-search-bar]","SearchFeatureModule","searchApiModule","FieldUiModel","FieldUiConverter","convertOne","FieldIdGenerator","BaseField","matchers","accessorMethod","getKey","getMatchers","getSearchMatcher","val","getSortValue","getSortMatcher","getSearchValue","Field","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","isSummaries","isSummariesEnabled","assignDefaultSummaries","UnknownField","one","two","filterPhrase","NumberField","numOne","numTwo","StringField","toLowerCase","strOne","strTwo","localeCompare","BooleanField","booleanOne","booleanTwo","sureBoolTwo","DateField","dateOne","dateTwo","FieldMatchers","sortMatcher","searchMatcher","getMatcher","Optional","of","FieldFactory","fieldIdGenerator","fieldConfig","fieldMatchers","createMatchers","columnType","TypeField","mapNumber","callback","ifNumber","entityOne","entityTwo","valueOne","valueTwo","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","initFields","typeField","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","InitFieldsCommandHandler","createFields","fieldTypes","FieldDomainModule","FieldCommandDispatcher","FieldApiModule","FieldFeatureModule","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","sourceCommandDispatcher","compositionEventRepository","structureSearchEventService","structureDefinition","structureReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","setStyle","[class.gui-structure]","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterWarehouse","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationReadModelService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","structureReadModelWarehouse","compositionWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","FormationSetEvent","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","StructureFilter","filterId","setFilterValue","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","allFields","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","multi","summariesProviders","StructureConfigFilterSetEventHandler","StructureConfigQuickFilterSetEventHandler","FieldsInitedEventHandler","fieldUiArchive","fieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterCollection","searchManager","fieldCollection","pagingManager","filterManager","initTheme","calculateSource","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setFormation","typeFields","setConfig","removeSearchPhrase","searchedEntities","ents","ae","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","FormationAggregateFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceDomainEventHandlers","sourceProviders","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureFilterIconComponent","StructureFilterMenuComponent","onColumnSelect","selectedColumnId","[class.gui-structure-filter-menu]","StructureFilterMenuTriggerComponent","structureComponent","openDrawer","structureElement","StructureColumnSelectorComponent","columnSelected","options","onSelectChange","StructureFilterMenuModule","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","publishFromAggregate","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","SchemaHorizontalGridSetEventHandler","horizontalGridRepository","SchemaRowColoringSetEventHandler","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","EmptySourceComponent","[class.gui-empty-source]","EmptySourceFeatureModule","StructureThemeGateway","theme2","Directive","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GuiGridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any) => string;\n}\n\nexport interface GuiTitlePanel {\n\tenabled?: boolean;\n\ttemplate?: string | ((title: any) => string);\n}\n\nexport interface GuiFooterPanel {\n\tenabled?: boolean\n\ttemplate?: string | ((title: any) => string);\n}\n\nexport interface GuiInfoPanel {\n\tenabled?: boolean;\n\tinfoDialog?: boolean;\n\tcolumnsManager?: boolean;\n\tsourceSize?: boolean\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../domain-api/grid.api';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../lib/structure/domain/structure/summaries/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../grid.index';\n\n\nexport class GridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tlet columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../domain-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/column/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column/column-cell-editing.config';\n\nexport class GridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../domain-api/grid.api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column/column-align';\n\nexport class GridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../domain-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnSummariesConverter } from './summaries/grid.column-summaries.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\nimport { GridColumnCellEditingConverter } from './cell-editing/grid.column-cell-editing.converter';\nimport { GridColumnAlignConverter } from './align/grid.column-align.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../domain-api/grid.api';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../domain-api/grid.api';\nimport { RowColoring } from '../../../../../schema/domain-api/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../domain-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/domain-api/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../structure/paging/feature/mode/paging-display-mode';\nimport { GuiPaging, GuiPagingDisplay } from '../../../domain-api/grid.api';\nimport { PagingConfig } from '../../../../../structure/paging/domain-api/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiFooterPanel,\n\tGuiInfoPanel,\n\tGuiPaging,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme,\n\tGuiTitlePanel\n} from '../../domain-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/domain-api/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { RowColoring } from '../../../../schema/domain-api/row-coloring';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPaging;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | GuiInfoPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../../structure/paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/feature/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class.gui-grid]': `\"true\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../lib/structure/domain-api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../lib/structure/domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../domain-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../../domain-api/paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\n\nimport { Paging } from '../domain-api/read/paging';\nimport { PagingWarehouse } from '../domain-api/paging.warehouse';\nimport { PagingCommandDispatcher } from '../domain-api/paging.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../../lib/structure/domain-api/source/structure-source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\n\n\n@Component({\n\tselector: 'gui-paging[position]',\n\ttemplateUrl: 'paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-paging]': `\"true\"`\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandDispatcher,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t} else {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t}\n\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisPagingVisible(): boolean {\n\t\treturn this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-select',\n\ttemplateUrl: `paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-select]': `\"true\"`\n\t}\n})\nexport class PagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-navigator',\n\ttemplateUrl: `alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-navigator]': `\"true\"`\n\t}\n})\nexport class AlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-pages',\n\ttemplateUrl: `alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-pages]': `\"true\"`\n\t}\n})\nexport class AlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandDispatcher } from './paging.command-dispatcher';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandDispatcher,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-navigator',\n\ttemplateUrl: `paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-navigator]': `\"true\"`\n\t}\n})\nexport class PagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-stats',\n\ttemplateUrl: `paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-stats]': `\"true\"`\n\t}\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../domain-api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.12.1\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../domain-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../domain-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends AggregateArchive<SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaRowColoringRepository extends AggregateArchive<SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<div *ngIf=\"infoPanelConfig.isSourceSizeEnabled()\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isColumnsManagerEnabled()\"\n\t\t\t\t\t  (click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isInfoDialogEnabled()\"\n\t\t\t\t\t  [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/domain/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/domain/data-type/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/domain/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../../structure/field/domain/data-type/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../../structure/field/domain/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../domain-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../../structure/field/domain/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/domain/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className;\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<Type<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t], [\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandDispatcher } from '../../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../../../structure/paging/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../../structure/paging/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../../structure/paging/domain-api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../../../structure/paging/domain-api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../../structure/paging/domain-api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureFormationDispatcher {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureFormationDispatcher } from '../../../domain-api/formation/structure-formation.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends StructureFormationDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from './read/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from './read/selected-rows/selected-rows-list';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class StructureFormationWarehouse {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFormationWarehouse } from '../../../domain-api/formation/structure-formation.warehouse';\nimport { FormationRepository } from '../../../domain-api/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain-api/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends StructureFormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../domain-api/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../../../../../structure/field/domain/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../../structure/field/domain/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../domain-api/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../domain/source/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../domain-api/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { FilterConfig } from '../../../domain-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../domain-api/filter/quick-filters.config';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../domain-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { FieldUiModel } from './field.ui-model';\n\n\n@Injectable()\nexport class FieldUiArchive extends AggregateArchive<Array<FieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FieldUiArchive } from './field.ui-archive';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FieldUiModel } from './field.ui-model';\n\n\n@Injectable()\nexport class FieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: FieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.on(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { FieldUiRepository } from '../../../../structure/field/domain-api/read/field.ui-repository';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: FieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../domain-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { FieldUiRepository } from '../../../../../structure/field/domain-api/read/field.ui-repository';\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: FieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../domain-api/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain-api/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends StructureSourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/domain-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/domain-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/domain-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/domain-api/composition.global-id';\nimport { FieldId } from '../../../../../structure/field/domain/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SearchConfig } from '../../domain-api/search-config';\n\n\nexport class SetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../domain-api/search-config';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../../structure/search/domain/search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../../../structure/search/domain-api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../../structure/search/domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../../structure/search/domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/domain-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/domain-api/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/domain-api/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/domain-api/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/domain-api/vertical-grid/schema.vertical-grid.repository';\nimport { schemaGlobalId } from '../../../../../schema/domain-api/read/schema.global-id';\nimport { SchemaRowColoring } from '../../../../../schema/domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../lib/structure/domain-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../lib/structure/domain-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../../schema/domain-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/read/formation';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/read/formation.converter';\nimport { PagingConverter } from '../../../../structure/paging/domain-api/read/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../domain-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../domain-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/feature-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../domain/source/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../structure/search/domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../domain-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { StructureFormationDispatcher } from '../../domain-api/formation/structure-formation.dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { StructureFormationWarehouse } from '../../domain-api/formation/structure-formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../domain-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../domain-api/source/structure-source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { SearchDispatcher } from '../../../../structure/search/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../../schema/domain-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../domain-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { SimpleChanges } from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../../structure/field/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../../structure/field/domain-api/field.config';\nimport { FieldsInitedEvent } from '../../../../../structure/field/domain/init/fields-inited.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { TypeField } from '../../../../../structure/field/domain/data-type/type.field';\nimport { ColumnFieldId } from '../../../../composition/domain/column/field/column-field.id';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { CompositionCommandDispatcher } from '../../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { ColumnFieldFactory } from '../../../../composition/domain/column/field/colum-field.factory';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandDispatcher: CompositionCommandDispatcher) {\n\t}\n\n\thandle(simpleChanges: SimpleChanges): void {\n\n\t\tconst columns = simpleChanges.columns.currentValue;\n\t\tconst fieldConfigs = simpleChanges.columns.currentValue;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs as Array<FieldConfig>);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tcolumns = event.fieldConfigs,\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandDispatcher.setColumns(params, this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../../../structure/sorting/domain-api/sorting-config';\nimport { FilterConfig } from '../../domain-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../domain-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../../structure/search/domain-api/search-config';\nimport { SummariesConfig } from '../../domain-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../domain-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../../domain-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../domain-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/domain-api/composition.event-repository';\nimport { FormationEventService } from '../../domain-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../domain-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { SearchEventRepository } from '../../../../structure/search/domain-api/search.event-repository';\nimport { SchemaCommandDispatcher } from '../../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/domain-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../../schema/domain-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { InfoPanelConfig } from '../panel/info/info-panel.config';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandDispatcher } from '../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { SearchCommandDispatcher } from '../../../../structure/search/domain-api/search.command-dispatcher';\nimport { FieldCommandDispatcher } from '../../../../structure/field/domain-api/field.command-dispatcher';\nimport { InitFieldsCommand } from '../../../../structure/field/domain/init/init-fields.command';\nimport { FieldsInitedEvent } from '../../../../structure/field/domain/init/fields-inited.event';\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\nimport { filter } from 'rxjs/operators';\nimport { FieldConfig } from '../../../../structure/field/domain-api/field.config';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../composition/domain/column/field/colum-field.factory';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprotected constructor(\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandDispatcher,\n\t\tprotected searchCommandDispatcher: SearchCommandDispatcher,\n\t\tprotected fieldCommandDispatcher: FieldCommandDispatcher,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandDispatcher: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns !== undefined && simpleChanges.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(simpleChanges);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(searching, this.structureId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SelectedRowToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureWarehouse } from '../structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureWarehouse\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class SearchEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SearchPhraseSetDomainEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => event.getTheme())\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventService } from '../../domain-api/formation/formation-event.service';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventService,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SortingConfig } from '../../domain-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SortOrder } from '../../../../lib/composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../field/domain/data-type/field.id';\nimport { CompositionId } from '../../../lib/composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../lib/composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SortingCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureReadModelRepository } from '../../../lib/structure/domain-api/read/structure.read-model-repository';\nimport { AggregateId } from '@generic-ui/hermes';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../lib/structure/domain-api/read/structure.read-model-root';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class SortingWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class SortingEventRepository {\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandDispatcher } from './sorting.command-dispatcher';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandDispatcher,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../domain-api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../lib/structure/domain/source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { OriginItemEntity } from '../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { DataType } from '../../field/domain/data-type/data-type';\nimport { TypeField } from '../../field/domain/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): Type<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): Type<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../domain-api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../domain-api/enabled/config-searching-set.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher,\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler),\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandDispatcher {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\n\n\n@Injectable()\nexport class SearchWarehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandDispatcher } from './search.command-dispatcher';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandDispatcher,\n\t\tSearchWarehouse,\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-search-icon',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class SearchIconComponent {\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\nimport { StructureWarehouse } from '../../../lib/structure/domain-api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../lib/structure/domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { SearchCommandDispatcher } from '../domain-api/search.command-dispatcher';\nimport { SearchWarehouse } from '../domain-api/search.warehouse';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n\tselector: 'gui-search-bar',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t\t<gui-search-icon></gui-search-icon>\n\t\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\" class=\"gui-clear-search-icon\" (click)=\"clear()\"></span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-search-bar]': `\"true\"`\n\t},\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\t// REMOVE\n\t\tthis.verticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\t// this.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls['searchPhrase']\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../domain-api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\t// SearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required')\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/data-type/field.id';\nimport { DataType } from '../../domain/data-type/data-type';\n\n\nexport class FieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldUiModel } from './field.ui-model';\nimport { TypeField } from '../../domain/data-type/type.field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<FieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): FieldUiModel {\n\n\t\treturn new FieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { SummariesType } from '../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../lib/composition/domain/column/column-summaries.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../lib/structure/domain/source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../lib/structure/domain/source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../lib/structure/domain/source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../lib/structure/domain/source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../lib/structure/domain/source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(fieldConfig: FieldConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tlet matcher = fieldConfig.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../lib/composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\nimport { FieldConfig } from '../domain-api/field.config';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tif (!fieldConfigs) {\n\t\t\treturn;\n\t\t}\n\n\t\tfieldConfigs.forEach((fieldConfig: FieldConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(fieldConfig);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs = command.getFieldConfigs();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), fieldConfigs, fieldTypes));\n\t}\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\n\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandDispatcher {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldUiArchive } from './read/field.ui-archive';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldUiRepository } from './read/field.ui-repository';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandDispatcher } from './field.command-dispatcher';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandDispatcher,\n\n\t\tFieldUiArchive,\n\t\tFieldUiConverter,\n\t\tFieldUiRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldApiModule extends ApiModule {\n\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../domain-api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../domain-api/read/structure.read-model-root';\nimport { PagingCommandDispatcher } from '../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../domain-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../domain-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/domain-api/composition.event-repository';\nimport { FormationEventService } from '../domain-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../domain-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/domain-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { SearchEventRepository } from '../../../structure/search/domain-api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/domain-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../../structure/sorting/feature/sorting.feature-module';\nimport { SortingCommandDispatcher } from '../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { SearchFeatureModule } from '../../../structure/search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../../structure/field/feature/field.feature-module';\nimport { SearchCommandDispatcher } from '../../../structure/search/domain-api/search.command-dispatcher';\nimport { FieldCommandDispatcher } from '../../../structure/field/domain-api/field.command-dispatcher';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../composition/domain/column/field/colum-field.factory';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t// '../../../structure/paging/feature/style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'./style/structure-filter.ngx.scss',\n\t\t'../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure]': `\"true\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandDispatcher,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandDispatcher,\n\t\t\t\tsearchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tfieldCommandDispatcher: FieldCommandDispatcher,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandDispatcher.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SortingCommandDispatcher } from '../../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from './read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './read/structure.quick-filter.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../domain-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterWarehouse } from '../../domain-api/filter/structure-filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../domain-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { StructureFormationDispatcher } from '../../domain-api/formation/structure-formation.dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureFormationWarehouse } from '../../domain-api/formation/structure-formation.warehouse';\nimport { SelectedRowsList } from '../../domain-api/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../domain-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { SearchPhraseRepository } from '../../../../structure/search/domain-api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../../structure/search/domain-api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: StructureFormationDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../domain-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureSourceWarehouse } from '../../domain-api/source/structure-source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { StructureFormationWarehouse } from '../../domain-api/formation/structure-formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: StructureFormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { StructureFilterWarehouse } from '../../domain-api/filter/structure-filter.warehouse';\nimport { SearchWarehouse } from '../../../../structure/search/domain-api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../domain-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Override } from '../../../../../common/cdk/decorators';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class FormationSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'FormationSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureFilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../../structure/paging/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../../structure/paging/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../../structure/paging/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../../structure/paging/domain/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../../structure/sorting/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../../structure/search/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './feature-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../domain-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './feature-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../../../../../structure/field/domain/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../../../../../structure/field/domain/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../../../../../structure/field/domain/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../../../../../structure/field/domain/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../domain-api/filter/filter-config';\nimport { SearchConfig } from '../../../../../structure/search/domain-api/search-config';\nimport { QuickFiltersConfig } from '../../../domain-api/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../../../../../structure/field/domain/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../../../structure/field/domain/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { AllFieldTypes } from '../../../../../../structure/field/domain/data-type/all-field-types';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/data-type/data-type';\nimport { Field } from '../../../../../../../structure/field/domain/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/data-type/data-type';\nimport { Field } from '../../../../../../../structure/field/domain/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/data-type/data-type';\nimport { Field } from '../../../../../../../structure/field/domain/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/data-type/data-type';\nimport { Field } from '../../../../../../../structure/field/domain/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/data-type/data-type';\nimport { Field } from '../../../../../../../structure/field/domain/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../../../../../structure/field/domain/data-type/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { TypeField } from '../../../../../structure/field/domain/data-type/type.field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler implements DomainEventHandler<StructureId, StructureConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t}\n\n\tforEvent(): Type<StructureConfigFilterSetEvent> {\n\t\treturn StructureConfigFilterSetEvent;\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, StructureConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tforEvent(): Type<StructureConfigQuickFilterSetEvent> {\n\t\treturn StructureConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldUiArchive } from './field.ui-archive';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldUiArchive: FieldUiArchive,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): Type<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldUiArchive.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.ofMessageType('StructureSummariesChangedEvent')),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../../../../structure/field/domain/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../../../structure/paging/domain/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from '../../../../structure/sorting/domain/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from '../../../../structure/field/domain/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { SortingConfig } from '../../../../structure/sorting/domain-api/sorting-config';\nimport { FieldId } from '../../../../structure/field/domain/data-type/field.id';\nimport { StructureSorter } from '../../../../structure/sorting/domain/structure.sorter';\nimport { FilterConfig } from '../../domain-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../domain-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../../structure/search/domain-api/search-config';\nimport { SearchManager } from '../../../../structure/search/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../../../structure/field/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../../../structure/field/domain-api/field.config';\nimport { Override } from '../../../../common/cdk/decorators';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { TypeField } from '../../field/domain/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../domain-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../../field/domain/data-type/field.id';\nimport { OriginItemEntity } from '../../../lib/structure/domain/source/origin/origin-item-entity';\nimport { SortOrder } from '../../../lib/composition/domain/column/sort/sort-order';\nimport { TypeField } from '../../field/domain/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../../../structure/paging/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../../../structure/field/domain/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../../../structure/sorting/domain/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from '../../../../structure/search/domain/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from './read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from './read/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { StructureFormationDispatcher } from './structure-formation.dispatcher';\nimport { StructureFormationWarehouse } from './structure-formation.warehouse';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tStructureFormationDispatcher,\n\tStructureFormationWarehouse\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): Type<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): Type<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceDomainEventHandlers = [\n\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../domain-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): Type<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): Type<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FilterManagerFactory } from '../domain/structure/filter/filter.manager-factory';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { StructureConfigFilterSetEventHandler } from './filter/read/structure.config-filter-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from './filter/read/structure.config-quick-filter-set.event-handler';\nimport { FieldsInitedEventHandler } from '../../../structure/field/domain-api/read/fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureFilterWarehouse } from './filter/structure-filter.warehouse';\nimport { StructureFilterRepository } from './filter/read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './filter/read/structure.quick-filter.repository';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { formationProviders } from './formation/formation.providers';\nimport { sourceProviders } from './source/source.providers';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFilterManagerFactory,\n\tStructureFilterCommandDispatcher,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureDomainEventHandlers = [\n\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler),\n\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructureConfigQuickFilterSetEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructureConfigFilterSetEventHandler),\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher,\n\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-search-bar></gui-search-bar>\n<!--\t\t<gui-structure-filter-menu-trigger></gui-structure-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-filter-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureFilterIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-filter-menu',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-column-selector\n\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">\n\t\t</gui-structure-column-selector>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-filter-menu]': 'true'\n\t}\n})\nexport class StructureFilterMenuComponent {\n\n\tselectedColumnId: string;\n\n\tonColumnSelect(value: string): void {\n\t\tthis.selectedColumnId = value;\n\t}\n}\n","import { Component, Inject, Injector } from '@angular/core';\nimport { FabricDrawerService } from '@generic-ui/fabric';\nimport { structureComponentToken } from '../structure-component-token';\nimport { StructureComponent } from '../structure.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\n\n@Component({\n\tselector: 'gui-structure-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-structure-filter-icon-wrapper\">\n\t\t\t<gui-structure-filter-icon></gui-structure-filter-icon>\n\t\t</div>\n\t`\n})\nexport class StructureFilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(structureComponentToken) private readonly structureComponent: StructureComponent) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst structureElement = this.structureComponent.getElementRef();\n\n\t\tthis.drawerService.open(structureElement, StructureFilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-structure-column-selector',\n\ttemplate: `\n\n\t\t<gui-select\n\t\t\t\t[options]=\"options\"\n\t\t\t\t(optionChanged)=\"onSelectChange($event)\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnSelectorComponent extends SmartComponent {\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<string>();\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\toptions: Array<string> = [];\n\n\tconstructor(private readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.options = columns.map((column: CellTemplateWithContext) => column.getColumnDefinitionId().toString());\n\t\t\t});\n\t}\n\n\tonSelectChange(columnId: string): void {\n\t\tthis.columnSelected.emit(columnId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureFilterIconComponent } from './icon/structure.filter-icon.component';\nimport { StructureFilterMenuTriggerComponent } from './structure.filter-menu-trigger.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\nimport { StructureColumnSelectorComponent } from './column-selector/structure.column-selector.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureFilterIconComponent,\n\t\tStructureFilterMenuComponent,\n\t\tStructureFilterMenuTriggerComponent,\n\t\tStructureColumnSelectorComponent\n\t],\n\texports: [\n\t\tStructureFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tStructureFilterMenuComponent\n\t]\n})\nexport class StructureFilterMenuModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureFilterMenuModule } from '../../filter/structure.filter-menu.module';\n\nimport { SearchFeatureModule } from '../../../../../structure/search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tStructureFilterMenuModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../composition/domain-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\nimport { SortingCommandDispatcher } from '../../../../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { CompositionId } from '../../../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../../../domain/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/domain-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/domain-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../domain-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../domain-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n\tforEvents(): Array<Type<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler implements DomainEventHandler<SchemaId, SchemaThemeSetEvent> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t}\n\n\tforEvent(): Type<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.themeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaHorizontalGridRepository } from './schema.horizontal-grid.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaHorizontalGridSetEvent> {\n\n\tconstructor(private horizontalGridRepository: SchemaHorizontalGridRepository) {\n\t}\n\n\tforEvent(): Type<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n\thandle(event: SchemaHorizontalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGridRepository.next(event.getAggregateId(), event.getHorizontalGrid());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaRowColoringRepository } from './schema.row-coloring.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\n\n\n@Injectable()\nexport class SchemaRowColoringSetEventHandler implements DomainEventHandler<SchemaId, RowColoringSetEvent> {\n\n\tconstructor(private schemaRowColoringRepository: SchemaRowColoringRepository) {\n\t}\n\n\tforEvent(): Type<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n\thandle(event: RowColoringSetEvent): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.schemaRowColoringRepository.next(event.getAggregateId(), event.getRowColoring());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaHorizontalGridSetEventHandler } from './horizontal-grid/schema.horizontal-grid-set.event-handler';\nimport { SchemaRowColoringSetEventHandler } from './row-coloring/schema.row-coloring-set.event-handler';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t],\n\t\t\t[\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository,\n\t\tSchemaHorizontalGridRepository,\n\t\tSchemaRowColoringRepository,\n\t\tSchemaVerticalGridRepository,\n\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../domain-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TitlePanelConfig } from './title-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FooterPanelConfig } from './footer-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-empty-source[items]',\n\ttemplateUrl: `empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [`\n\t\t.gui-empty-source div {\n\t\t\tdisplay: block;\n\t\t\tpadding: 42px 8px;\n\t\t}\n\t`],\n\thost: {\n\t\t'[class.gui-empty-source]': 'true'\n\t}\n})\nexport class EmptySourceComponent {\n\n\t@Input()\n\titems: Array<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule {\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../../schema/domain-api/schema.command-dispatcher';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandDispatcher) {}\n\n\tngOnChanges(simpleChanges: SimpleChanges): void {\n\n\t\tif (simpleChanges.theme2 !== undefined && simpleChanges.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/domain-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { StructureSourceWarehouse } from './source/structure-source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { sourceCommandHandlers, sourceDomainEventHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../../schema/domain-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/panel/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/panel/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../structure/paging/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../structure/empty-source/feature/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../structure/sorting/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../structure/sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../structure/field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../structure/field/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../structure/search/feature/search.feature-module';\nimport { SearchApiModule } from '../../../structure/search/domain-api/search.api-module';\nimport { SearchDomainModule } from '../../../structure/search/domain/search.domain-module';\nimport { StructureThemeGateway } from '../feature/gateway/schema/structure-theme.gateway';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...sourceDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tSearchApiModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../feature/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/domain-api/structure.module';\n\nimport { GridIdGenerator } from '../feature/grid/register/grid-id.generator';\nimport { GridRegister } from '../feature/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiGridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}